openapi: 3.0.0
info:
  title: Zoom API
  description: >-
    The Zoom API allows developers to access information from Zoom. You can use
    this API to build private services or public applications on the [Zoom App
    Marketplace](http://marketplace.zoom.us). To learn how to get your
    credentials and create private/public applications, read our [Authorization
    Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).

    All endpoints are available via `https` and are located at
    `api.zoom.us/v2/`.


    For instance you can list all users on an account via
    `https://api.zoom.us/v2/users/`.


    Contact Support:
     Name: Zoom Developers
     Email: developersupport@zoom.us
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    oauth2Auth:
      type: http
      scheme: oauth2
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: accounts
  - name: accounts > {account Id}
  - name: accounts > {account Id} > phone
  - name: accounts > {account Id} > phone > sip trunk/trunks
  - name: accounts > {account Id} > settings
  - name: accounts > {account Id} > settings > virtual backgrounds
  - name: accounts > {account Id} > billing
  - name: accounts > {account Id} > billing > invoices
  - name: accounts > {account Id} > plans
  - name: accounts > {account Id} > plans > base
  - name: accounts > {account Id} > plans > addons
  - name: accounts > {account Id} > lock settings
  - name: accounts > {account Id} > sip trunk
  - name: accounts > {account Id} > sip trunk > numbers
  - name: accounts > {account Id} > sip trunk > trunks
  - name: accounts > {account Id} > sip trunk > callout countries
  - name: accounts > {account Id} > sip trunk > internal numbers
  - name: phone
  - name: phone > numbers
  - name: phone > numbers > {number Id}
  - name: phone > sites
  - name: phone > sites > {site Id}
  - name: phone > users
  - name: phone > users > {user Id}
  - name: phone > users > {user Id} > settings
  - name: phone > users > {user Id} > settings > {setting Type}
  - name: phone > users > {user Id} > call logs
  - name: phone > users > {user Id} > phone numbers
  - name: phone > users > {user Id} > calling plans
  - name: phone > settings
  - name: phone > setting templates
  - name: phone > setting templates > {template Id}
  - name: phone > locations
  - name: phone > locations > {location Id}
  - name: phone > call logs
  - name: phone > devices
  - name: phone > devices > {device Id}
  - name: phone > external contacts
  - name: phone > external contacts > {external Contact Id}
  - name: phone > call queues
  - name: phone > call queues > {call Queue Id}
  - name: phone > call queues > {call Queue Id} > phone numbers
  - name: phone > call queues > {call Queue Id} > members
  - name: phone > auto receptionists
  - name: phone > auto receptionists > {auto Receptionist Id}
  - name: phone > auto receptionists > {auto Receptionist Id} > phone numbers
  - name: phone > common area phones
  - name: phone > common area phones > {common Area Phone Id}
  - name: phone > common area phones > {common Area Phone Id} > phone numbers
  - name: phone > common area phones > {common Area Phone Id} > calling plans
  - name: phone > blocked list
  - name: phone > blocked list > {blocked List Id}
  - name: phone > shared line groups
  - name: phone > shared line groups > {shared Line Group Id}
  - name: phone > shared line groups > {shared Line Group Id} > members
  - name: phone > shared line groups > {shared Line Group Id} > phone numbers
  - name: phone > metrics/call logs
  - name: sip phones
  - name: sip phones > {phone Id}
  - name: rooms
  - name: rooms > account profile
  - name: rooms > account settings
  - name: rooms > locations
  - name: rooms > locations > {location Id}
  - name: rooms > locations > {location Id} > settings
  - name: rooms > locations > structure
  - name: rooms > {room Id}
  - name: rooms > {room Id} > settings
  - name: rooms > {room Id} > devices
  - name: chat
  - name: chat > users
  - name: chat > users > {user Id}
  - name: chat > users > {user Id} > messages
  - name: chat > users > {user Id} > messages > {message Id}
  - name: chat > users > {user Id} > channels
  - name: chat > users > {user Id} > channels > {channel Id}
  - name: chat > users > {user Id} > channels > {channel Id} > members
  - name: chat > users > me/contacts
  - name: chat > channels/{channel Id}
  - name: chat > channels/{channel Id} > members
  - name: chat > channels/{channel Id} > members > me
  - name: groups
  - name: groups > {group Id}
  - name: groups > {group Id} > members
  - name: groups > {group Id} > members > {member Id}
  - name: groups > {group Id} > settings
  - name: groups > {group Id} > settings > virtual backgrounds
  - name: groups > {group Id} > lock settings
  - name: h323/devices
  - name: h323/devices > {device Id}
  - name: tracking fields
  - name: tracking fields > {field Id}
  - name: im
  - name: im > groups
  - name: im > groups > {group Id}
  - name: im > groups > {group Id} > members
  - name: im > chat
  - name: im > chat > sessions
  - name: im > chat > messages
  - name: im > chat > messages > {message id}
  - name: im > users
  - name: users
  - name: users > {user Id}
  - name: users > {user Id} > meetings
  - name: users > {user Id} > assistants
  - name: users > {user Id} > schedulers
  - name: users > {user Id} > settings
  - name: users > {user Id} > settings > virtual backgrounds
  - name: users > {user Id} > tsp
  - name: users > {user Id} > tsp > {tsp Id}
  - name: users > {user Id} > token
  - name: users > {user Id} > webinars
  - name: meetings/{meeting Id}
  - name: meetings/{meeting Id} > registrants
  - name: meetings/{meeting Id} > registrants > {registrant Id}
  - name: meetings/{meeting Id} > registrants > questions
  - name: meetings/{meeting Id} > polls
  - name: meetings/{meeting Id} > polls > {poll Id}
  - name: meetings/{meeting Id} > recordings
  - name: meetings/{meeting Id} > recordings > {recording Id}
  - name: meetings/{meeting Id} > recordings > settings
  - name: meetings/{meeting Id} > recordings > registrants
  - name: meetings/{meeting Id} > recordings > registrants > questions
  - name: meetings/{meeting Id} > livestream
  - name: past meetings
  - name: past meetings > {meeting UUID}
  - name: past meetings > {meeting Id}
  - name: metrics
  - name: metrics > meetings
  - name: metrics > meetings > {meeting Id}
  - name: metrics > meetings > {meeting Id} > participants
  - name: metrics > webinars
  - name: metrics > webinars > {webinar Id}
  - name: metrics > webinars > {webinar Id} > participants
  - name: metrics > zoomrooms
  - name: metrics > client
  - name: metrics > client > feedback
  - name: metrics > issues/zoomrooms
  - name: report
  - name: report > users
  - name: report > meetings/{meeting Id}
  - name: report > webinars/{webinar Id}
  - name: report > billing
  - name: report > chat/sessions
  - name: roles
  - name: roles > {role Id}
  - name: roles > {role Id} > members
  - name: tsp
  - name: webinars/{webinar Id}
  - name: webinars/{webinar Id} > panelists
  - name: webinars/{webinar Id} > registrants
  - name: webinars/{webinar Id} > registrants > questions
  - name: webinars/{webinar Id} > registrants > {registrant Id}
  - name: webinars/{webinar Id} > polls
  - name: webinars/{webinar Id} > polls > {poll Id}
  - name: webinars/{webinar Id} > livestream
  - name: past webinars
  - name: past webinars > {webinar Id}
paths:
  /accounts/{accountId}/phone/sip_trunk/trunks:
    post:
      tags:
        - accounts > {account Id} > phone > sip trunk/trunks
      summary: Assign SIP trunks
      description: >-
        A [Master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        owner can use this API to assign SIP (Session Initiation Protocol)
        trunks to a subaccount.


        **Scopes:** `phone:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sip_trunks:
                  type: string
                  description: SIP trunk configurations.
                  example: >-
                    [{"id":"occaecat tempor","name":"master SIP Trunk
                    name","carrier_account":"labore nisi pariatur
                    elit"},{"id":"irure ut minim","name":"master SIP Trunk
                    name","carrier_account":"laborum non exerc"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sip_trunks:
                  - id: '123111'
                    name: test1
                    carrier_account: '9866'
                  - id: '123444'
                    name: test2
                    carrier_account: '986677'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/phone/sip_trunk/trunks/{sipTrunkId}:
    patch:
      tags:
        - accounts > {account Id} > phone > sip trunk/trunks
      summary: Update SIP trunk details
      description: >-
        Use this API to update a subaccount's assigned SIP (Session Initiation
        Protocol) trunk information.


        **Scopes:** `phone:master` <br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the SIP Trunk.
                  example: esse laboris dolore magna
                carrier_account:
                  type: string
                  description: Account associated with the carrier.
                  example: reprehenderit cillum dolore consequat
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the sub account.
          example: Excepteur aute deserunt occaecat ea
        - name: sipTrunkId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the SIP trunk.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/phone/setup:
    post:
      tags:
        - accounts > {account Id} > phone
      summary: Set up a Zoom Phone account
      description: >-
        After assigning a Zoom phone license to an account, an admin or account
        owner can proceed with the [initial Zoom phone set
        up](https://support.zoom.us/hc/en-us/articles/360001297663-Getting-started-with-Zoom-Phone-admin-#h_5ae26a3a-290c-4a8d-b3b0-6384ed267b13)
        using this API.


        **Scopes:** `phone:write:admin`, `phone:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Paid account 
         * A Pro or a higher account plan 
        * Master account option enabled
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                extension_number:
                  type: integer
                  description: >-
                    (Required) Specify extension number that will be associated
                    with the owner of the account.
                  example: '800'
                emergency_address:
                  type: string
                  description: (Required) Specify emergency address for the account.
                  example: >-
                    {"country":"minim non ut aute
                    esse","address_line1":"dolore","address_line2":"exercitation
                    laboris irure","state_code":"eu incididunt veniam
                    dolor","city":"com","zip":"dolore aute aliqua"}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/settings/virtual_backgrounds:
    post:
      tags:
        - accounts > {account Id} > settings > virtual backgrounds
      summary: Upload virtual background files
      description: >+
        Use this API to [upload virtual background
        files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE)
        for all users on the account to use. 



        **Prerequisites:**<br>

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.

        <br> **Scope:** `account:write:admin`<br><br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: Provide the file's path here.
                  example: fugiat eius
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: _Tcj7354w6eHw
                name: u=mdbhhfg3y7&fm=2fdjs0.jpg
                type: image
                is_default: false
                size: 53434
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - accounts > {account Id} > settings > virtual backgrounds
      summary: Delete virtual background files
      description: >+
        Delete existing virtual background file(s) from an account. 


        **Prerequisites:**<br>

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.

        <br> **Scope:** `account:write:admin`<br> <br> 

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      parameters:
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            Provide the id of the file that is to be deleted. To delete multiple
            files, provide comma separated values for this field.
          example: Excepteur aute deserunt occaecat ea
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/settings:
    get:
      tags:
        - accounts > {account Id} > settings
      summary: Get settings
      description: >-
        Use this API to get an account's settings information.


        To get the settings of a master account, use `me` as the value for the
        `accountId` path parameter.


        **Scopes:** `account:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites**: 

        * The account must be a paid account
      parameters:
        - name: option
          in: query
          schema:
            type: string
          description: >-
            Use the following options to filter the results of the account's
            information:

            * `meeting_authentication` — View the account's [meeting
            authentication
            settings](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars).

            * `recording_authentication` — View the account's [recording
            authentication
            settings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings).

            * `security` — View the account's security settings. For example,
            password requirements for user login or two-factor
            authentication.<br>

            * `meeting_security` — View the account's meeting security settings.
          example: meeting_authentication
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            The name of the field by which to filter the response. For example,
            if you provide the `host_video` value for this field, you will get a
            response similar to the following:


            `{ "schedule_meeting": { "host_video": false    } }` 


            To use multiple values, comma-separate each value. For example:
            `host_video,participant_video`
          example: Excepteur aute deserunt occaecat ea
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedule_meeting:
                  host_video: boolean
                  participant_video: boolean
                  audio_type: string
                  join_before_host: boolean
                  use_pmi_for_scheduled_meetings: boolean
                  use_pmi_for_instant_meetings: boolean
                  enforce_login: boolean
                  enforce_login_with_domains: boolean
                  enforce_login_domains: string
                  not_store_meeting_topic: boolean
                  force_pmi_jbh_password: boolean
                  require_password_for_scheduling_new_meetings: boolean
                  require_password_for_scheduled_meetings: boolean
                  require_password_for_instant_meetings: boolean
                  require_password_for_pmi_meetings: string
                in_meeting:
                  e2e_encryption: boolean
                  chat: boolean
                  allow_participants_chat_with: 2
                  allow_users_save_chats: 2
                  private_chat: boolean
                  auto_saving_chat: boolean
                  entry_exit_chime: string
                  record_play_own_voice: boolean
                  feedback: boolean
                  post_meeting_feedback: boolean
                  co_host: boolean
                  polling: boolean
                  attendee_on_hold: boolean
                  show_meeting_control_toolbar: boolean
                  allow_show_zoom_windows: boolean
                  annotation: boolean
                  whiteboard: boolean
                  webinar_question_answer: boolean
                  anonymous_question_answer: boolean
                  breakout_room: boolean
                  closed_caption: boolean
                  far_end_camera_control: boolean
                  group_hd: boolean
                  virtual_background: boolean
                  watermark: boolean
                  alert_guest_join: boolean
                  auto_answer: boolean
                  p2p_connetion: boolean
                  p2p_ports: boolean
                  ports_range: string
                  sending_default_email_invites: boolean
                  use_html_format_email: boolean
                  dscp_marking: boolean
                  dscp_audio: integer
                  dscp_video: integer
                  stereo_audio: boolean
                  original_audio: boolean
                  screen_sharing: boolean
                  remote_control: boolean
                  show_a_join_from_your_browser_link: true
                  join_from_mobile: true
                  join_from_desktop: true
                  allow_live_streaming: true
                  live_streaming_facebook: true
                  workplace_by_facebook: true
                  live_streaming_youtube: true
                  custom_live_streaming_service: true
                  custom_service_instructions: specific instructions
                  webinar_live_streaming:
                    enable: true
                    live_streaming_service:
                      - facebook
                      - workplace_by_facebook
                      - youtube
                      - custom_live_streaming_service
                    custom_service_instructions: specific instructions
                    live_streaming_reminder: true
                  webinar_chat:
                    enable: true
                    allow_panelists_chat_with: 1
                    allow_attendees_chat_with: 1
                    default_attendees_chat_with: 1
                    allow_panelists_send_direct_message: true
                    allow_users_save_chats: 1
                    allow_auto_save_local_chat_file: true
                email_notification:
                  cloud_recording_available_reminder: boolean
                  jbh_reminder: boolean
                  cancel_meeting_reminder: boolean
                  low_host_count_reminder: boolean
                  alternative_host_reminder: boolean
                  schedule_for_reminder: boolean
                zoom_rooms:
                  upcoming_meeting_alert: boolean
                  start_airplay_manually: boolean
                  weekly_system_restart: boolean
                  list_meetings_with_calendar: boolean
                  zr_post_meeting_feedback: boolean
                  ultrasonic: boolean
                  force_private_meeting: boolean
                  hide_host_information: boolean
                  cmr_for_instant_meeting: boolean
                  auto_start_stop_scheduled_meetings: boolean
                security:
                  admin_change_name_pic: boolean
                  import_photos_from_devices: boolean
                  hide_billing_info: boolean
                recording:
                  local_recording: boolean
                  cloud_recording: boolean
                  record_speaker_view: boolean
                  record_gallery_view: boolean
                  record_audio_file: boolean
                  save_chat_text: boolean
                  show_timestamp: boolean
                  recording_audio_transcript: boolean
                  auto_recording: string
                  cloud_recording_download: boolean
                  cloud_recording_download_host: boolean
                  account_user_access_recording: boolean
                  auto_delete_cmr: boolean
                  auto_delete_cmr_days: integer
                telephony:
                  third_party_audio: boolean
                  audio_conference_info: string
                tsp:
                  call_out: boolean
                  call_out_countries:
                    - string
                  show_international_numbers_link: boolean
                  display_toll_free_numbers: boolean
                integration:
                  google_calendar: boolean
                  google_drive: boolean
                  dropbox: boolean
                  box: boolean
                  microsoft_one_drive: boolean
                  kubi: boolean
                feature:
                  meeting_capacity: integer
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - accounts > {account Id} > settings
      summary: Update settings
      description: >-
        Update the settings of a sub account that is under a master account.<br>
        To update the settings of the master account, use `me` as the value of
        the `accountId` path parameter.<br><br>

        **Prerequisites**:
         * The sub account must be a paid account.<br>
        **Scopes**: `account:write:admin`

        <br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"host_video":true,"participant_video":false,"audio_type":"both","join_before_host":false,"jbh_time":0,"enforce_login":false,"enforce_login_with_domains":true,"enforce_login_domains":"sint
                    id aliqua dolor
                    elit","not_store_meeting_topic":false,"force_pmi_jbh_password":false,"use_pmi_for_scheduled_meetings":true,"use_pmi_for_instant_meetings":false,"require_password_for_scheduling_new_meetings":false,"require_password_for_scheduled_meetings":true,"require_password_for_instant_meetings":false,"require_password_for_pmi_meetings":"none","meeting_password_requirement":{"length":6451768,"have_letter":false,"have_number":false,"have_special_character":true,"only_allow_numeric":true,"have_upper_and_lower_characters":false,"consecutive_characters_length":0,"weak_enhance_detection":true},"personal_meeting":false}
                in_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"e2e_encryption":true,"chat":true,"allow_participants_chat_with":2,"allow_users_save_chats":2,"private_chat":false,"auto_saving_chat":false,"entry_exit_chime":"host","record_play_own_voice":false,"feedback":true,"post_meeting_feedback":true,"co_host":true,"polling":true,"attendee_on_hold":false,"show_meeting_control_toolbar":true,"allow_show_zoom_windows":true,"annotation":false,"whiteboard":false,"webinar_question_answer":true,"anonymous_question_answer":true,"breakout_room":false,"closed_caption":true,"far_end_camera_control":false,"group_hd":false,"virtual_background":true,"virtual_background_settings":{"enable":true,"allow_videos":false,"allow_upload_custom":true,"files":[{"id":"labore
                    ad magna dolore","name":"enim ex Lorem non","type":"sint
                    fugiat in","is_default":false,"size":"elit
                    dolore"},{"id":"occaecat sunt","name":"U","type":"sed
                    voluptate deserunt sunt
                    pariatur","is_default":false,"size":"aute
                    laboris"}]},"watermark":false,"alert_guest_join":true,"auto_answer":false,"p2p_connetion":true,"p2p_ports":true,"ports_range":"","sending_default_email_invites":false,"use_html_format_email":true,"dscp_marking":true,"dscp_audio":55,"dscp_video":7,"stereo_audio":false,"original_audio":true,"screen_sharing":true,"remote_control":false,"allow_live_streaming":true,"live_streaming_facebook":false,"workplace_by_facebook":true,"live_streaming_youtube":true,"custom_live_streaming_service":true,"custom_service_instructions":"est
                    cupidatat","custom_data_center_regions":true,"data_center_regions":"US","meeting_reactions":false,"show_a_join_from_your_browser_link":false,"join_from_mobile":true,"join_from_desktop":false,"allow_participants_to_rename":false,"who_can_share_screen":"host","who_can_share_screen_when_someone_is_sharing":"host","file_transfer":true,"request_permission_to_unmute":true,"webinar_live_streaming":{"enable":true,"live_streaming_service":["facebook","workplace_by_facebook"],"custom_service_instructions":"sed","live_streaming_reminder":true},"webinar_chat":{"enable":false,"allow_panelists_chat_with":1,"allow_attendees_chat_with":1,"default_attendees_chat_with":1,"allow_panelists_send_direct_message":false,"allow_users_save_chats":2,"allow_auto_save_local_chat_file":false}}
                email_notification:
                  type: string
                  description: undefined
                  example: >-
                    {"cloud_recording_available_reminder":false,"jbh_reminder":true,"cancel_meeting_reminder":false,"low_host_count_reminder":false,"alternative_host_reminder":false,"schedule_for_reminder":false}
                zoom_rooms:
                  type: string
                  description: undefined
                  example: >-
                    {"upcoming_meeting_alert":true,"start_airplay_manually":false,"weekly_system_restart":true,"list_meetings_with_calendar":false,"zr_post_meeting_feedback":false,"ultrasonic":true,"force_private_meeting":false,"hide_host_information":false,"cmr_for_instant_meeting":true,"auto_start_stop_scheduled_meetings":false}
                security:
                  type: string
                  description: undefined
                  example: >-
                    {"admin_change_name_pic":true,"import_photos_from_devices":true,"hide_billing_info":false,"password_requirement":{"minimum_password_length":11,"have_special_character":true,"consecutive_characters_length":-46474561,"weak_enhance_detection":false},"sign_in_with_two_factor_auth":"role","sign_again_period_for_inactivity_on_client":-88768753,"sign_again_period_for_inactivity_on_web":62971042,"sign_in_with_two_factor_auth_groups":["commodo
                    in sint labore","Excepteur est
                    dolore"],"sign_in_with_two_factor_auth_roles":["irure
                    in","aute in occaecat Ut dolor"]}
                recording:
                  type: string
                  description: undefined
                  example: >-
                    {"local_recording":false,"cloud_recording":false,"record_speaker_view":false,"record_gallery_view":true,"record_audio_file":true,"save_chat_text":false,"show_timestamp":false,"recording_audio_transcript":false,"auto_recording":"none","cloud_recording_download":false,"cloud_recording_download_host":false,"account_user_access_recording":true,"auto_delete_cmr":false,"auto_delete_cmr_days":-83225055,"recording_password_requirement":{"length":-68279646,"have_letter":false,"have_number":false,"have_special_character":true,"only_allow_numeric":true},"allow_recovery_deleted_cloud_recordings":true,"recording_disclaimer":true,"host_delete_cloud_recording":true,"required_password_for_existing_cloud_recordings":false,"prevent_host_access_recording":true,"ip_address_access_control":{"enable":true,"ip_addresses_or_ranges":"elit"},"archive":{"enable":true,"type":3,"settings":{"chat_file":true,"chat_with_sender_email":true,"audio_file":false,"video_file":false,"cc_transcript_file":false}}}
                telephony:
                  type: string
                  description: undefined
                  example: >-
                    {"third_party_audio":false,"audio_conference_info":"voluptate
                    Lorem in","telephony_regions":{"selection_values":"laboris
                    nulla"}}
                integration:
                  type: string
                  description: undefined
                  example: >-
                    {"google_calendar":true,"google_drive":true,"dropbox":true,"box":true,"microsoft_one_drive":false,"kubi":true}
                feature:
                  type: string
                  description: undefined
                  example: '{"meeting_capacity":-89044880}'
                tsp:
                  type: string
                  description: undefined
                  example: >-
                    {"call_out":false,"show_international_numbers_link":true,"display_toll_free_numbers":false}
                profile:
                  type: string
                  description: undefined
                  example: >-
                    {"recording_storage_location":{"allowed_values":["sunt culpa
                    dolore non et","ut mollit"],"value":"officia enim dolor
                    ullamco"}}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: option
          in: query
          schema:
            type: string
          example: meeting_security
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/billing/invoices:
    get:
      tags:
        - accounts > {account Id} > billing > invoices
      summary: List billing invoices
      description: >-
        List
        [invoices](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e)
        of a Zoom account.


        To list a regular Zoom account's invoices or a master account's
        invoices, provide `me` as the value of the `accountId` path parameter.
        To list a sub account's invoices, provide the account ID of the sub
        account in the `accountId` path parameter. 


        **Prerequisites:**

        * Account must be enrolled in Pro or a higher plan.<br>


        **Scope**:`billing:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

        **Additional Rate Limit:** You can make **one** API request per
        account(`accountId`) every **five** minutes until the daily limit is
        reached. This API has a daily limit of **6** requests per
        account(`accountId`).
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >
            Start date for the invoice query in `yyyy-mm-dd` format. The date
            range defined by the “from” and “to” parameters should not exceed
            one year. The range defined should fall within the past three years.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: End date for the invoice query in `yyyy-mm-dd` format
          example: '1965-05-02'
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                invoices:
                  - id: 2c92c12348d07e0580
                    invoice_number: S8INsdf4534000001
                    total_amount: 2039
                    tax_amount: 0
                    balance: 2039
                    due_date: '2020-08-07'
                    invoice_date: '2020-08-07'
                    target_date: '2020-08-07'
                    status: Draft
                currency: USD
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/billing/invoices/{invoiceId}:
    get:
      tags:
        - accounts > {account Id} > billing > invoices
      summary: Get invoice details
      description: >-
        Get detailed information about a specific
        [invoice](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e).
        <br>To retrieve a regular Zoom account's invoice details or a master
        account's invoice details, provide `me` as the value of `accountId` path
        parameter. To list a sub account's invoice details, provide the account
        ID of the sub account in the `accountId` path parameter. 


        **Prerequisites:**

        * Account must be enrolled in Pro or a higher plan. <br>


        **Scope**:`billing:master`<br>

        <br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

        **Additional Rate Limit:** You can make **one** API request every
        **thirty** minutes until the daily limit is reached. This API has a
        daily limit of **100** requests per **account**.
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
        - name: invoiceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The invoice ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 2c92fghvb0580
                invoice_number: Shjmr5INV00000001
                total_amount: 2039
                tax_amount: 0
                balance: 2039
                due_date: '2020-08-07'
                invoice_date: '2020-08-07'
                target_date: '2020-08-07'
                status: Draft
                invoice_items:
                  - charge_name: Standard Biz Annual
                    charge_type: Recurring
                    charge_number: C-00000004
                    total_amount: 1999
                    tax_amount: 0
                    quantity: 10
                    start_date: '2020-08-07'
                    end_date: '2021-08-06'
                  - charge_name: Cloud Recording 100 GB
                    charge_type: Recurring
                    charge_number: C-00000005
                    total_amount: 40
                    tax_amount: 0
                    quantity: 1
                    start_date: '2020-08-07'
                    end_date: '2020-09-06'
                currency: USD
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/billing:
    get:
      tags:
        - accounts > {account Id} > billing
      summary: Get billing information
      description: >+
        Get [billing
        information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing)
        of a sub account.<br><br>Only master accounts can use this API. Zoom
        allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' billing information. Email
        the partner programs team at **partner-success@zoom.us** for more
        details.<br>


        **Prerequisites:**

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope**:`billing:master`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>

      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                first_name: string
                last_name: string
                email: string
                phone_number: string
                address: string
                apt: string
                city: string
                state: string
                zip: string
                country: string
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - accounts > {account Id} > billing
      summary: Update billing information
      description: >+
        Update [billing
        information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing)
        of a sub account.<br><br>

        This API can only be used by master accounts that pay all billing
        charges of their associated sub accounts. Zoom allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' billing information. Email
        the partner programs team at **partner-success@zoom.us** for more
        details.<br><br>


        **Prerequisites:**

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope**:`billing:master`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Billing Contact's first name.
                  example: do aute proident
                last_name:
                  type: string
                  description: Billing Contact's last name.
                  example: consectetur
                email:
                  type: string
                  description: Billing Contact's email address.
                  example: ut nisi
                phone_number:
                  type: string
                  description: Billing Contact's phone number.
                  example: aliqua culpa consectetur do
                address:
                  type: string
                  description: Billing Contact's address.
                  example: nostrud eu
                apt:
                  type: string
                  description: Billing Contact's apartment/suite.
                  example: minim Excepteur in
                city:
                  type: string
                  description: Billing Contact's city.
                  example: nisi esse irure
                state:
                  type: string
                  description: Billing Contact's state.
                  example: ad officia irure labore
                zip:
                  type: string
                  description: Billing Contact's zip/postal code.
                  example: mollit id ullamco
                country:
                  type: string
                  description: Billing Contact's country.
                  example: ullamco incididunt ut tempor dolore
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans/base:
    put:
      tags:
        - accounts > {account Id} > plans > base
      summary: Update a base plan
      description: >-
        Update a base plan of a sub account. 


        This API can only be used by master accounts that pay all billing
        charges of their associated Pro or higher subaccounts. Zoom allows only
        [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage subaccounts' subscriptions. Email the
        partner programs team at **partner-success@zoom.us** for more details.


        **Scopes:** `billing:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:**<br>

        * The subaccount must have a Pro or a higher plan.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: >-
                    (Required) Account base <a
                    href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan
                    type.</a>
                  example: irure
                hosts:
                  type: integer
                  description: >-
                    (Required) Account base plan number of hosts. For a Pro Plan
                    please select a value between 1 and 9. For a Business Plan
                    please select a value between 10 and 49. For a Education
                    Plan please select a value between 20 and 149. For a Free
                    Trial Plan please select a value between 1 and 9999.
                  example: '53151487'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans/base/status:
    patch:
      tags:
        - accounts > {account Id} > plans > base
      summary: Cancel a base plan
      description: >-
        [Cancel a base
        plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-)
        for a sub account.


        This API can only be used by master accounts that pay all billing
        charges of their associated Pro or higher sub accounts. Zoom allows only
        [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' subscriptions. Email the
        partner programs team at **partner-success@zoom.us** for more
        details.<br><br>


        **Scopes**: `billing:master`<br> 

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

        **Prerequisites:**<br>

        * The sub account must have a Pro or a higher plan.

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) The action that needs to be taken for this sub
                    account. Value must be set to "cancel".
                  example: sit veniam
                reason:
                  type: integer
                  description: >-
                    The reason for the cancellation of plan. Reason
                    options:<br>`1` - I am no longer working remote.<br>`2` - I
                    had challenges getting the support I needed.<br>`3` -
                    Features in the Basic Free Plan are sufficient.<br>`4` - The
                    expense is too high.<br>`5` - I purchased the wrong
                    product.<br> `6` - Paid purchase not needed right now, will
                    repurchase in the future. (This can only be one of
                    1,2,3,4,5,6)
                  example: '1'
                comment:
                  type: string
                  description: Additional comments about the cancellation decision.
                  example: mollit
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans/addons:
    post:
      tags:
        - accounts > {account Id} > plans > addons
      summary: Subscribe additional plan
      description: >-
        Subscribe a subaccount to a Zoom addon plan. This API can **only** be
        used by master accounts that pay all billing charges of their associated
        Pro or higher subaccounts. Zoom allows only approved partners to use
        [master
        APIs](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        and manage subaccounts' subscriptions. For more information, email the
        partner programs team at **partner-success@zoom.us**.


        **Scopes**: `billing:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:**

        * Pro or a higher plan with master account option enabled

        * The subaccount must be a paid account whose billing charges are paid
        by its master account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: undefined
                  example: in
                hosts:
                  type: integer
                  description: undefined
                  example: '6913400'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                plan_base:
                  type: string
                  hosts: integer
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - accounts > {account Id} > plans > addons
      summary: Update an additional plan
      description: >-
        Update an additional plan for a sub account.


        This API can only be used by master accounts that pay all billing
        charges of their associated Pro or higher sub accounts. Zoom allows only
        [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' subscriptions. Email the
        partner programs team at **partner-success@zoom.us** for more
        details.<br><br>

        <br>**Prerequisites:**<br>

        * Pro or a higher plan with master account enabled.

        * The sub account must be a paid account. The billing charges for the
        sub account must be paid by the master account.<br><br>


        **Scopes**: `billing:master`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: >-
                    (Required) Account <a
                    href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan
                    type.</a>
                  example: in
                hosts:
                  type: integer
                  description: (Required) Number of hosts for this plan.
                  example: '6913400'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans/addons/status:
    patch:
      tags:
        - accounts > {account Id} > plans > addons
      summary: Cancel additional plans
      description: >-
        [Cancel additional
        plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-)
        of a sub account. The cancellation does not provide refund for the
        current subscription. The service remains active for the current
        session.


        This API can only be used by master accounts that pay all billing
        charges of their associated Pro or higher sub accounts. Zoom allows only
        [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' subscriptions. Email the
        partner programs team at **partner-success@zoom.us** for more
        details.<br><br>


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>


        **Prerequisites:**<br>

        * Pro or a higher plan with master account option enabled.

        * The sub account must be a paid account.<br>

        **Scope:** `billing:master`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    The action that needs to be taken for this sub account.
                    Value must be set to "cancel". (This can only be one of
                    cancel)
                  example: cancel
                type:
                  type: string
                  description: >-
                    Plan
                    [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).
                  example: laboris dolor fugiat veniam
                reason:
                  type: integer
                  description: >-
                    The reason for the cancellation of plan. Reason
                    options:<br>`1` - I am no longer working remote.<br>`2` - I
                    had challenges getting the support I needed.<br>`3` -
                    Features in the Basic Free Plan are sufficient.<br>`4` - The
                    expense is too high.<br>`5` - I purchased the wrong
                    product.<br> `6` - Paid purchase not needed right now, will
                    repurchase in the future. (This can only be one of
                    1,2,3,4,5,6)
                  example: '6'
                comment:
                  type: string
                  description: Additional comments about the cancellation decision.
                  example: ven
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans:
    get:
      tags:
        - accounts > {account Id} > plans
      summary: Get plan Information
      description: >-
        Get plan information of a sub account that is managed by a master
        account. <br><br>This API can only be used by master accounts that pay
        all billing charges of their associated Pro or higher sub accounts. Zoom
        allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts' billing information. Email
        the partner programs team at **partner-success@zoom.us** for more
        details.<br><br>

        **Scopes:** `billing:master`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>

      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                plan_base:
                  type: string
                  hosts: integer
                plan_zoom_rooms:
                  type: string
                  hosts: integer
                plan_room_connector:
                  type: string
                  hosts: integer
                plan_large_meeting:
                  - type: string
                    hosts: integer
                plan_webinar:
                  - type: string
                    hosts: integer
                plan_recording: string
                plan_audio:
                  type: string
                  tollfree_countries: string
                  premium_countries: string
                  callout_countries: string
                  ddi_numbers: integer
                plan_phone:
                  plan_base:
                    type: string
                    callout_countries: string
                  plan_calling:
                    - type: string
                      hosts: integer
                  plan_number:
                    - type: string
                      hosts: integer
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - accounts > {account Id} > plans
      summary: Subscribe plans
      description: >-
        Use this API to subscribe a subaccount to a Zoom plan using your Master
        account. This API can only be used by Master accounts that pay **all**
        billing charges of their associated Pro or higher subaccounts.


        Zoom allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use Master APIs and manage subaccounts' subscriptions. Email the
        partner programs team at
        [**partner-success@zoom.us**](mailto:partner-success@zoom.us) for more
        details.


        **Note:** To subscribe to an addon plan **after** subscribing to a base
        plan, you **must** use the [**Subscribe additional
        plan**](https://marketplace.zoom.us/docs/api-reference/zoom-api/billing/accountplanaddoncreate)
        API.


        **Scopes:** `billing:master`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                plan_base:
                  type: string
                  description: undefined
                  example: '{"type":"Excepteur in commodo amet","hosts":99258586}'
                contact:
                  type: string
                  description: undefined
                  example: >-
                    {"first_name":"ad ullamco","last_name":"amet
                    quis","email":"Lorem Duis in","phone_number":"in
                    dolor","address":"dolor culpa reprehenderit","city":"labore
                    non reprehenderit aute","state":"veniam a","zip":"minim enim
                    dolore dolore in","country":"mollit dolor
                    deserun","apt":"aute velit sit eiusmod"}
                plan_zoom_rooms:
                  type: string
                  description: undefined
                  example: '{"type":"ut fugiat","hosts":35635670}'
                plan_room_connector:
                  type: string
                  description: undefined
                  example: >-
                    {"type":"mollit officia nulla
                    adipisicing","hosts":-28941172}
                plan_large_meeting:
                  type: string
                  description: undefined
                  example: >-
                    [{"type":"consequat tempor eu
                    non","hosts":76770624},{"type":"irure minim
                    sunt","hosts":-95275612}]
                plan_webinar:
                  type: string
                  description: undefined
                  example: >-
                    [{"type":"nisi culpa amet
                    mollit","hosts":18248287},{"type":"officia id enim
                    elit","hosts":83240768}]
                plan_recording:
                  type: string
                  description: undefined
                  example: culpa voluptate
                plan_audio:
                  type: string
                  description: undefined
                  example: >-
                    {"type":"dolore reprehenderit enim elit
                    labore","tollfree_countries":"reprehenderit eu
                    labore","premium_countries":"non ut
                    aute","callout_countries":"non","ddi_numbers":74631148}
                plan_phone:
                  type: string
                  description: undefined
                  example: >-
                    {"plan_base":{"type":"cupidatat ad
                    aliquip","callout_countries":"proident dolore Lorem
                    deserunt"},"plan_calling":[{"type":"non incididunt esse
                    culpa","hosts":10816175},{"type":"ullamco Lorem consectetur
                    ad","hosts":54464345}],"plan_number":[{"type":"consectetur
                    officia","hosts":24332472},{"type":"in magna elit culpa
                    aliqua","hosts":6328143}]}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                plan_base:
                  type: string
                  hosts: integer
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
                plan_zoom_rooms:
                  type: string
                  hosts: integer
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
                plan_room_connector:
                  type: string
                  hosts: integer
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
                plan_large_meeting:
                  - type: string
                    hosts: integer
                    partner_sku: string
                    discount_rate: double
                    discount_percent: integer
                plan_webinar:
                  - type: string
                    hosts: integer
                    partner_sku: string
                    discount_rate: double
                    discount_percent: integer
                plan_recording: string
                plan_cloud_recording:
                  type: string
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
                plan_audio:
                  type: string
                  tollfree_countries: string
                  premium_countries: string
                  callout_countries: string
                  ddi_numbers: integer
                  partner_sku: string
                  discount_rate: double
                  discount_percent: integer
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/plans/usage:
    get:
      tags:
        - accounts > {account Id} > plans
      summary: Get plan usage
      description: >-
        Get information on usage of
        [plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans)
        of an account. This API supports regular accounts as well as master and
        sub accounts. To get plan usage of a regular account, use the
        `account:read:admin` scope and provide “me” as the value of the 
        `accountId` path parameter.To get plan usage of a master account,
        provide the keyword "me" as the value of the `accountId` path parameter
        and use the `billing:master` scope. To get plan usage of a sub account,
        provide the actual account Id of the sub account as the value of the
        `accountId` path parameter and use the `billing:master` scope. 


        **Prerequisite**:<br>

        Account type: master account on a paid Pro, Business or Enterprise
        plan.<br>

        **Scope:** `billing:master` for master and sub accounts.
        `account:read:admin` for regular Zoom accounts.<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                plan_base:
                  type: monthly
                  hosts: 2
                  usage: 1
                plan_zoom_rooms:
                  type: zroom_monthly
                  hosts: 1
                  usage: 0
                plan_webinar:
                  - type: webinar1000
                    hosts: 1
                    usage: 1
                plan_large_meeting:
                  - type: large500_monthly
                    hosts: 1
                    usage: 1
                plan_recording:
                  free_storage: 3 GB
                  free_storage_usage: '0'
                  plan_storage: '0'
                  plan_storage_usage: '0'
                  plan_storage_exceed: '0'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/lock_settings:
    get:
      tags:
        - accounts > {account Id} > lock settings
      summary: Get locked settings
      description: >-
        [Account Locked
        Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow
        you turn settings on or off for all users in your account. No user
        except the account admin or account owner can change these settings.
        With lock settings, you force the settings on for all users.

        Use this API to retrieve an account's locked settings. 


        **Note:** This API can be used by Zoom Accounts that are on a Pro or a
        higher plan as well accounts that have master and sub accounts options
        enabled. <br><br>

        **Prerequisites:**

        * Pro or a higher paid account. <br>


        **Scope**: `account:read:admin`.

        <br> **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>






        **Scope:** account:read:admin
      parameters:
        - name: option
          in: query
          schema:
            type: string
          description: >-
            `meeting_security`: Use this query parameter to view meeting
            security settings applied on the account.<br>
          example: Excepteur aute deserunt occaecat ea
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the account. To retrieve locked
            settings of the master account or a regular account, provide "me" as
            the value of this field. <br> To retrieve locked settings of a sub
            account, provide the Account ID of the sub account in this field.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedule_meeting:
                  host_video: false
                  participant_video: true
                  audio_type: false
                  join_before_host: true
                  enforce_login: false
                  enforce_login_with_domains: false
                  enforce_login_domains: in et
                  not_store_meeting_topic: true
                  require_password_for_scheduling_new_meetings: true
                  require_password_for_instant_meetings: true
                  require_password_for_pmi_meetings: true
                  meeting_authentication: false
                  embed_password_in_join_link: true
                in_meeting:
                  e2e_encryption: false
                  chat: true
                  private_chat: false
                  auto_saving_chat: true
                  entry_exit_chime: irure sunt ut
                  feedback: false
                  post_meeting_feedback: false
                  co_host: false
                  polling: true
                  attendee_on_hold: false
                  show_meeting_control_toolbar: false
                  allow_show_zoom_windows: true
                  annotation: true
                  whiteboard: false
                  remote_control: true
                  webinar_question_answer: false
                  anonymous_question_answer: false
                  breakout_room: false
                  closed_caption: true
                  far_end_camera_control: true
                  group_hd: false
                  virtual_background: false
                  alert_guest_join: false
                  auto_answer: false
                  sending_default_email_invites: false
                  use_html_format_email: true
                  dscp_marking: false
                  stereo_audio: false
                  original_audio: false
                  screen_sharing: false
                  custom_data_center_regions: false
                  file_transfer: false
                  request_permission_to_unmute: false
                  webinar_live_streaming: true
                  webinar_chat: true
                email_notification:
                  cloud_recording_available_reminder: true
                  jbh_reminder: false
                  cancel_meeting_reminder: true
                  alternative_host_reminder: true
                  schedule_for_reminder: false
                recording:
                  local_recording: false
                  cloud_recording: false
                  auto_recording: amet Ut quis consequat
                  cloud_recording_download: true
                  account_user_access_recording: true
                  host_delete_cloud_recording: false
                  auto_delete_cmr: true
                  recording_authentication: cillum pariatur et
                  prevent_host_access_recording: false
                  ip_address_access_control:
                    enable: false
                    ip_addresses_or_ranges: et dolore do Excepteur
                telephony:
                  third_party_audio: true
                  telephony_regions: true
                tsp:
                  call_out: false
                  show_international_numbers_link: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - accounts > {account Id} > lock settings
      summary: Update locked settings
      description: >-
        [Account Locked
        Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow
        you turn settings on or off for all users in your account. No user
        except the account admin or account owner can change these settings.
        With lock settings, you force the settings on for all users. Use this
        API to update an account's locked settings.


        **Note:** This API can be used by Zoom Accounts that are on a Pro or a
        higher plan as well accounts that have master and sub accounts options
        enabled.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher paid account. <br>


        **Scope:** `account:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_meeting:
                  type: string
                  example: >-
                    {"host_video":true,"participant_video":true,"audio_type":false,"join_before_host":false,"enforce_login":true,"enforce_login_with_domains":true,"enforce_login_domains":"dolor","not_store_meeting_topic":false,"require_password_for_scheduling_new_meetings":false,"require_password_for_instant_meetings":true,"require_password_for_pmi_meetings":false,"meeting_authentication":true,"embed_password_in_join_link":true,"personal_meeting":false}
                in_meeting:
                  type: string
                  example: >-
                    {"e2e_encryption":false,"chat":true,"private_chat":false,"auto_saving_chat":true,"entry_exit_chime":"pariatur
                    ipsum
                    quis","feedback":false,"post_meeting_feedback":false,"co_host":false,"polling":false,"attendee_on_hold":false,"show_meeting_control_toolbar":true,"allow_show_zoom_windows":false,"annotation":false,"whiteboard":true,"remote_control":true,"webinar_question_answer":true,"anonymous_question_answer":true,"breakout_room":false,"closed_caption":false,"far_end_camera_control":false,"group_hd":true,"virtual_background":true,"alert_guest_join":false,"auto_answer":false,"sending_default_email_invites":true,"use_html_format_email":false,"dscp_marking":false,"stereo_audio":false,"original_audio":false,"screen_sharing":true,"file_transfer":true,"custom_data_center_regions":false,"request_permission_to_unmute":true,"webinar_live_streaming":false,"webinar_chat":true}
                email_notification:
                  type: string
                  example: >-
                    {"cloud_recording_available_reminder":true,"jbh_reminder":false,"cancel_meeting_reminder":true,"alternative_host_reminder":false,"schedule_for_reminder":true}
                recording:
                  type: string
                  example: >-
                    {"local_recording":true,"cloud_recording":false,"auto_recording":"Excepteur
                    eiusmod sit id
                    cupidatat","cloud_recording_download":false,"account_user_access_recording":true,"host_delete_cloud_recording":true,"auto_delete_cmr":true,"recording_authentication":"magna
                    irure","prevent_host_access_recording":true,"ip_address_access_control":{"enable":false,"ip_addresses_or_ranges":"velit
                    quis Excepteur"}}
                telephony:
                  type: string
                  example: '{"third_party_audio":true,"telephony_regions":true}'
                tsp:
                  type: string
                  example: '{"call_out":true,"show_international_numbers_link":false}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the account. To retrieve locked
            settings of the master account or a regular account, provide "me" as
            the value of this field. <br> To retrieve locked settings of a sub
            account, provide the Account ID of the sub account in this field.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/numbers:
    post:
      tags:
        - accounts > {account Id} > sip trunk > numbers
      summary: Assign numbers
      description: >
        With SIP-connected audio, Zoom establishes a SIP trunk (a network
        connection specifically designed to make and deliver phone calls) over a
        direct and private connection between the customer’s network and the
        Zoom cloud. Meeting participants that dial into a meeting or have the
        meeting call them, and are On-Net from the perspective of the customers'
        IP telephony network, will be connected over this trunk rather than over
        the PSTN. <br><br>Use this API to assign internal numbers to a sub
        account.


        **Prerequisites:**<br>

        * Pro or a higher account with SIP Connected Audio plan enabled.

        * The account must be a master account<br>

        **Scopes:** `sip_trunk:master`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_numbers:
                  type: string
                  description: Phone number(s) to be assigned to the sub account.
                  example: '["nisi dolor","cupidatat Lorem eu"]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the sub account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - accounts > {account Id} > sip trunk > numbers
      summary: Delete all numbers
      description: >-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network
        connection specifically designed to make and deliver phone calls) over a
        direct and private connection between the customer’s network and the
        Zoom cloud. Meeting participants that dial into a meeting or have the
        meeting call them, and are On-Net from the perspective of the customers'
        IP telephony network, will be connected over this trunk rather than over
        the PSTN. <br><br>Use this API to delete all internal numbers assigned
        to a sub account.

        **Prerequisites:**<br>


        * Pro or a higher account with SIP Connected Audio plan enabled.

        * The account must be a master account<br>

        **Scopes:** `sip_trunk:master`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Account ID of the sub account from which the numbers are
            to be deleted. This can be retrieved from [List sub
            accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/trunks:
    get:
      tags:
        - accounts > {account Id} > sip trunk > trunks
      summary: List SIP trunks
      description: >-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network
        connection specifically designed to make and deliver phone calls) over a
        direct and private connection between the customer’s network and the
        Zoom cloud. Meeting participants that dial into a meeting or have the
        meeting call them, and are On-Net from the perspective of the customers’
        IP telephony network, will be connected over this trunk rather than over
        the PSTN.<br><br>

        Use this API to list all the SIP trunks assigned to a master account or
        a sub account of the master account. To retrieve SIP trunks assigned to
        a sub account, provide the account ID of the sub account in the
        `accountId` path parameter. To retrieve SIP trunks of a master account,
        provide `me` as the value of the `accountId` path parameter. <br><br>
        **Scope:** `sip_trunk:read:admin`

        <br><b>Prerequisites:</b><br>

        * The account must either be a master account or a sub account with [API
        Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Account. To retrieve SIP trunks
            assigned to a sub account, provide the account ID of the sub account
            in the as the value of this field. To retrieve SIP trunks of a
            master account, provide `me` as the value of this field.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                sip_trunks:
                  - id: '268'
                    name: test1
                    sip_server_address: 111.111.1.1
                    dnis: '90001258'
                    number_prefix: '0'
                  - id: '281'
                    name: test2
                    sip_server_address: 111.111.1.34
                    dnis: '80001748'
                    number_prefix: '0'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - accounts > {account Id} > sip trunk > trunks
      summary: Assign SIP trunks
      description: >-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network
        connection specifically designed to make and deliver phone calls) over a
        direct and private connection between the customer’s network and the
        Zoom cloud. Meeting participants that dial into a meeting or have the
        meeting call them, and are On-Net from the perspective of the customers’
        IP telephony network, will be connected over this trunk rather than over
        the PSTN.<br><br>Use this API to assign SIP trunk(s) that are available
        on a master account to a sub account. <br><b>Prerequisites:</b><br>

        * The account making this API request must be a master account with [API
        Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio
        Plan.<br><br>

        **Scope:** `sip_trunk:master`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sip_trunks:
                  type: string
                  description: 'Array of one or more SIP Trunk objects. '
                  example: >-
                    [{"id":"qui Ut volupta","dnis":"ut
                    id","outbound_caller_id":"commodo est"}]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the sub account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sip_trunks:
                  - id: represdf324fe
                    name: HQ-trunk
                    sip_server_address: 1.11.123.123
                    dnis: dolore43tr4u
                    number_prefix: '0'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/trunks/{trunkId}:
    delete:
      tags:
        - accounts > {account Id} > sip trunk > trunks
      summary: Delete a SIP trunk
      description: >-
        Use this API to remove existing SIP trunk of a sub account.<br>

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a master account with [API
        Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio
        Plan.<br><br>

        **Scope:** `sip_trunk:master`
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the sub account.
          example: Excepteur aute deserunt occaecat ea
        - name: trunkId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the SIP Trunk that was previously
            assigned to a sub account. To retrieve the value of this field, use
            the List SIP Trunks API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/callout_countries:
    post:
      tags:
        - accounts > {account Id} > sip trunk > callout countries
      summary: Add internal call-out countries
      description: >-
        Specify the list of
        [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-)
        countries for a master account or a sub account. To add call-out enabled
        countries to a sub account, provide the account ID of the sub account in
        the `accountId` path parameter. To add call-out enabled countries to a
        master account, provide `me` as the value of the `accountId` path
        parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                callout_countries:
                  type: string
                  description: (Required) List of callout countries.
                  example: '[{"id":"sint mollit"}]'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the account. To add Call-out enabled
            countries to a sub account, provide the account ID of the sub
            account in the `accountId` path parameter. To add Call-out enabled
            countries to a master account, provide `me` as the value of the
            `accountId` path parameter.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                callout_countries:
                  - id: US
                    name: United States
                    code: '1'
                  - id: CA
                    name: Canada
                    code: '1'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - accounts > {account Id} > sip trunk > callout countries
      summary: List internal call-out countries
      description: >-
        Retrieve the list of internal
        [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-)
        countries of a master account or a sub account. To list call-out enabled
        countries of a sub account, provide the account ID of the sub account in
        the `accountId` path parameter. To list call-out enabled countries of a
        master account, provide `me` as the value of the `accountId` path
        parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the account. To list Call-out
            enabled countries to a sub account, provide the account ID of the
            sub account in the `accountId` path parameter. To list Call-out
            enabled countries of a sub account, provide the account ID of the
            sub account in the `accountId` path parameter. To list Call-out
            enabled countries of a master account, provide `me` as the value of
            the `accountId` path parameter.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                callout_countries:
                  - id: US
                    name: United States
                    code: '1'
                  - id: CA
                    name: Canada
                    code: '1'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/callout_countries/{countryId}:
    delete:
      tags:
        - accounts > {account Id} > sip trunk > callout countries
      summary: Delete internal call-out country
      description: >-
        Delete a previously assigned
        [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-)
        country from a master account or a sub account. To remove call-out
        country from a sub account, provide the account ID of the sub account in
        the `accountId` path parameter. To remove call-out country from a master
        account, provide `me` as the value of the `accountId` path parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Account.<br>

            To remove Call-out country from a sub account, provide the account
            ID of the sub account in the `accountId` path parameter. To remove
            Call-out country from a master account, provide `me` as the value of
            the `accountId` path parameter.
          example: Excepteur aute deserunt occaecat ea
        - name: countryId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Two lettered Id of the country.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/internal_numbers:
    post:
      tags:
        - accounts > {account Id} > sip trunk > internal numbers
      summary: Add internal numbers
      description: >+
        This API allows a master account with SIP Connected Audio plan to assign
        internal phone numbers (i.e., numbers that are not provided by Zoom but
        are owned by the organization consuming the API) to a master account or
        a sub account.<br><br>To add internal numbers to a sub account, provide
        the account ID of the sub account in the `accountId` path parameter. To
        add internal numbers to a master account, provide `me` as the value of
        the `accountId` path parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                internal_numbers:
                  type: string
                  example: >-
                    [{"number":"aliqua cillum","display_number":"ullamco
                    in","country":"Ut occaecat pariatur sit
                    enim","type":0,"labels":"n","languages":"en-GB","visible":true,"allow_join":true,"allow_for_external_meetings":false}]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the account.<br>To add internal
            numbers to a sub account, provide the account ID of the sub account
            in the `accountId` path parameter. To add internal numbers to a
            master account, provide `me` as the value of the `accountId` path
            parameter.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                internal_numbers:
                  - id: A26fhgdfg63
                    number: '+16466661110'
                    display_number: +1 646 666 1110
                    country: US
                    type: 0
                    labels: SIP-Internal
                    languages: en-GB
                    visible: true
                    allow_join: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - accounts > {account Id} > sip trunk > internal numbers
      summary: List internal numbers
      description: >+
        This API allows a master account with SIP Connected Audio plan to list
        internal phone numbers (i.e., numbers that are not provided by Zoom but
        are owned by the organization consuming the API) assigned to a master
        account or a sub account.<br><br>To list internal numbers of a sub
        account, provide the account ID of the sub account in the `accountId`
        path parameter. To list internal numbers of a  master account, provide
        `me` as the value of the `accountId` path parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`


      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the account. To list internal
            numbers of a sub account, provide the account ID of the sub account
            in the `accountId` path parameter. To list internal numbers of a 
            master account, provide `me` as the value of the `accountId` path
            parameter.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 30
                total_records: 99971579
                next_page_token: eiusmod
                internal_numbers:
                  - number: dolore eu
                    display_number: ullamco dolore et irure
                    country: ad quis irure
                    type: 0
                    labels: ut Ut
                    languages: en-GB
                    visible: true
                    allow_join: true
                    allow_for_external_meetings: false
                  - number: Lorem ex
                    display_number: consectetur pariatur
                    country: veniam amet Duis ad
                    type: 0
                    labels: nisi occaecat cillum aliqua
                    languages: en-GB
                    visible: true
                    allow_join: false
                    allow_for_external_meetings: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/internal_numbers/{numberId}:
    delete:
      tags:
        - accounts > {account Id} > sip trunk > internal numbers
      summary: Delete an internal number
      description: >+
        This API allows a master account with SIP Connected Audio plan to delete
        a previously assigned internal phone number from a master account or a
        sub account.<br><br>To delete an internal number from a sub account,
        provide the account ID of the sub account in the `accountId` path
        parameter. To delete an internal number from a master account, provide
        `me` as the value of the `accountId` path parameter.

        <br><b>Prerequisites:</b><br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        with SIP Connected Audio Plan.<br><br>

        **Scope:** `sip_trunk:master`


      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the account. To delete an internal
            number from a sub account, provide the account ID of the sub account
            in the `accountId` path parameter. To delete an internal number from
            a master account, provide `me` as the value of the `accountId` path
            parameter.
          example: Excepteur aute deserunt occaecat ea
        - name: numberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the phone number. This value can be
            retrieved by calling the List Internal Numbers API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/sip_trunk/settings:
    patch:
      tags:
        - accounts > {account Id} > sip trunk
      summary: Assign SIP trunk configuration
      description: >-
        Use this API to copy the Session Initiation Protocol (SIP) Connected
        Audio configurations applied on the Master account and enable or disable
        those configurations on a subaccount.


        With SIP-connected audio, Zoom establishes a [SIP
        trunk](https://en.wikipedia.org/wiki/SIP_trunking) (a network connection
        specifically designed to make and deliver phone calls) over a direct and
        private connection between the customer’s network and the Zoom cloud.
        Meeting participants that dial into a meeting or have the meeting call
        them, and are On-Net from the perspective of the customers' IP telephony
        network, will be connected over this trunk rather than over the PSTN.


        **Scopes:** `sip_trunk:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with SIP Connected Audio plan enabled. 

        * A Master account owner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: >-
                    Assign or delete the SIP configuration:


                    * `true` — Assign the Master account's SIP configuration
                    information to the subaccount.

                    * `false` — Delete the subaccount's assigned SIP
                    configuration.


                    If you do **not** query this parameter, the API will **not**
                    modify the subaccount's configuration.
                  example: 'false'
                show_callout_internal_number:
                  type: boolean
                  description: >-
                    If the value of this option is set to `true`, the call-out
                    numbers provided by the Zoom carrier partners will be
                    displayed in the account's list of available call-out
                    numbers in the Zoom Web Portal and Zoom Client.
                  example: 'false'
                show_zoom_provided_callout_countries:
                  type: number
                  description: >-
                    If the value of this option is set to `0`, the call-out
                    countries list provided by Zoom will be
                    [displayed](https://support.zoom.us/hc/en-us/articles/200942859-Using-telephone-call-out)
                    in the account's list of available call-out countries. 


                    If the value of this option is set to `1`, the Zoom provided
                    call-out countries will be hidden from the user's
                    account.<br> 


                    If the value of this option is set to `2`, all Zoom provided
                    countries will be deleted and only internal countries
                    (provided by carrier partners) will be used.
                  example: '-572608'
                show_zoom_provided_numbers:
                  type: integer
                  description: >-
                    If the value of this option is set to `0`, the numbers
                    provided by Zoom will be displayed in the account's list of
                    available call-out and call-in numbers in the Zoom Web
                    Portal and Zoom Client. 


                    If the value of this option is set to `1`, the Zoom provided
                    numbers will be shown in the Zoom Web Portal but will not be
                    used unless specified by the user.<br> 


                    If the value of this option is set to `2`, all Zoom provided
                    numbers will be deleted and only internal numbers (provided
                    by carrier partners) will be used. (This can only be one of
                    0,1,2)
                  example: '0'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}:
    get:
      tags:
        - accounts > {account Id}
      summary: Get sub account details
      description: >
        Get details of a sub account that is listed under a master account. Your
        account must be a master account in order to retrieve sub accounts'
        details. Zoom allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and create sub accounts. Email the partner programs
        team at **partner-success@zoom.us** for more details.


        **Prerequisites:**

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope**: `account:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                owner_id: string
                owner_email: string
                created_at: string [date-time]
                options:
                  share_rc: boolean
                  room_connectors: string
                  share_mc: boolean
                  meeting_connectors: string
                  pay_mode: string
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - accounts > {account Id}
      summary: Disassociate a sub account
      description: >-
        Disassociate a sub account from its master account. This will leave the
        sub account intact but it will no longer be associated with the master
        account.<br>  


        **Prerequisites:**

        * Pro or a higher paid account with master account option enabled. <br>

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>



        **Scope**: `account:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/options:
    patch:
      tags:
        - accounts > {account Id}
      summary: Update options
      description: >-
        Update a sub account's options under the master account.<br> <aside>Your
        account must be a master account in order to update the options for sub
        accounts. Zoom only assigns this privilege to trusted partners. </aside>


        **Prerequisites:**

        * Pro or a higher paid account with master account option enabled.

        * The account making this API request must be a [master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>


        **Scope**: `account:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                share_rc:
                  type: boolean
                  description: >-
                    Enable/disable the option for a sub account to use shared
                    [Virtual Room
                    Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector)
                    that are set up by the master account. Virtual Room
                    Connectors can only be used by On-prem users.
                  example: 'false'
                room_connector_list:
                  type: string
                  description: >-
                    Specify the IP addresses of the Room Connectors that you
                    would like to share with the sub account. Multiple values
                    can be separated by comma. If no value is provided in this
                    field, all the Room Connectors of a master account will be
                    shared with the sub account.



                    **Note:** This option can only be used if the value of
                    `share_rc` is set to `true`.
                  example: '["id magna","minim cupidatat in ex Lorem"]'
                share_mc:
                  type: boolean
                  description: >-
                    Enable/disable the option for a sub account to use shared
                    [Meeting
                    Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector)
                    that are set up by the master account. Meeting Connectors
                    can only be used by On-prem users.
                  example: 'false'
                meeting_connector_list:
                  type: string
                  description: >-
                    Specify the IP addresses of the Meeting Connectors that you
                    would like to share with the sub account. Multiple values
                    can be separated by comma. If no value is provided in this
                    field, all the Meeting Connectors of a master account will
                    be shared with the sub account.



                    **Note:** This option can only be used if the value of
                    `share_mc` is set to `true`.
                  example: '["mollit Lorem ea ullamco","ea sit minim nostrud f"]'
                pay_mode:
                  type: string
                  description: >-
                    Payee:<br>`master` - master account holder pays.<br>`sub` -
                    Sub account holder pays. (This can only be one of
                    master,sub)
                  example: master
                billing_auto_renew:
                  type: boolean
                  description: Toggle whether automatic billing renewal is on or off.
                  example: 'false'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                share_rc: boolean
                room_connectors: string
                share_mc: boolean
                meeting_connectors: string
                pay_mode: string
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/managed_domains:
    get:
      tags:
        - accounts > {account Id}
      summary: Get managed domains
      description: >+
        Get a sub account's [managed
        domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-).<br><br>


        **Note:** This API can be used by Zoom Accounts that are on a Pro or a
        higher plan as well accounts that have master and sub accounts options
        enabled. <br><br>

        To get managed domains of the master account, provide `me` as the value
        for accountId in the path parameter. Provide the sub account's Account
        ID as the value of accountId path parameter to get managed domains of
        the sub account.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope:** `account:read:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>



      security:
        - oauth2Auth: []
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the account. To retrieve locked
            settings of the master account or a regular account, provide "me" as
            the value of this field. <br> To retrieve locked settings of a sub
            account, provide the Account ID of the sub account in this field.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: -8772231
                domains:
                  - domain: enim quis
                    status: elit ipsum Duis enim
                  - domain: in commodo ut
                    status: cupidatat elit velit
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/trusted_domains:
    get:
      tags:
        - accounts > {account Id}
      summary: Get trusted domains
      description: >-
        Get trusted domains of a sub account. To get the trusted domains of a
        master account, use `me` as the value for the `accountId` path
        parameter.


        **Prerequisites:**<br>

        * The sub account must be a paid account.<br>

        **Scope:** `account:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                trusted_domains:
                  - 'anim '
                  - cupidatat sed minim Ut
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/owner:
    put:
      tags:
        - accounts > {account Id}
      summary: Update the account owner
      description: >-
        Use this API to change an account's owner.


        An account's current owner can [change the account's
        owner](https://support.zoom.us/hc/en-us/articles/115005686983-Change-Account-Owner)
        to another user on the same account.


        **Scopes:** `account:write:admin` or `account:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * An account owner or admin permissions of an account 

        * The account making this API request must be on a Pro or a higher
        account plan with [Master
        account](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        privileges
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: (Required) The email address of the account's new owner.
                  example: R6sFXcS-jI4vQ@utYfqzmYcnmkfvLXThrOipRMf.vr
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The account's account ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/users/{userId}/account:
    put:
      tags:
        - accounts > {account Id}
      summary: Switch a user's account
      description: >-
        Disassociate a user from one Account and move the user to another
        Account under the same master account. 


        With this API, a user under a master account or a sub account can be
        moved to another sub account within the same master account. To move a
        user from a master account to a sub account, use `me` as the value for
        `accountId`. In this scenario, "me" refers to the Account ID of the
        master account. 


        To move a user from one sub account to another sub account, provide the
        sub account's Account ID as the value for `accountId`. 


        **Prerequisites**:

        * The account should have Pro or a higher plan with master account
        option enabled.

        * The user whose account needs to be switched should not be an admin or
        an owner of that account.

        * The user should not have the same [managed
        domain](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-)
        as the account owner.


        **Scope:** `user:master`<br> 

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                account_id:
                  type: string
                  description: >-
                    (Required) The Account ID of the account to which you would
                    like move the user to.
                  example: et Lorem cillum qui elit
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts/{accountId}/recordings:
    get:
      tags:
        - accounts > {account Id}
      summary: List recordings of an account
      description: >
        List [Cloud
        Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        available on an Account.


        > To access a password protected cloud recording, add an "access_token"
        parameter to the download URL and provide
        [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app)
        as the value of the "access_token".

        <br>

        **Prerequisites**:<br>

        * A Pro or a higher paid plan with Cloud Recording option enabled.<br>

        **Scopes**: `recording:read:admin` or `account:read:admin`


        If the scope `recording:read:admin` is used, the Account ID of the
        Account must be provided in the `accountId` path parameter to list
        recordings that belong to the Account. This scope only works for sub
        accounts. 


        To list recordings of a master account, the scope must be
        `account:read:admin` and the value of `accountId` should be `me`.<br> 
        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date in UTC for the monthly range for which you would like
            to retrieve recordings. The maximum range can be a month. If no
            value is provided for this field, the default will be current date.
            For example, if you make the API request on June 30, 2020, without
            providing the “from” and “to” parameters, by default the value of
            'from' field will be “2020-06-30” and the value of the 'to' field
            will be “2020-07-01”.
          example: '1965-08-06T08:45:50.770Z'
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The end date for the monthly range for which you would like to
            retrieve recordings. The maximum range can be a month.
          example: '1965-08-06T08:45:50.770Z'
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the account.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-19'
                to: '2019-08-20'
                page_size: 30
                next_page_token: ''
                meetings:
                  - uuid: i9zq0MR8S/abcdef==
                    id: 101010101
                    account_id: lq8QK_AAAAAAAAA
                    host_id: uLoABCDEF_qQGIsQ
                    topic: MyTestMeeting
                    type: 2
                    start_time: '2019-08-20T00:52:13Z'
                    timezone: America/Los_Angeles
                    host_email: example@example.com
                    duration: 2
                    total_size: 128682
                    recording_count: 3
                    share_url: https://zoom.us/recording/share/SBDDBJKsbjdAAAAA
                    recording_files:
                      - id: 2f6bbbb-0fd7-4691-af13-aaaaaa
                        meeting_id: i9zq0MR8S/abcdef==
                        recording_start: '2019-08-20T00:51:54Z'
                        recording_end: '2019-08-20T00:53:16Z'
                        file_type: M4A
                        file_size: 26966
                        play_url: https://zoomdev.us/recording/play/abcdEFgkkkkk
                        download_url: https://zoom.us/recording/download/abcdEFgkkkkk
                        status: completed
                        recording_type: audio_only
                      - id: 39362666-0fd7-4691-af13-aaaaaa
                        meeting_id: i9zq0MR8S/abcdef==
                        recording_start: '2019-08-20T00:51:54Z'
                        recording_end: '2019-08-20T00:53:16Z'
                        file_type: CHAT
                        file_size: 37
                        play_url: >-
                          https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA
                        download_url: >-
                          https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA
                        status: completed
                        recording_type: chat_file
                      - id: K809nk-014djkfsgf-00a98c13ec783
                        meeting_id: i9zq0MR8S/abcdef==
                        recording_start: '2019-08-20T00:51:54Z'
                        recording_end: '2019-08-20T00:53:16Z'
                        file_type: MP4
                        file_size: 101679
                        play_url: >-
                          https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD
                        download_url: >-
                          https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD
                        status: completed
                        recording_type: shared_screen_with_speaker_view
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /accounts:
    get:
      tags:
        - accounts
      summary: List sub accounts
      description: >+
        List all the sub accounts that have been created by a master
        account.<br><br>Zoom allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts. Email the partner programs
        team at **partner-success@zoom.us** for more details.


        <br>**Prerequisites:**<br>

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope**: `account:read:admin`

        <br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>

      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer
                page_number: integer
                page_size: integer
                total_records: integer
                accounts:
                  - id: string [uuid]
                    account_name: string
                    owner_email: string
                    account_type: string
                    seats: integer
                    subscription_start_time: string [date-time]
                    subscription_end_time: string [date-time]
                    created_at: string [date-time]
    post:
      tags:
        - accounts
      summary: Create a sub account
      description: >-
        Create a sub account under a master account. Your account must be a
        master account in order to create sub accounts. 

        <br><br>Zoom allows only [approved
        partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        to use master APIs and manage sub accounts. Email the partner programs
        team at partner-success@zoom.us. for more details. Please note that the
        created account user will receive a confirmation email.<br><br>

        <br>

        **Prerequisites:**<br>

        * Pro or a higher paid account with master account option enabled. <br>


        **Scope**: `account:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: (Required) User's first name.
                  example: qui enim eiusmod Excepteur
                last_name:
                  type: string
                  description: (Required) User's last name.
                  example: nisi
                email:
                  type: string
                  description: (Required) User's email address.
                  example: enim exercitation qui
                password:
                  type: string
                  description: >-
                    (Required) User's password.


                    **Note:** If the account owner or admin has enabled
                    [enhanced password
                    requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd),
                    the value provided in this field must meet those
                    requirements. These requirements can be retrieved by calling
                    the [Get Account Settings
                    API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings)
                    and referring to the `password_requirement` field present in
                    the `security` object.
                  example: do est
                options:
                  type: string
                  description: Account options object.
                  example: >-
                    {"share_rc":false,"room_connector_list":["ipsum ","ut
                    laboris id
                    elit"],"share_mc":false,"meeting_connector_list":["nisi
                    dolor commodo mollit dolore","Ut
                    reprehenderit"],"pay_mode":"master","billing_auto_renew":true}
                account_name:
                  type: string
                  description: >-
                    Name of the account. If you do not provide a value for this
                    field, by default, the value will be set as a concatenation
                    of "first_name" and "last_name".
                  example: proident
                sub_reseller_id:
                  type: string
                  description: >-
                    The sub-reseller's ID.


                    If you do not provide this field in the payload, a new
                    subaccount will be created for the requested account.
                  example: eiusmod deserunt quis adipisi
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                owner_id: string
                owner_email: string
                created_at: string
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/numbers/{numberId}:
    get:
      tags:
        - phone > numbers > {number Id}
      summary: Get phone number details
      description: >-
        Use this API to get information about an account's Zoom Phone number.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Pro or higher account plan 

        * A Zoom phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: numberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Phone Number. This can be
            retrieved from the List Phone Numbers API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: Hfdgdfgdfg1ew
                number: '+140000007'
                display_name: abc
                source: internal
                status: available
                number_type: toll
                capability:
                  - incoming
                  - outgoing
                location: Milpitas,California,United States
                assignee:
                  name: Main Auto Receptionist
                  extension_number: 10000
                  type: autoReceptionist
                site:
                  id: CEfdfdfgA
                  name: Main Site
                carrier:
                  code: 13
                  name: ContactCenter
                sip_group:
                  id: 8MhK7ea4Q4ihIQ4TD_g0kw
                  display_name: RRRR
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > numbers > {number Id}
      summary: Update phone number details
      description: >-
        Use this API to update a Zoom Phone number's information.


        **Scopes:** `phone:write`, `phone:write:admin`,
        `phone:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Paid account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  description: Phone number display name.
                  example: sunt nisi
                capability:
                  type: string
                  description: >-
                    Phone number capability. Values: `outgoing` or `incoming`.
                    Add one or both.
                  example: '["magna","dolore velit mollit laborum"]'
                sip_group_id:
                  type: string
                  description: Sip group id, only used for byoc phone number update.
                  example: reprehenderit nulla
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: numberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Phone number ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/numbers:
    get:
      tags:
        - phone > numbers
      summary: List phone numbers
      description: >-
        Use this API to list all Zoom Phone numbers in a Zoom account.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Pro or higher account plan 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Query response by number assignment. The value can be one of the
            following:

            <br>

            `assigned`: The number has been assigned to either a user, a call
            queue, an auto-receptionist or a common area phone in an account.
            <br>`unassigned`: The number is not assigned to anyone.<br>

            `all`: Include both assigned and unassigned numbers in the
            response.<br>

            `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the
            response.
          example: assigned
        - name: extension_type
          in: query
          schema:
            type: string
          description: >-
            The type of assignee to whom the number is assigned. The value can
            be one of the following:<br>

            `user`<br> `callQueue`<br> `autoReceptionist`<br>

            `commonAreaPhone`
          example: callQueue
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: number_type
          in: query
          schema:
            type: string
          description: >-
            The type of phone number. The value can be either `toll` or
            `tollfree`.
          example: tollfree
        - name: pending_numbers
          in: query
          schema:
            type: boolean
          description: >-
            Include or exclude pending numbers in the response. The value can be
            either `true` or `false`.
          example: 'true'
        - name: site_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of the site. Use this query parameter if you have
            enabled multiple sites and would like to filter the response of this
            API call by a specific phone site. See [Managing multiple
            sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
            or [Adding a
            site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15)
            for details.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: ''
                page_size: 30
                total_records: 2
                phone_numbers:
                  - id: execvbfgbgr
                    number: '0000111100'
                    display_name: abc
                    source: internal
                    status: pending
                    number_type: tollfree
                    capability:
                      - incoming
                      - outgoing
                    location: Milpitas,California,United States
                    assignee:
                      id: cgfdgfghghim
                      name: Peter Jenner
                      extension_number: 12
                      type: user
                    site:
                      id: sdfsdfgrg
                      name: SF office
                  - id: fdgfdgfdh
                    number: '111111111'
                    source: external
                    status: available
                    number_type: toll
                    location: San Jose,California,United States
                    assignee:
                      id: dfgdfghdfhgh
                      name: Receptionist
                      extension_number: 1
                      type: autoReceptionist
                    site:
                      id: jhdfsdghfdg
                      name: San Jose office
  /phone/sites/{siteId}:
    get:
      tags:
        - phone > sites > {site Id}
      summary: Get phone site details
      description: >+
        Sites allow you to organize Zoom Phone users in your organization. Use
        this API to get information about a specific
        [site](https://support.zoom.us/hc/en-us/articles/360020809672).



        **Prerequisites:** <br>

        * Account must have a Pro or a higher plan with Zoom Phone license.

        * Multiple Sites must be
        [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).<br>

        **Scope:** `phone:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: siteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Site.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: CEfghfghhWA
                name: Main Site
                site_code: 10
                main_auto_receptionist:
                  id: NMyfgfhghhsVg
                  extension_id: E6Khfghgfr8A
                  extension_number: 10801
                  name: Main Auto Receptionist
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > sites > {site Id}
      summary: Delete a phone site
      description: >+
        Sites allow you to organize Zoom Phone users in your organization. Use
        this API to delete a specific
        [site](https://support.zoom.us/hc/en-us/articles/360020809672) in a Zoom
        account. To delete a site, in the query parameter, you must provide the
        Site ID of another site where the assets of current site (users, numbers
        and phones) can be transferred to.  You cannot use this API to delete
        the main site.


        **Prerequisites:** <br>

        * Account must have a Pro or a higher plan with Zoom Phone license. 

        * [Multiple
        Sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
        must be enabled.<br>

        **Scope:** `phone:write:admin`

        <br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: transfer_site_id
          in: query
          schema:
            type: string
          description: >-
            (Required) The Site ID of another site where the assets of the
            current site (users, numbers and phones) can be transferred to.
          example: Excepteur aute deserunt occaecat ea
        - name: siteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Site.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > sites > {site Id}
      summary: Update phone site details
      description: >+
        Sites allow you to organize Zoom Phone users in your organization. Use
        this API to update information about a specific
        [site](https://support.zoom.us/hc/en-us/articles/360020809672).



        **Prerequisites:** <br>

        * Account must have a Pro or a higher plan with Zoom Phone license.

        * **Scope:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the site.
                  example: qui aute
                site_code:
                  type: number
                  description: >-
                    [Site
                    Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).
                  example: '-50744211'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: siteId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Site.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/sites:
    post:
      tags:
        - phone > sites
      summary: Create a phone site
      description: >+
        Sites allow you to organize Zoom Phone users in your organization. Use
        this API to create a
        [Site](https://support.zoom.us/hc/en-us/articles/360020809672).<br>

        **Prerequisites:**<br>

        * Multiple Sites must be
        [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).

        * Pro or a higher account with Zoom Phone enabled.

        **Scope:** `phone:write:admin`<br> 
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) Name of the Site.
                  example: deserunt amet aliqua ut
                auto_receptionist_name:
                  type: string
                  description: >-
                    (Required) Display name of the
                    [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-)
                    for the site.
                  example: nostrud
                site_code:
                  type: integer
                  description: >+
                    Identifier for a site. If site code is enabled, this field
                    is required.

                  example: '34328406'
                default_emergency_address:
                  type: string
                  example: >-
                    {"country":"do","address_line1":"Ut sed","city":"pariatur
                    proident dolore","zip":"sint esse","state_code":"ex
                    deserunt","address_line2":"fugiat amet aliquip deserunt"}
                short_extension:
                  type: string
                  description: Short extension of the phone site.
                  example: '{"length":3}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ingjgjfhi
                name: San Jose Site
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > sites
      summary: List phone sites
      description: >-
        Sites allow you to organize Zoom Phone users in your organization. Use
        this API to list all the
        [sites](https://support.zoom.us/hc/en-us/articles/360020809672) that
        have been created for an account.<br>

        **Prerequisites:**<br>

        * Multiple Sites must be
        [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).

        * Pro or a higher account with Zoom Phone enabled.


        **Scope:** `phone:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 2
                sites:
                  - id: CESAfgkwporiw3WA
                    name: Main Site
                    site_code: 10
                    country:
                      name: Canada
                      code: CA
                    main_auto_receptionist:
                      id: NMyfgfgfhdghsVg
                      extension_id: E6Khfhfhf4idr8A
                      extension_number: 10801
                      name: Main Auto Receptionist
                  - id: fwfhfghbghghfgcuw
                    name: SAC office
                    site_code: 12
                    main_auto_receptionist:
                      id: t1s55343ggfg3wwg
                      extension_id: V7AIhaaaaaaaaRyTw
                      extension_number: 12001
                      name: SAC Office Auto Receptionist
  /phone/users/{userId}/settings/{settingType}:
    post:
      tags:
        - phone > users > {user Id} > settings > {setting Type}
      summary: Set up shared access
      description: >-
        Use this API to define the voicemail access permissions of a user. For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Phone users can access [shared voicemail
        inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox)
        in the Zoom desktop client, web portal, or provisioned desk phone.


        To view these settings in the Zoom web portal, navigate to the **Admin
        >> Phone System Management >> Users & Rooms** interface. Click the
        **Users** tab and select **User Settings**. Scroll down to **Voicemail &
        Call Recordings**.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                voice_mail:
                  type: string
                  description: Update the voicemail setting.
                  example: >-
                    {"access_user_id":"cupidatat anim Duis
                    esse","download":false,"delete":false}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: settingType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Corresponds to the setting item you wish to modify.
            Allowed values: `voice_mail`
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                voice_mail: voicemailtest
                access_user_id: '12'
                permission:
                  - download: 'false'
                    delete: 'false'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > users > {user Id} > settings > {setting Type}
      summary: Update shared access
      description: >-
        Use this API to update the voicemail access permissions of a user. For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Phone users can access [shared voicemail
        inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox)
        in the Zoom desktop client, web portal, or provisioned desk phone.


        To view these settings in the Zoom web portal, navigate to the **Admin
        >> Phone System Management >> Users & Rooms** interface. Click the
        **Users** tab and select **User Settings**. Scroll down to **Voicemail &
        Call Recordings**.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                voice_mail:
                  type: string
                  description: Update the voicemail setting.
                  example: >-
                    {"shared_id":"dolore esse consectetur
                    Ut","access_user_id":"nostrud in incididunt officia
                    ullamco","download":true,"delete":true}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: settingType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Corresponds to the setting item you wish to modify.
            Allowed values: `voice_mail`
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > users > {user Id} > settings > {setting Type}
      summary: Remove shared access
      description: >-
        Use this API to remove a user's shared voicemail access settings. For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        To view these settings in your Zoom web portal, navigate to the **Admin
        >> Phone System Management >> Users & Rooms** interface. Click the
        **Users** tab and select **User Settings**. Scroll down to **Voicemail &
        Call Recordings**.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      security:
        - oauth2Auth: []
      parameters:
        - name: shared_id
          in: query
          schema:
            type: string
          description: (Required) Required only for voicemail setting type.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: settingType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Corresponds to the setting item you wish to remove.
            Allowed values: `voice_mail`
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/settings:
    get:
      tags:
        - phone > users > {user Id} > settings
      summary: Get user's settings
      description: >-
        Use this API to get a user's [Zoom Phone profile
        settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:read`, `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                outbound_caller:
                  number: '+123456789'
                area_code: '123'
                desk_phone:
                  keys_positions:
                    primary_number: '+123456789'
                voice_mail:
                  - download: true
                    delete: true
                    access_user_id: tNxDXW0NTu2AvlzW4_wYhQ
                country:
                  code: US
                  name: United States
                  country_code: '1'
                extension_number: 103
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > users > {user Id} > settings
      summary: Update user's settings
      description: >-
        Use this API to update user's [Zoom Phone profile
        settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                outbound_caller_id:
                  type: string
                  description: >-
                    The user's outbound caller ID phone number, in [E.164
                    format](https://en.wikipedia.org/wiki/E.164).
                  example: esse adipisici
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/call_logs:
    get:
      tags:
        - phone > users > {user Id} > call logs
      summary: Get user's call logs
      description: >-
        Use this API to get a user's [Zoom
        phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators)
        call logs. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:read`, `phone:read:admin`, `phone_call_log:read`,
        `phone_call_log:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: type
          in: query
          schema:
            type: string
          example: all
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: phone_number
          in: query
          schema:
            type: string
          description: >-
            Filter API responses to include call logs of only the phone number
            defined in this field.
          example: Excepteur aute deserunt occaecat ea
        - name: time_type
          in: query
          schema:
            type: string
          description: >-
            Enables you to sort call logs by start or end time. Choose the sort
            time value. Values include `startTime` or `endTime`.
          example: startTime
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 0
                page_number: 1
                page_size: 30
                total_records: 0
                from: '2019-05-19'
                to: '2019-05-20'
                call_logs:
                  - id: sjbkfdsbfsdf
                    call_type: voip
                    caller_number: '12345678'
                    caller_number_type: '1'
                    caller_name: ullamconame
                    callee_number: '34567889'
                    callee_number_type: '2'
                    callee_name: somename
                    direction: inbound
                    duration: 18677470
                    result: no_answer
                    date_time: '2019-05-19T20:00:00Z'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/call_logs/{callLogId}:
    delete:
      tags:
        - phone > users > {user Id} > call logs
      summary: Delete a user's call log
      description: >-
        Use this API to delete a user's [call
        log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`, `phone_call_log:write`,
        `phone_call_log:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * User must belong to a Business or Enterprise account 

        * User must have a Zoom Phone license
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The user ID or email address of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: callLogId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the call log. The value for this
            field can be retrieved from [account's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs)
            or [user's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/phone_numbers:
    post:
      tags:
        - phone > users > {user Id} > phone numbers
      summary: Assign phone number to user
      description: >-
        Use this API to assign a [phone
        number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers)
        to a user who has already enabled Zoom Phone. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_numbers:
                  type: string
                  example: >-
                    [{"id":"pariatur cillum culpa fugiat","number":"officia ea
                    sed id"},{"id":"ut ut Ut ni","number":"Lorem nisi"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                phone_numbers:
                  - id: djkfsd13
                    number: '+123456789'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/phone_numbers/{phoneNumberId}:
    delete:
      tags:
        - phone > users > {user Id} > phone numbers
      summary: Unassign phone number
      description: >-
        Use this API to unassign Zoom Phone user's [phone
        number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        After assigning a phone number, you can remove it if you do not want it
        to be assigned to anyone.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license 

        * The user must have been previously assigned a Zoom Phone number
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Provide either userId or email address of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: phoneNumberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Provide either phone number or phoneNumberId of the
            user.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/calling_plans:
    post:
      tags:
        - phone > users > {user Id} > calling plans
      summary: Assign calling plan to a user
      description: >-
        Use this API to assign a [calling
        plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans)
        to a [Zoom
        Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone)
        user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                calling_plans:
                  type: string
                  example: '[{"type":"fugiat ut ve"},{"type":"commodo enim proident"}]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/calling_plans/{type}:
    delete:
      tags:
        - phone > users > {user Id} > calling plans
      summary: Unassign user's calling plan
      description: >-
        Use this API to unassign a a [Zoom
        Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user's
        [calling
        plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: path
          schema:
            type: string
          required: true
          description: >
            (Required) The
            [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans)
            of the calling plan that was assigned to user. (e.g: The value of
            type would be "200" for Unlimited US/Canada calling plan.)
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}:
    get:
      tags:
        - phone > users > {user Id}
      summary: Get user's profile
      description: >-
        Use this API to return a user's [Zoom
        phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators)
        profile. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:read`, `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**
         * A Business or Enterprise account 
        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: fdjbgdfgkl0-ibkdjfg20913
                phone_user_id: vfjbdlgrwi902_igr
                email: example@example.com
                extension_number: 100100
                calling_plans:
                  - type: 200
                phone_numbers:
                  - id: vigfkjnrtUernketg09
                    number: '+1234567890'
                site_id: aXb1039sdjhhgdbgj4
                status: activate
                policy:
                  international_calling: false
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > users > {user Id}
      summary: Update user's profile
      description: >-
        Use this API to update a user's [Zoom
        Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone)
        profile. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:write`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                extension_number:
                  type: string
                  description: >-
                    The extension number of the user. The number must be
                    complete (i.e. site number + short extension).
                  example: dolor commodo cillum minim
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the
                    [site](https://support.zoom.us/hc/en-us/articles/360020809672)
                    where the user should be moved or assigned.
                  example: Lorem magna
                policy:
                  type: string
                  description: A list of the user's policies.
                  example: '{"international_calling":false}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/recordings:
    get:
      tags:
        - phone > users > {user Id}
      summary: Get user's recordings
      description: >-
        Use this API to get a user's [Zoom Phone
        recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:read`, `phone:read:admin`, `phone_recording:read`,
        `phone_recording:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for the query in 'yyyy-mm-dd' format. The date range
            defined by the "from" and "to" parameters should only be one month
            as the response includes only one month worth of recording data. The
            month defined should fall within the last six months.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 0
                page_number: 1
                page_size: 30
                total_records: 1
                from: '2019-05-19'
                to: '2019-05-20'
                recordings:
                  - id: magnageUt
                    caller_number: '12345678'
                    caller_number_type: '1'
                    caller_name: ullamconame
                    callee_number: '34567889'
                    callee_number_type: '2'
                    callee_name: somename
                    direction: inbound
                    duration: 12
                    date_time: '2019-05-19T20:00:00Z'
                    download_url: somerandomdownloadurl.com
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users/{userId}/voice_mails:
    get:
      tags:
        - phone > users > {user Id}
      summary: Get user's voicemails
      description: >-
        Use this API to get a user's Zoom Phone voicemails. For user-level apps,
        pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `phone:read`, `phone:read:admin`, `phone_voicemail:read`,
        `phone_voicemail:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: status
          in: query
          schema:
            type: string
          description: Status of the voice mail
          example: all
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for the query in 'yyyy-mm-dd' format. The date range
            defined by the "from" and "to" parameters should only be one month
            as the response includes only one month worth of voicemail data. The
            month defined should fall within the last six months.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 0
                page_number: 1
                page_size: 30
                total_records: 1
                voice_mails:
                  - id: Excepteur
                    date_time: '2019-05-19T20:00:00Z'
                    download_url: ani_maborumu7labojgde.com
                    duration: '18:07'
                    caller_number: '12345678'
                    caller_number_type: '1'
                    caller_name: ullamconame
                    callee_number: '34567889'
                    callee_number_type: '2'
                    callee_name: somename
                    status: read
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/users:
    get:
      tags:
        - phone > users
      summary: List phone users
      description: >-
        Use this API to return a list of all of an account's users who are
        assigned a Zoom Phone license.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Pro or higher account plan 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned from a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: site_id
          in: query
          schema:
            type: string
          description: >-
            Unique Identifier of the site. This can be retrieved from the [List
            Phone
            Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: ''
                page_size: 30
                total_records: 1
                users:
                  - calling_plans:
                      - name: US/CA Unlimited Calling Plan
                        type: 200
                    id: z8ghgfh8uQ
                    phone_user_id: EMhghghg5w
                    email: example@example.com
                    name: Shri Shri
                    extension_number: 10000
                    status: activate
                    site:
                      id: CESEpjWwT-upVH7kt_ixWA
                      name: Main Site
  /phone/settings:
    get:
      tags:
        - phone > settings
      summary: Get account's setting
      description: >-
        Use this API to return an account's settings.


        **Scopes:** `phone:read`, `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                country:
                  code: US
                  name: United States
                multiple_sites:
                  enabled: true
                  site_code: true
                byoc:
                  enable: true
                show_device_ip_for_call_log:
                  enable: true
    patch:
      tags:
        - phone > settings
      summary: Update BYOC settings
      description: >-
        [Master account
        owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
        can use this API to enable the BYOC (Bring Your Own Carrier) option for
        a subaccount.


        **Scopes:** `phone:master`


        **Prerequisites:** 

        * A Business or Enterprise account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                byoc:
                  type: string
                  description: >-
                    Only [master account
                    owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
                    can use this MA API to enable BYOC(Bring your own carrier)
                    option for a sub account.<br>


                    **Scope**:<br>

                    * `phone:master` <br>


                    **Prerequisites**: <br>

                    * Business or enterprise Account.<br>
                  example: '{"enable":false}'
                show_device_ip_for_call_log:
                  type: string
                  example: '{"enable":false}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/setting_templates/{templateId}:
    patch:
      tags:
        - phone > setting templates > {template Id}
      summary: Update a setting template
      description: >-
        Use this API to update or modify a phone template's settings.


        **Scopes:** `phone:write:admin` or `phone:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Specify the name of the template.
                  example: dolore officia
                description:
                  type: string
                  description: The description of the template.
                  example: esse amet e
                profile:
                  type: string
                  example: >-
                    {"country":"ipsum laboris","area_code":"qui Lorem Excepteur
                    enim"}
                policy:
                  type: string
                  example: >-
                    {"auto_call_recording":{"enable":true,"recording_calls":"outbound","recording_transcription":false,"recording_start_prompt":false},"ad_hoc_call_recording":{"enable":false,"recording_start_prompt":true,"recording_transcription":false},"sms":{"enable":false,"international_sms":true},"voicemail":{"enable":false,"allow_transcription":true}}
                user_settings:
                  type: string
                  example: >-
                    {"call_handling":{"business_hours":{"type":1,"custom_hours":[{"weekday":3,"type":2,"from":"14:35:07.262Z","to":"04:41:18.944Z"},{"weekday":2,"type":1,"from":"05:05:45.327Z","to":"17:47:47.442Z"}],"ring_type":"0","ringing_duration":"35","business_hour_action":50,"connect_to_operator":{"enable":false,"type":"sharedLineGroup","id":"deserunt
                    proident"}},"close_hours":{"max_wait_time":"30","close_hour_action":1,"connect_to_operator":{"enable":true,"type":"zoomRoom","id":"mollit
                    sint elit ullamco"}}},"desk_phone":{"pin_code":"sit
                    cupidatat"},"block_calls_without_caller_id":false,"audio_prompt_language":"Lorem
                    quis ex","hold_music":"disable"}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Template ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > setting templates > {template Id}
      summary: Get setting template details
      description: >-
        Use this API to return information about an account's phone template.


        **Scopes:** `phone:write:admin` or `phone:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field to use to filter the response. For
            example, if you provide "description" as the value of the field, you
            will get a response similar to the following: {“description”:
            “template description”}.
          example: Excepteur aute deserunt occaecat ea
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the template.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                name: string
                description: string
                type: string
                profile:
                  country: string
                  area_code: string
                policy:
                  auto_call_recording:
                    enable: boolean
                    recording_calls: string
                    recording_transcription: boolean
                    recording_start_prompt: boolean
                  ad_hoc_call_recording:
                    enable: boolean
                    recording_start_prompt: boolean
                    recording_transcription: boolean
                  sms:
                    enable: boolean
                    international_sms: boolean
                  voicemail:
                    enable: boolean
                    allow_transcription: boolean
                user_settings:
                  call_handling:
                    business_hours:
                      type: integer
                      custom_hours:
                        - weekday: integer
                          type: integer
                          from: string
                          to: string
                      ring_type: string
                      ringing_duration: string
                      business_hour_action: integer
                      connect_to_operator:
                        enable: boolean
                        type: string
                        id: string
                    close_hours:
                      max_wait_time: string
                      close_hour_action: integer
                      connect_to_operator:
                        enable: boolean
                        type: string
                        id: string
                  desk_phone:
                    pin_code: string
                  block_calls_without_caller_id: boolean
                  audio_prompt_language: string
                  hold_music: string
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /phone/setting_templates:
    post:
      tags:
        - phone > setting templates
      summary: Add a setting template
      description: >-
        Use this API to create a Zoom Phone setting template for an account.
        After creating a phone template, the defined settings will become the
        default settings for an account.


        **Scopes:** `phone:write:admin`, `phone:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or enterprise Zoom account 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) The name of the template.
                  example: dolor aliquip sit
                type:
                  type: string
                  description: >-
                    (Required) The type of template. Values include `user`,
                    `group`, `autoReceptionist`, `commonarea`, or `interop`.
                    (This can only be one of
                    user,group,autoReceptionist,commonarea,interop)
                  example: user
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the site. Required only when multiple
                    sites are enabled. See [Managing multiple
                    sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
                    for details.
                  example: velit voluptate dolore
                description:
                  type: string
                  description: A description of the template.
                  example: in
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '123456'
                name: Name name
                description: A description here...
                type: user
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > setting templates
      summary: List setting templates
      description: >-
        Use this API to get a list of all the created phone template settings.


        **Scopes:** `phone:read:admin` or `phone:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: Number of records returns within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: site_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of the site. This field is required only if
            multiple sites have been enabled.  of the site. Required only when
            multiple sites are enabled. See [Managing multiple
            sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
            for details. If this is not provided, the response lists the account
            level setting templates.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: '3'
                page_size: '30'
                total_records: '200'
                templates:
                  - id: '12345'
                    name: namename
                    description: string
                    type: '2'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/locations/{locationId}:
    patch:
      tags:
        - phone > locations > {location Id}
      summary: Update emergency service location
      description: >-
        Use this API to update an emergency location's information.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The emergency location's name.
                  example: dolore in
                emergency_address_id:
                  type: string
                  description: The emergency location's address ID.
                  example: elit adipisicing minim ut
                elin_phone_number_id:
                  type: string
                  description: >-
                    The ELIN (Emergency Location Identification Number). This
                    value must be a phone number ID or phone number in
                    [E.164](https://en.wikipedia.org/wiki/E.164) format.
                  example: dese
                bssid:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    BSSIDs (Basic Service Set Identifiers).
                  example: Lorem cillum ali
                public_ip:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    public IP addresses. This parameter is **required** for top
                    locations.
                  example: ut do minim sit
                private_ip:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    subnet or private IP addresses.
                  example: adipisicing
                sip_group_id:
                  type: string
                  description: >-
                    The SIP group ID to assign to the emergency service
                    location. This value is not required for non-top locations.
                  example: in cillum dolor Lorem
                network_switches:
                  type: string
                  example: >-
                    [{"mac_address":"laboris et","port":"dolor
                    ut","port_prefix":"labore quis qui
                    aliqua","port_range_from":"laboris ea consequat
                    ","port_range_to":"sint laborum
                    dolor"},{"mac_address":"amet","port":"consequat culpa ut
                    cillum","port_prefix":"Duis elit mollit
                    nisi","port_range_from":"ut ea sed","port_range_to":"culpa
                    nostrud"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The emergency service location’s ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > locations > {location Id}
      summary: Delete an emergency location
      description: >-
        Use this API to remove an emergency location.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The emergency service location's ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > locations > {location Id}
      summary: Get emergency service location details
      description: >-
        Use this API to return an emergency service location's information.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The emergency service location's ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: dUK5vga4QVWyXBJiYgM3cQ
                name: test_batch_04_1_2
                bssid: 00:20:f7:ce:ea:2f,00:20:f7:ce:ea:2e
                site:
                  id: SQv52YtkRLC2dwrDdYtGsA
                  name: ApiTA_Site_2020_07_12_00_41_57_141
                elin:
                  phone_number_id: xQORWYB_SzaQUF9tyfEHYQ
                  phone_number: '+15550100'
                public_ip: 192.0.2.1
                private_ip: 198.51.100.1
                sip_group:
                  id: 1hU40Ao8THqZinBNFAjeCQ
                  display_name: sip_group_01
                emergency_address:
                  id: Qza2T_KATwCeUfTkzGsOmQ
                  country: US
                  address_line1: 55 ALMADEN BLVD
                  city: SAN JOSE
                  state_code: CA
                  zip: '95113'
                network_switches:
                  - port_prefix: 21a
                    port_range_from: '11'
                    port_range_to: '22'
                    mac_address: 00:20:f7:ce:ea:2e
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/locations:
    post:
      tags:
        - phone > locations
      summary: Add emergency service location
      description: >-
        Use this API to add an emergency service location.


        **Scopes:** `phone:write:adminRate`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) The emergency service location's name.
                  example: nostrud laborum
                emergency_address_id:
                  type: string
                  description: (Required) The emergency location address ID.
                  example: minim sit ea
                site_id:
                  type: string
                  description: The site ID.
                  example: amet in elit reprehenderit
                elin_phone_number_id:
                  type: string
                  description: >-
                    The ELIN (Emergency Location Identification Number). This
                    value must be a phone number ID or phone number in
                    [E.164](https://en.wikipedia.org/wiki/E.164) format.
                  example: eiusmod voluptate ad exercitation
                bssid:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    BSSIDs (Basic Service Set Identifiers).
                  example: ullamco pariatur esse Ut Excepteur
                public_ip:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    public IP addresses. This parameter is required for top
                    locations.
                  example: ipsum dolor Lorem ut
                private_ip:
                  type: string
                  description: >-
                    A comma-separated list of the emergency service location's
                    subnet or private IP addresses.
                  example: enim mollit officia
                sip_group_id:
                  type: string
                  description: >-
                    The SIP group ID to assign to the emergency service
                    location. This value is not required for non-top locations.
                  example: quis nostrud nisi incididunt
                parent_location_id:
                  type: string
                  description: >-
                    The parent location's ID to assign to the emergency service
                    location.
                  example: minim nisi laborum dolore
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 8e77d889-baba-43d1-b80c-77c90c135cde
                name: location name
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > locations
      summary: List emergency service locations
      description: >-
        Use this API to list emergency service locations.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: sdfafdsa12fa_fasfdacc
                page_size: 1
                locations:
                  - id: dddMfX_eRLqrYCHnntfdJA
                    identifier: batch_04
                    name: test_batch_04_1_2
                    bssid: 00:20:f7:ce:ea:2f,00:20:f7:ce:ea:2e
                    site:
                      id: SQv52YtkRLC2dwrDdYtGsA
                      name: ApiTA_Site_2020_07_12_00_41_57_141
                    elin:
                      phone_number_id: xQORWYB_SzaQUF9tyfEHYQ
                      phone_number: '+15550100'
                    public_ip: 192.0.2.1
                    private_ip: 198.51.100.1
                    sip_group:
                      id: 1hU40Ao8THqZinBNFAjeCQ
                      display_name: sip_group_01
                    network_switches:
                      - port: '21'
                        mac_address: 00:20:f7:ce:ea:2e
                      - port_prefix: 21a
                        port_range_from: '11'
                        port_range_to: ' 13'
                        mac_address: 00:20:f7:ce:ea:2f
  /phone/call_logs:
    get:
      tags:
        - phone > call logs
      summary: Get account's call logs
      description: >-
        Use this API to return an account's [call
        logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs).


        **Scopes:** `phone:read:admin`, `phone_call_log:read:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license 

        * Account owner and a
        [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        with Zoom Phone management
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date from which you would like to get the call logs. The start
            date should be within past six months. <br>


            The API only returns data pertaining to a month. Thus, the date
            range(defined using "from" and "to" fields) for which the call logs
            are to be returned must not exceed a month.
          example: Excepteur aute deserunt occaecat ea
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The end date upto which you would like to get the call logs for. The
            end date should be within past six months.
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The type of the call logs. The value can be either "all" or
            "missed".
          example: Excepteur aute deserunt occaecat ea
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: path
          in: query
          schema:
            type: string
          description: >-
            Filter the API response by
            [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679)
            of the call. The value of this field can be one of the following:
            `voiceMail`, `message`, `forward`, `extension`, `callQueue`,
            `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`,
            `disconnected`, `commonAreaPhone`,

            `pstn`, `transfer`, `sharedLines`, `sharedLineGroup`,
            `tollFreeBilling`, `meetingService`, `parkPickup`,

            `parkTimeout`, `monitor`, `takeover`, `sipGroup`
          example: Excepteur aute deserunt occaecat ea
        - name: time_type
          in: query
          schema:
            type: string
          description: >-
            Enables you to sort call logs by start or end time. Choose the sort
            time value. Values include `startTime` or `endTime`.
          example: startTime
        - name: site_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of the
            [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
            Use this query parameter if you have enabled multiple sites and
            would like to filter the response of this API call by call logs of a
            specific phone site.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 0
                page_number: 1
                page_size: 30
                total_records: 0
                from: '2019-05-19'
                to: '2019-05-20'
                call_logs:
                  - id: sjbkfdsbfsdf
                    call_type: voip
                    caller_number: '12345678'
                    caller_number_type: '1'
                    caller_name: ullamconame
                    callee_number: '34567889'
                    callee_number_type: '2'
                    callee_name: somename
                    direction: inbound
                    duration: 18677470
                    result: no_answer
                    date_time: '2019-05-19T20:00:00Z'
                    owner:
                      type: callQueue
                      id: 29QVgYBGRmOM5VlC0DmLgg
                      name: Not_Delete_CallQueue_Recording
                      extension_number: 1009
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_logs/{id}/recordings:
    get:
      tags:
        - phone > call logs
      summary: Get an account's call recording
      description: >-
        Use this API to get an account's call
        recording(https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings)
        by the recording's `callId` or `callLogId` value.


        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisties:** 

        * A Pro or higher account with Zoom Phone license. 

        * Account owner or admin privileges.
      security:
        - oauth2Auth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The unique ID of the call log. You can use `callLogId`
            and `callId` as path parameters.


            You can find the value for this field with the **[Get account's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs)**
            API or the **[Get user's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs)**
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: magnageUt
                caller_number: '5550100'
                caller_number_type: '1'
                caller_name: Taylor
                callee_number: '34567889'
                callee_number_type: '2'
                callee_name: Ariel
                direction: inbound
                duration: 12
                date_time: '2021-07-20T07:08:20Z'
                download_url: example.com
                call_log_id: 11-11-1-1-1-1-1-1
                call_id: '123123123'
                end_time: '2021-07-20T07:09:20Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_logs/{callLogId}:
    get:
      tags:
        - phone > call logs
      summary: Get call log details
      description: >-
        Use this API to return information about a [call
        log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).


        **Scopes:** `phone:read`, `phone:read:admin`, `phone_call_log:read`,
        `phone_call_log:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * A Business or Enterprise account 

        * A Zoom Phone license
      parameters:
        - name: callLogId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the call log. Both `callLogId` and
            `callId` can be used as path parameters. The value for this field
            can be retrieved from [account's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs)
            or the [user's call
            logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: esse pariatur velit dolore
                caller_number: quis pariatur velit
                caller_number_type: 2
                caller_name: ex laborum
                callee_number: non pariatur aute Excepteur d
                callee_number_type: 1
                callee_name: sunt
                direction: inbound
                duration: -39034101
                result: recorded
                date_time: 'qui ea '
                path: laboris ut quis ut
                call_id: velit in exercitation
                call_type: voip
                has_recording: true
                has_voicemail: false
                device_public_ip: quis sed
                device_private_ip: ut fugiat dolor est quis
                log_details:
                  - id: in in consequat
                    duration: 25505417
                    result: recorded
                    date_time: Excepteur tempor
                    path: adipisicing deserunt
                    site:
                      id: sed
                      name: dolore te
                    forward_to: user, callQueue, autoReceptionist, sharedLineGroup
                    device_public_ip: dolor aute aliquip
                    device_private_ip: eu
                  - id: ipsum reprehenderit
                    duration: 74744888
                    result: recorded
                    date_time: tempor proident aliquip
                    path: aliqua cupidat
                    site:
                      id: et
                      name: veniam laboris mollit elit fugia
                    forward_to: user, callQueue, autoReceptionist, sharedLineGroup
                    device_public_ip: sunt nisi minim a
                    device_private_ip: id Duis labore magna
  /phone/devices/{deviceId}:
    patch:
      tags:
        - phone > devices > {device Id}
      summary: Update a device
      description: >-
        Update information of a [desk phone
        device](https://support.zoom.us/hc/en-us/articles/360021119092).<br><br>

        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  description: Display name of the desk phone.
                  example: aliquip ut proident elit in
                mac_address:
                  type: string
                  description: >-
                    The MAC address of the desk phone.<br> 

                    Note: If you're using a wireless phone, enter the wired MAC
                    address, not the wireless MAC address.
                  example: 1B:fcF6-F4-1a-8f
                assigned_to:
                  type: string
                  description: >-
                    User ID or email address of the user to whom this device is
                    to be assigned. The User ID and the email of the user can be
                    retrieved using the [List
                    Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)
                    API.
                  example: laborum
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Device.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > devices > {device Id}
      summary: Delete a device
      description: >-
        Remove a [desk phone
        device](https://support.zoom.us/hc/en-us/articles/360021119092) from the
        Zoom Phone System Management.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions

        * Device must not have been assigned to a user.<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the device.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > devices > {device Id}
      summary: Get device details
      description: >-
        Get detailed information about a specific [desk phone
        device](https://support.zoom.us/hc/en-us/articles/360021119092).


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the device.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234324'
                display_name: Pooja's Phone
                device_type: Ribbon EdgeMarc302
                mac_address: 203a07240534
                assignee:
                  id: i242djsgrg
                  name: Pooja
                  extension_number: 123
                status: offline
                site:
                  id: '123123'
                  name: Main Site
                provision:
                  type: manual
                  sip_accounts:
                    - sip_domain: 123.zoom.us
                      outbound_proxy: '123123'
                      secondary_outbound_proxy: proxy.example.com:5555
                      user_name: '123123'
                      authorization_id: '123123'
                      password: '1123'
                      shared_line:
                        line_subscription:
                          extension_number: 123123
                          display_name: Pooja
                        outbound_caller_id: '+123123123'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/devices:
    post:
      tags:
        - phone > devices
      summary: Add a device
      description: >-
        By default, all Zoom Phone users can make and receive calls using the
        Zoom desktop and mobile applications. Additionally, if a desk phone is
        required, use this API to [add a desk phone and assign
        it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da)
        to a user.


        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions

        * [Supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                mac_address:
                  type: string
                  description: >-
                    (Required) The MAC address of the desk phone.<br> 

                    Note: If you're using a wireless phone, enter the wired MAC
                    address, not the wireless MAC address.
                  example: aC-1962:Db5cd0
                display_name:
                  type: string
                  description: (Required) Display name of the desk phone.
                  example: elit labore Excepteur minim
                type:
                  type: string
                  description: Manufacturer (brand) name of the device.
                  example: cillum id proident pariatur
                model:
                  type: string
                  description: Model name of the device.
                  example: nulla nostrud dolore ipsum
                assigned_to:
                  type: string
                  description: >-
                    User ID or email address of the user to whom this device is
                    to be assigned. The User ID and the email of the user can be
                    retrieved using the [List
                    Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)
                    API.
                  example: ea
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > devices
      summary: List devices
      description: >-
        List all the [desk phone
        devices](https://support.zoom.us/hc/en-us/articles/360021119092) that
        are configured with Zoom Phone on an account.


        **Scopes:** `phone:read:admin`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            (Required) State of the device. The value should be either
            `assigned` to list devices that have been assigned to user(s) or
            `unassigned` to list devices that have not yet been assigned to any
            user in the Zoom account.
          example: assigned
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: proident in o
                page_size: 80839828
                total_records: 808398280
                devices:
                  - id: '1234324'
                    display_name: Pooja's Phone
                    device_type: AudioCodes405
                    mac_address: 203a07240534
                    assignee:
                      id: i242djsgrg
                      name: Pooja
                      extension_number: 123
                    status: online
                    site:
                      id: sdfdgdg32
                      name: HQ site
  /phone/external_contacts/{externalContactId}:
    patch:
      tags:
        - phone > external contacts > {external Contact Id}
      summary: Update external contact
      description: >-
        Use this API to update an external contact's information.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >-
                    The external contact's custom unique ID. It is recommended
                    that you use a primary key from the original phone system.


                    If you do **not** use this parameter, the API automatically
                    generates a contact ID.
                  example: ullamco Duis laborum incididunt
                name:
                  type: string
                  description: The external contact's username or extension display name.
                  example: qui in anim
                email:
                  type: string
                  description: The external contact's email address.
                  example: dolor tempor
                extension_number:
                  type: string
                  description: >-
                    The external contact's extension number in the original
                    phone system. Make certain that this extension number is
                    **not** duplicated with an existing extension number in the
                    account.
                  example: voluptate sunt sit officia
                description:
                  type: string
                  description: The external contact's description.
                  example: sunt laborum exercitation enim
                routing_path:
                  type: string
                  description: >-
                    The external contact's SIP group, to define the call routing
                    path. This is for customers that use SIP trunking.
                  example: ut veniam
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: externalContactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) External contact ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > external contacts > {external Contact Id}
      summary: Delete an external contact
      description: >-
        Use this API to remove an external contact.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: externalContactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The external contact's ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > external contacts > {external Contact Id}
      summary: Get external contact details
      description: >-
        Use this API to get an external contact's information.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: externalContactId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The external contact's ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: External Contact
                email: example@example.com
                description: External Contact 1
                external_contact_id: OJGi5xOFQPmrJbKg68-iWg
                id: '1'
                routing_path: PSTN
                phone_numbers:
                  - '+15550100'
                  - '+15550101'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/external_contacts:
    post:
      tags:
        - phone > external contacts
      summary: Add an external contact
      description: >-
        Use this API to add an external contact.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    (Required) The external contact's username or extension
                    display name.
                  example: non nulla et consequat
                id:
                  type: string
                  description: >-
                    The external contact's custom unique ID. It is recommended
                    that you use a primary key from the original phone system.


                    If you do **not** use this parameter, the API automatically
                    generates a contact ID.
                  example: nisi aliqua laboris
                email:
                  type: string
                  description: The external contact's email address.
                  example: sunt ea ullamco tempor cupidatat
                extension_number:
                  type: string
                  description: >-
                    The external contact's extension number in the original
                    phone system. Make certain that this extension number is
                    **not** duplicated with an existing extension number in the
                    account.
                  example: nulla commodo Excepteur
                description:
                  type: string
                  description: The external contact's description.
                  example: veniam tempor
                routing_path:
                  type: string
                  description: >-
                    The external contact's SIP group, to define the call routing
                    path. This is for customers that use SIP trunking.
                  example: aliqua labore culpa
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > external contacts
      summary: List external contacts
      description: >-
        Use this API to list external contacts.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license 

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: sdfafdsa12fa_fasfdacc
                page_size: 2
                external_contacts:
                  - name: External Contact
                    email: example@example.com
                    description: External Contact 1
                    external_contact_id: OJGi5xOFQPmrJbKg68-iWg
                    id: '1'
                    routing_path: PSTN
                    phone_numbers:
                      - '+8765432123456'
                      - '+9876543212345'
                  - name: Test_add_ec_01
                    email: example-2@example.com
                    description: Test_add_ec_01
                    external_contact_id: y0brV9dgQyCYid1h9ILCOw
                    id: Test_add_ec_01
                    extension_number: '999'
                    routing_path: sip_group_01
  /phone/call_queues/{callQueueId}/phone_numbers:
    post:
      tags:
        - phone > call queues > {call Queue Id} > phone numbers
      summary: Assign numbers to a call queue
      description: >+
        After [buying phone
        number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad),
        you can assign it, allowing callers to directly dial a number to reach a
        [call
        queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br><br>

        **Prerequisites:**<br>

        * Pro or higher account plan.

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_numbers:
                  type: string
                  description: >-
                    Provide either the `id` or the `number` field. Only a max of
                    5 numbers can be assigned to a call queue at a time.
                  example: >-
                    [{"id":"elit ea","number":"nostrud irure ex"},{"id":"ut
                    cillum","number":"ut ad et"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Call Queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - phone > call queues > {call Queue Id} > phone numbers
      summary: Unassign all phone numbers
      description: >+
        Use this API to unbind all phone numbers that are assigned to a [Call
        Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues)
        After successful unbinding, the numbers will appear in the [Unassigned
        tab](https://zoom.us/signin#/numbers/unassigned).<br> If you only need
        to unassign a specific phone number, use the Unassign a Phone Number API
        instead. <br>

        **Prerequisites:**

        * Pro or higher account palan

        * Account owner or admin permissions

        * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Call Queue. This can be
            retrieved from List Call Queues API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}:
    delete:
      tags:
        - phone > call queues > {call Queue Id} > phone numbers
      summary: Unassign a phone number
      description: >+
        After assigning a phone number, you can unbind it if you don't want it
        to be assigned to a [Call
        Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).
        Use this API to unbind a phone number from a Call Queue. After
        successful unbinding, the number will appear in the [Unassigned
        tab](https://zoom.us/signin#/numbers/unassigned).<br><br>

        **Prerequisites:**

        * Pro or higher account palan

        * Account owner or admin permissions

        * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Call Queue. This can be
            retrieved from the List Call Queues API.
          example: Excepteur aute deserunt occaecat ea
        - name: phoneNumberId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Unique Identifier of the Phone Number. '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}/members:
    post:
      tags:
        - phone > call queues > {call Queue Id} > members
      summary: Add members to a call queue
      description: >-
        Add phone users and/or [common area
        phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)
        as members to a specific Call Queue.<br><br>

        **Prerequisites:**<br>

        * Pro or higher account plan.

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: A maximum of 10 members can be added at a time.
                  example: >-
                    {"users":[{"id":"irure in
                    aliquip","email":"tbo82NX3DCAYu@sG.wcv"},{"id":"officia sed
                    laborum
                    exercitation","email":"EYTX3jRxLpeS51@K.iy"}],"common_area_phone_ids":["magna
                    culpa veniam dolore","ex"]}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Call Queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > call queues > {call Queue Id} > members
      summary: Unassign all members
      description: >-
        Use this API to remove all members from a Call Queue who were previously
        assigned to that Call Queue. The members could be phone users or [common
        area
        phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).

        **Prerequisites:**<br>

        * Pro or higher account plan.

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}/members/{memberId}:
    delete:
      tags:
        - phone > call queues > {call Queue Id} > members
      summary: Unassign a member
      description: >+
        Use this API to remove a member from a Call Queue who was previously
        added to that Call Queue. The member could be a phone user or a [common
        area
        phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
        A member who is a Call Queue Manager cannot be unassigned from the Call
        Queue using this API. 

        **Prerequisites:**<br>

        * Pro or higher account plan.

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Call Queue from which the member
            needs to be unassigned.
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the member who needs to be
            unassigned.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}:
    get:
      tags:
        - phone > call queues > {call Queue Id}
      summary: Get call queue details
      description: >-
        Call queues allow you to route incoming calls to a group of users. For
        instance, you can use call queues to route calls to various departments
        in your organization such as sales, engineering, billing, customer
        service etc.<br> Use this API to get information on a specific Call
        Queue.<br><br> 

        **Prerequisites:**<br>

        * Pro, Business, or Education account

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:read:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Call Queue. This can be
            retrieved from [List Call Queues
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: jIfhghXFA
                name: Test-Callqueue
                extension_number: 10001
                members:
                  users:
                    - id: z8hfgh8uQ
                      name: Lisa Yankowski
                      level: manager
                      receive_call: true
                status: active
                site:
                  id: CcvcvnWA
                  name: Main Site
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > call queues > {call Queue Id}
      summary: Update call queue details
      description: >
        Call queues allow you to route incoming calls to a group of users. For
        instance, you can use call queues to route calls to various departments
        in your organization such as sales, engineering, billing, customer
        service etc.<br> Use this API to update information of a specific Call
        Queue.<br> 

        **Prerequisites:**<br>

        * Pro, Business, or Education account

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the Call Queue.
                  example: sunt
                description:
                  type: string
                  description: Description for the Call Queue.
                  example: ea Except
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the
                    [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
                    where the Call Queue is assigned.
                  example: deserunt laborum velit
                extension_number:
                  type: number
                  description: >-
                    Phone extension number for the site.<br>


                    If a site code has been
                    [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
                    to the site, provide the short extension number instead of
                    the original extension number.
                  example: '-21863703'
                timezone:
                  type: string
                  description: >-
                    [Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)
                    of the Call Queue.
                  example: mollit cupidatat Ut
                status:
                  type: string
                  description: |-
                    Status of the Call Queue. Allowed values:<br>
                    `active`<br>
                    `inactive` (This can only be one of active,inactive)
                  example: active
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Call Queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > call queues > {call Queue Id}
      summary: Delete a call queue
      description: >+
        Call queues allow you to route incoming calls to a group of users. For
        instance, you can use call queues to route calls to various departments
        in your organization such as sales, engineering, billing, customer
        service etc.<br> Use this API to delete a Call Queue.<br> 

        **Prerequisites:**<br>

        * Pro, Business, or Education account

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the call queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}/manager:
    put:
      tags:
        - phone > call queues > {call Queue Id}
      summary: Change call queue manager
      description: >+
        A call queue manager has the privileges to maanage the call queue's
        voicemail inbox and recordings, change all call queue settings and call
        queue policy settings.<br><br> Use this API to to set another phone user
        as the [call queue
        manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c).

        **Prerequisites:**<br>

        * Pro or higher account plan.

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                member_id:
                  type: string
                  description: >-
                    Unique Identifier (userId) or email address of the user who
                    will be the new call queue manager.
                  example: in
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Call Queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/call_queues/{callQueueId}/recordings:
    get:
      tags:
        - phone > call queues > {call Queue Id}
      summary: Get call queue recordings
      description: >+
        Use this API to view [call
        recordings](https://support.zoom.us/hc/en-us/articles/360038521091#h_cbc9f2a3-e06c-4daa-83d4-ddbceef9c77b)
        from the call queue.<br><br>

        **Prerequisites:**<br>

        * Pro or higher account with Zoom Phone license.

        * [Automatic call
        recordings](https://support.zoom.us/hc/en-us/articles/360033511872#h_fcb297bb-14e8-4094-91ca-dc61e1a18734)
        must be enabled in the Policy Settings for call queues. <br> **Scope:**
        `phone:read:admin`<br> **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`



      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: Start date (within a 6 month range).
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: End date (within a 6 month range).
          example: '1965-05-02'
        - name: callQueueId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Call Queue.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: fg4t65hy
                page_size: 1
                total_records: 1
                recordings:
                  - id: dvfv5gg
                    caller_number: '+900138732313213'
                    caller_number_type: internal
                    caller_name: idvdfdf
                    callee_number: '900138752313210'
                    callee_number_type: internal
                    callee_name: dfhjdvf
                    direction: outbound
                    duration: 20
                    download_url: sjhgkdfg.fdghfb/fdgfdg
                    date_time: '2026-08-11'
  /phone/call_queues:
    post:
      tags:
        - phone > call queues
      summary: Create a call queue
      description: >-
        Call queues allow you to route incoming calls to a group of users. For
        instance, you can use call queues to route calls to various departments
        in your organization such as sales, engineering, billing, customer
        service etc.<br> Use this API to [create a call
        queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).<br>
        You can add phone users or common area phones to call queues.


        **Prerequisites:**<br>

        * Pro, Business, or Education account

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                site_id:
                  type: string
                  description: >-
                    (Required) Unique identifier of the site. Required only if
                    [multiple
                    sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
                    have been enabled. This can be retrieved from the [List
                    Phone
                    Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)
                    API.
                  example: aute commodo
                name:
                  type: string
                  description: (Required) Name of the Call Queue.
                  example: aute
                extension_number:
                  type: integer
                  description: >-
                    Phone extension number for the site.<br>


                    If a site code has been
                    [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
                    to the site, provide the short extension number instead of
                    the original extension number.
                  example: '97782875'
                description:
                  type: string
                  description: Description for the Call Queue.
                  example: laborum ipsum
                members:
                  type: string
                  description: >-
                    A list of one or more phone users to be included in the call
                    queue. Provide either users or common area phone(s). Provide
                    at least one user in the users object.
                  example: >-
                    {"users":[{"id":"sunt aute incididunt
                    i","email":"sVj@xtlBzDIVY.dz"},{"id":"magna aliquip
                    et","email":"cNdQs49OdWK@EGmthRCvhpusDbjmz.lpy"}],"common_area_phone_ids":["ea
                    sunt nisi est","culpa dolore"]}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: SujgNzKq-w
                name: testing123
                extension_number: 10201
                status: active
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > call queues
      summary: List call queues
      description: >
        Call queues allow you to route incoming calls to a group of users. For
        instance, you can use call queues to route calls to various departments
        in your organization such as sales, engineering, billing, customer
        service etc.<br> Use this API to list Call queues.<br><br>

        **Prerequisites:**<br>

        * Pro, Business, or Education account

        * Account owner or admin permissions

        * Zoom Phone license<br>

        **Scopes:** `phone:read:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned from a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 1
                next_page_token: nisidfyolore
                total_records: 1
                call_queues:
                  - id: gdfgd4fg
                    name: My test call queue
                    extension_number: 1011
                    phone_numbers:
                      - id: '01'
                        number: '875489'
                        source: internal
                    status: active
                    site:
                      id: vCESddfg_ixWA
                      name: Main Site
  /phone/auto_receptionists/{autoReceptionistId}/phone_numbers:
    post:
      tags:
        - phone > auto receptionists > {auto Receptionist Id} > phone numbers
      summary: Assign phone numbers
      description: >-
        Assign available phone numbers to an [auto
        receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).
        The available numbers can be retrieved using the List Phone Numbers API
        with `type` query parameter set to "unassigned".


        **Prerequisites:**

        * Pro or higher account plan with Zoom Phone License

        * Account owner or admin permissions<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_numbers:
                  type: string
                  description: >-
                    Provide either the unique identifier of the Phone Number  in
                    the `id` field or provide the phone number in the `number`
                    field.
                  example: >-
                    [{"id":"sit qui commodo id ullamco","number":"dolor ut
                    consectetur u"},{"id":"Lorem in sit eu
                    tempor","number":"do"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: autoReceptionistId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Auto Receptionist. It can be
            retrieved from the [List Sites
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > auto receptionists > {auto Receptionist Id} > phone numbers
      summary: Unassign all phone numbers
      description: >
        Unassign all phone numbers that were previously assigned to an [auto
        receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). 


        **Prerequisites:**

        * Pro or higher account plan with Zoom Phone License

        * Account owner or admin permissions<br>

        **Scopes:** `phone:write:admin`<br> 

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: autoReceptionistId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}:
    delete:
      tags:
        - phone > auto receptionists > {auto Receptionist Id} > phone numbers
      summary: Unassign a phone number
      description: >-
        Unassign a specific phone number that was previously assigned to an
        [auto
        receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). 


        **Prerequisites:**

        * Pro or higher account plan with Zoom Phone License

        * Account owner or admin permissions<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: autoReceptionistId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the auto receptionist. This can be
            retrieved from the List Phone Sites API.
          example: Excepteur aute deserunt occaecat ea
        - name: phoneNumberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the phone number or provide the
            actual phone number in e164 format (example: +19995550123).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/auto_receptionists/{autoReceptionistId}:
    patch:
      tags:
        - phone > auto receptionists > {auto Receptionist Id}
      summary: Update auto receptionist details
      description: >-
        An auto receptionist answers calls with a personalized recording and
        routes calls to a phone user, call queue, common area phone, or
        voicemail. An auto receptionist can also be set up so that it routes
        calls to an interactive voice response (IVR) system to allow callers to
        select the routing options.<br>

        Use this API to [change
        information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3)
        such as display name and extension number assigned to the main auto
        receptionist.<br><br>

        **Prerequisites:**<br>

        * Pro or higher account with Zoom Phone license.<br>

        **Scopes:** `phone:write:admin` <br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Display name of the auto receptionist.
                  example: consectetur ut elit
                extension_number:
                  type: integer
                  description: >-
                    Extension number to be assigned to the auto receptionist. If
                    site code is enabled, provide the short extension number
                    instead.
                  example: '97124676'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: autoReceptionistId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Auto Receptionist. It can be
            retrieved from the [List Sites
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/auto_receptionists:
    post:
      tags:
        - phone > auto receptionists
      summary: Add an auto receptionist
      description: >+
        Auto receptionists answer calls with a personalized recording and routes
        calls to a phone user, call queue, common area phone, voicemail or an
        IVR system. Use this API to add an [auto
        receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-)
        to a Zoom Phone.<br>


        **Prerequisites:**<br>

        * Pro or higher account with Zoom Phone license.<br>

        **Scopes:** `phone:write:admin` <br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    (Required) Provide a name to help identify the auto
                    receptionist.
                  example: in quis aute
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the site where the auto receptionist is
                    to be assigned. This field is required only if you have
                    [multiple
                    sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
                    enabled.
                  example: Duis dolore
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: officdt76ydatat
                name: HQ Auto Receptionist
                extension_number: 123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones/{commonAreaPhoneId}/phone_numbers:
    post:
      tags:
        - phone > common area phones > {common Area Phone Id} > phone numbers
      summary: Assign phone numbers to common area phone
      description: |-
        Assign phone numbers to common area phone.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        **Scope:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"phone_numbers\": [\n        {\n            \"id\":
                \"aute\",\n            \"number\": \"ut magna velit\"\n       
                },\n        {\n            \"id\": \"fugiat\",\n           
                \"number\": \"Excepteur eu ad culpa\"\n        }\n    ]\n}"
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                phone_numbers:
                  - id: dsss123ssssfdsa
                    number: '+12055433924'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones/{commonAreaPhoneId}/phone_numbers/{phoneNumberId}:
    delete:
      tags:
        - phone > common area phones > {common Area Phone Id} > phone numbers
      summary: Unassign phone numbers from a common area phone
      description: >-
        Use this API to unassign a phone number from a common Area phone.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**<br>

        * A Pro or a higher account with a Zoom Phone license

        * An account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The common area phone's unique ID.
          example: Excepteur aute deserunt occaecat ea
        - name: phoneNumberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The phone number or the phone number's unique ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones/{commonAreaPhoneId}/calling_plans:
    post:
      tags:
        - phone > common area phones > {common Area Phone Id} > calling plans
      summary: Assign calling plans to common area phone
      description: |-
        Assign calling plans to common area phone.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        **Scope:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"calling_plans\": [\n        {\n            \"type\":
                88077074\n        },\n        {\n            \"type\":
                49743049\n        }\n    ]\n}"
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                calling_plans:
                  - type: 3000
                    name: Zoom Phone Pro
                  - type: 100
                    name: US/CA Metered Calling Plan
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones/{commonAreaPhoneId}/calling_plans/{type}:
    delete:
      tags:
        - phone > common area phones > {common Area Phone Id} > calling plans
      summary: Unassign calling plan from a common area phone
      description: >-
        Use this API to unassign a calling plan from a common area phone.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Pro or higher account with a Zoom Phone license 

        * An account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The common area phone's unique ID.
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The [calling
            plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans)
            to remove.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones/{commonAreaPhoneId}:
    get:
      tags:
        - phone > common area phones > {common Area Phone Id}
      summary: Get common area phone details
      description: >-
        Use this API to get details on a specific [common area
        phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)
        in an account.


        A common area phone can be provisioned by a Zoom account owner or a Zoom
        admin so that anyone in an organization can use it. For example, if your
        office has shared desks that don't belong to a specific employees, you
        could add a common area phone so that any person can use it.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions

        * A [supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)
      security:
        - oauth2Auth: []
      parameters:
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Common Area Phone. Use the
            unique identifier or the Mac address of the common area phone. The
            Mac address can be in hyphenated (`00-04-f2-5e-ec-3c`) or not
            hyphenated (`0004f25eec3c`) format. You can get this value from the
            [List Common Area Phones
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/common-area-phones/listcommonareaphones).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: d6dfgdfgfdgiglw
                display_name: testcommonareaphone
                device_type: Cisco cp7821
                mac_address: 105f11123456
                status: offline
                site:
                  id: CEdfdfgdgixWA
                  name: Main Site
                provision:
                  type: manual
                  sip_accounts:
                    - sip_domain: abc.zoomcloudpbx.com
                      outbound_proxy: abcd.zoom.us:1001
                      secondary_outbound_proxy: proxy.example.com:5555
                      user_name: '71600000002730'
                      authorization_id: '1234567894'
                      password: SomeRandomPasswordValue
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - phone > common area phones > {common Area Phone Id}
      summary: Update common area phone
      description: >-
        Use this API to update details on a specific [common area
        phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)
        in an account.


        A common area phone can be provisioned by a Zoom account owner or a Zoom
        admin so that anyone in an organization can use it. For example, if your
        office has shared desks that don't belong to a specific employees, you
        could add a common area phone so that any person can use it.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**


        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions

        * A [supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the
                    [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
                    to which the common area desk phone is assigned.
                  example: amet a
                display_name:
                  type: string
                  description: Display name of the common area phone.
                  example: aliquip
                extension_number:
                  type: integer
                  description: >-
                    Extension number of the phone. If site code is enabled,
                    provide short extension number instead.
                  example: '94084624'
                mac_address:
                  type: string
                  description: ' Mac address or serial number of the device. Examples of supported format: "64-16-7f-37-90-92" or "64167f379092".'
                  example: tempor labore
                provision_template_id:
                  type: string
                  description: Provision template id
                  example: labore cillum incididunt tempor amet
                policy:
                  type: string
                  example: >-
                    {"select_outbound_caller_id":{"enable":true},"international_call":{"enable":true},"hot_desking":{"status":"unsupported"}}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > common area phones > {common Area Phone Id}
      summary: Delete a common area phone
      description: >-
        A common area phone can be provisioned by a Zoom account owner or a Zoom
        admin so that anyone in an organization can use it. For example, if your
        office has shared desks that don't belong to a specific employees, you
        could add a common area phone so that any person can use it.<br> Use
        this API to remove the [common area
        phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)
        from Zoom Phone System in an account.<br><br>**Prerequisites:**<br>

        * Pro or a higher account with Zoom Phone license.

        * Account owner or admin permissions.

        * [Supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>

        **Scopes:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: commonAreaPhoneId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the common area phone.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/common_area_phones:
    post:
      tags:
        - phone > common area phones
      summary: Add a common area phone
      description: >-
        Use this API to [add a common area
        phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones#h_2d0da347-c35a-4993-9771-e21aaa568deb).


        A common area phone can be provisioned by a Zoom account owner or a Zoom
        admin so that anyone in an organization can use it. For example, if your
        office has shared desks that don't belong to a specific employees, you
        could add a common area phone so that any person can use it.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**


        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions

        * A [supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"display_name\": \"officia dolore incididunt\",\n   
                \"extension_number\": -12525228,\n    \"mac_address\":
                \"incididunt adipisicing ut qui\",\n    \"type\": \"culpa
                commodo sunt\",\n    \"site_id\": \"dolor amet commodo\",\n   
                \"description\": \"Duis tempor mollit\",\n    \"model\": \"in ut
                anim\",\n    \"time_zone\": \"i\",\n   
                \"provision_template_id\": \"amet ipsum occae\"\n}"
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: comfgfd45um
                display_name: Common Area Phone - lobby
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > common area phones
      summary: List common area phones
      description: >-
        Use this API to list all of an account's [common area
        phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).


        A common area phone can be provisioned by a Zoom account owner or a Zoom
        admin so that anyone in an organization can use it. For example, if your
        office has shared desks that don't belong to a specific employees, you
        could add a common area phone so that any person can use it.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:**


        * Pro or a higher account with Zoom Phone license.

        * Account owner or admin permissions.

        * A [supported
        device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The total number of records returned from a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: string
                page_size: integer
                total_records: integer
                common_area_phones:
                  - id: string
                    display_name: string
                    device_type: string
                    mac_address: string
                    calling_plans:
                      - type: string
                        name: string
                    phone_numbers:
                      - id: string
                        number: string
                        source: string
                    status: string
                    site:
                      id: string
                      name: string
  /phone/blocked_list/{blockedListId}:
    patch:
      tags:
        - phone > blocked list > {blocked List Id}
      summary: Update a blocked list
      description: >+
        A Zoom account owner or a user with admin privilege can block phone
        numbers for phone users in an account. Blocked numbers can be inbound
        (numbers will be blocked from calling in) and outbound (phone users in
        your account won't be able to dial those numbers). Blocked callers will
        hear a generic message stating that the person they are calling is not
        available.<br>Use this API to update information on the blocked
        list.<br>

        **Prerequisites:**

        * Pro or higher account plan with Zoom phone license<br>

        **Scope:** `phone:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                match_type:
                  type: string
                  description: >-
                    Specify the match type for the blocked list. The values can
                    be one of the following:<br><br>

                    `phoneNumber`: Choose this option (Phone Number Match) if
                    you want to block a specific phone number. Then, in the
                    `phone_number` field, provide the phone number along with
                    the country code.<br><br>

                    `prefix`: Choose this option (Prefix Match) if you want to
                    block all numbers with a specific country code and area
                    code. Next, in the `phone_number` field, enter a country
                    code as part of the prefix. For example, entering 1907
                    blocks numbers with country code 1 and area code 907. (This
                    can only be one of phoneNumber,prefix)
                  example: phoneNumber
                phone_number:
                  type: string
                  description: >-
                    The phone number to be blocked if you passed "phoneNumber"
                    as the value for the `match_type` field. If you passed
                    "prefix" as the value for the `match_type` field, provide
                    the prefix of the phone number here including the country
                    code. For example, entering 1905 blocks numbers with country
                    code 1 and area code 905.
                  example: nul
                block_type:
                  type: string
                  description: >-
                    State whether you want the block type to be inbound or
                    outbound.<br>

                    `inbound`: Pass this value to prevent the blocked number or
                    prefix from calling in to phone users.<br>

                    `outbound`: Pass this value to prevent phone users from
                    calling the blocked number or prefix. (This can only be one
                    of inbound,outbound)
                  example: inbound
                status:
                  type: string
                  description: >-
                    Enable or disable the blocking. One of the following values
                    are allowed:<br>

                    `active`: Keep the blocking active.<br>

                    `inactive`: Disable the blocking. (This can only be one of
                    active,inactive)
                  example: active
                comment:
                  type: string
                  description: >-
                    Provide a comment to help you identify the blocked number or
                    prefix.
                  example: ea nulla culpa
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: blockedListId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the blocked list.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > blocked list > {blocked List Id}
      summary: Delete a blocked list
      description: >-
        A Zoom account owner or a user with admin privilege can block phone
        numbers for phone users in an account. Blocked numbers can be inbound
        (numbers will be blocked from calling in) and outbound (phone users in
        your account won't be able to dial those numbers).

        <br>Use this API to delete a blocked list and therefore removing the
        associated number from the blocked list. The number will be unblocked
        after the deletion.<br>

        **Prerequisites:**

        * Pro or higher account plan with Zoom phone license<br>

        **Scope:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: blockedListId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the blocked list. This can be
            retrieved from the List Blocked List API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > blocked list > {blocked List Id}
      summary: Get blocked list details
      description: >-
        A Zoom account owner or a user with admin privilege can block phone
        numbers for phone users in an account. Blocked numbers can be inbound
        (numbers will be blocked from calling in) and outbound (phone users in
        your account won't be able to dial those numbers). Blocked callers will
        hear a generic message stating that the person they are calling is not
        available.<br>Use this API to get information about a specific blocked
        list.<br>

        **Prerequisites:**

        * Pro or higher account plan with Zoom phone license<br>

        **Scope:** `phone:read:admin`<br> 

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: blockedListId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the blocked list.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 7bR_Ix4KSJS_heuPPKc0Zw
                match_type: prefix
                phone_number: '0001'
                block_type: inbound
                comment: Blocked all numbers starting with 0001
                status: active
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/blocked_list:
    post:
      tags:
        - phone > blocked list
      summary: Create a blocked list
      description: >-
        A Zoom account owner or a user with admin privilege can block phone
        numbers for phone users in an account. Blocked numbers can be inbound
        (numbers will be blocked from calling in) and outbound (phone users in
        your account won't be able to dial those numbers). Blocked callers will
        hear a generic message stating that the person they are calling is not
        available.<br>Use this API to create a blocked list and add a number to
        that blocked list.<br>

        **Prerequisites:**

        * Pro or higher account plan with Zoom phone license<br>

        **Scope:** `phone:write:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                match_type:
                  type: string
                  description: >-
                    Specify the match type for the blocked list. The values can
                    be one of the following:<br><br>

                    `phoneNumber`: Choose this option (Phone Number Match) if
                    you want to block a specific phone number. Then, in the
                    `phone_number` field, provide the phone number along with
                    the country code.<br><br>

                    `prefix`: Choose this option (Prefix Match) if you want to
                    block all numbers with a specific country code and area
                    code. Next, in the `phone_number` field, enter a country
                    code as part of the prefix. For example, entering 1907
                    blocks numbers with country code 1 and area code 907. (This
                    can only be one of phoneNumber,prefix)
                  example: phoneNumber
                phone_number:
                  type: string
                  description: >-
                    The phone number to be blocked if you passed "phoneNumber"
                    as the value for the `match_type` field. If you passed
                    "prefix" as the value for the `match_type` field, provide
                    the prefix of the phone number here including the country
                    code. For example, entering 1905 blocks numbers with country
                    code 1 and area code 905.
                  example: nul
                block_type:
                  type: string
                  description: >-
                    State whether you want the block type to be inbound or
                    outbound.<br>

                    `inbound`: Pass this value to prevent the blocked number or
                    prefix from calling in to phone users.<br>

                    `outbound`: Pass this value to prevent phone users from
                    calling the blocked number or prefix. (This can only be one
                    of inbound,outbound)
                  example: inbound
                status:
                  type: string
                  description: >-
                    Enable or disable the blocking. One of the following values
                    are allowed:<br>

                    `active`: Keep the blocking active.<br>

                    `inactive`: Disable the blocking. (This can only be one of
                    active,inactive)
                  example: active
                comment:
                  type: string
                  description: >-
                    Provide a comment to help you identify the blocked number or
                    prefix.
                  example: ea nulla culpa
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: dhfhfhnim
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > blocked list
      summary: List blocked lists
      description: >-
        A Zoom account owner or a user with admin privilege can block phone
        numbers for phone users in an account. Blocked numbers can be inbound
        (numbers will be blocked from calling in) and outbound (phone users in
        your account won't be able to dial those numbers). Blocked callers will
        hear a generic message stating that the person they are calling is not
        available.<br>Use this API to list all the blocked lists in an
        acccount.<br>

        **Prerequisites:**

        * Pro or higher account plan with Zoom phone license<br>

        **Scope:** `phone:read:admin`<br> 


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The total number of records returned from a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: ''
                page_size: 30
                total_records: 2
                blocked_list:
                  - id: 7buyurtKc0Zw
                    match_type: prefix
                    phone_number: '15550100'
                    block_type: inbound
                    comment: Blocked numbers starting with 777
                    status: active
                  - id: cYDtrtyrgyQw
                    match_type: phoneNumber
                    phone_number: '15550101'
                    block_type: inbound
                    comment: Blocked an unknown caller
                    status: active
  /phone/shared_line_groups/{sharedLineGroupId}/members:
    post:
      tags:
        - phone > shared line groups > {shared Line Group Id} > members
      summary: Add members to a shared line group
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. This gives members of the shared line
        group access to the group's direct phone number and voicemail. Use this
        API to [add
        members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_7cb42370-48f6-4a8f-84f4-c6eee4d9f0ca)
        to a Shared Line Group. Note that a member can only be added to one
        shared line group. 


        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges 


        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: >-
                    Members can comprise of users on the account as well as
                    common area phones. You can add a maximum of 10 members at
                    once.
                  example: >-
                    {"users":[{"id":"ut elit Duis id
                    voluptate","email":"laborum"},{"id":"qui","email":"anim et
                    sunt"}],"common_area_phone_ids":["tempor","ut Lorem"]}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the shared line group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > shared line groups > {shared Line Group Id} > members
      summary: Unassign members of a shared line group
      description: >-
        Members of the [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) have
        access to the group's phone number and voicemail. Use this API to
        unassign **all** the existing members from a Shared Line Group.

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges


        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the Shared Line Group that you would
            like to delete.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/shared_line_groups/{sharedLineGroupId}/members/{memberId}:
    delete:
      tags:
        - phone > shared line groups > {shared Line Group Id} > members
      summary: Unassign a member from a shared line group
      description: >-
        Members of the [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) have
        access to the group's phone number and voicemail. Use this API to
        unassign **a specific member** from a Shared Line Group.

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges


        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the shared line group from which you
            would like to remove a member.
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the member who is to be removed.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/shared_line_groups/{sharedLineGroupId}/phone_numbers:
    post:
      tags:
        - phone > shared line groups > {shared Line Group Id} > phone numbers
      summary: Assign phone numbers
      description: >-
        Use this API to assign phone numbers to a shared line groups. These
        direct phone numbers will be shared among members of the [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges


        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_numbers:
                  type: string
                  description: Phone number(s) to be assigned to the Shared Line Group.
                  example: >-
                    [{"id":"do labore","number":"Ut nostrud ir"},{"id":"aliqua
                    ut nostrud","number":"esse culpa deserunt"}]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Shared Line Group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > shared line groups > {shared Line Group Id} > phone numbers
      summary: Unassign all phone numbers
      description: >-
        Use this API to unassign all the phone numbers that have been assigned
        to the [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges


        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Shared Line Group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/shared_line_groups/{sharedLineGroupId}/phone_numbers/{phoneNumberId}:
    delete:
      tags:
        - phone > shared line groups > {shared Line Group Id} > phone numbers
      summary: Unassign a phone number
      description: >-
        Use this API to unassign a specific phone number that was assigned to
        the [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * A valid Shared Line Group

        * Account owner or admin privileges


        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the shared line group from which you
            would like to unassign a phone number.
          example: Excepteur aute deserunt occaecat ea
        - name: phoneNumberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the phone number which is to be
            unassigned. This can be retrieved from Get a Shared Line Group API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/shared_line_groups/{sharedLineGroupId}:
    get:
      tags:
        - phone > shared line groups > {shared Line Group Id}
      summary: Get a shared line group
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. This gives members of the shared line
        group access to the group's direct phone number and voicemail. Use this
        API to list all the Shared Line Groups.


        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * Account owner or admin privileges 


        **Scopes:** `phone:read:admin` or `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Shared Line Group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: jsehdfrrg4
                display_name: Bay Area Shared Line Group
                extension_number: 123
                phone_numbers:
                  - id: dsfdg3r
                    number: '1365435426'
                  - id: hfgdcfhjj
                    number: '5673856375'
                primary_number: '5673856375'
                site:
                  id: dhfdhsf4
                  name: Engineering Site
                members:
                  users:
                    - id: gdfsx57ytcfgg
                      name: ipsum reprehenderit
                    - id: nisi3t5hgvsed
                      name: dolore sed
                  common_area_phones:
                    - id: eu34gcogfft5nsectetur
                      name: Lobby Phone
                timezone: America/Los_Angeles
                status: active
    patch:
      tags:
        - phone > shared line groups > {shared Line Group Id}
      summary: Update a shared line group
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. This gives members of the shared line
        group access to the group's direct phone number and voicemail. Use this
        API to update information of a Shared Line Group. 

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * Account owner or admin privileges 


        **Scopes:** `phone:write:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  description: Display Name of the Shared Line Group.
                  example: Lorem eiusmod in ea id
                extension_number:
                  type: integer
                  description: Extension number assigned to the Shared Line Group.
                  example: '75715518'
                primary_number:
                  type: string
                  description: >-
                    If you have multiple direct phone numbers assigned to the
                    shared line group, select a number from those numbers as the
                    primary number. The primary number shares the same line as
                    the extension number. This means if a caller is routed to
                    the shared line group through an auto receptionist, the line
                    associated with the primary number will be used. A pending
                    number cannot be used as a Primary Number.
                  example: '{"id":"laboris officia","number":"ani"}'
                timezone:
                  type: string
                  description: >-
                    Timezone to be used for the Business Hours. A value should
                    be provided from the IDs listed
                    [here](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).
                  example: sit
                status:
                  type: string
                  description: >-
                    Status of the Shared Line Group. (This can only be one of
                    active,inactive)
                  example: active
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the shared line group that is to be
            updated.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - phone > shared line groups > {shared Line Group Id}
      summary: Delete a shared line group
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. Use this API to delete a Shared Line
        Group. 

        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * Account owner or admin privileges 


        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: sharedLineGroupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the shared line group that you would
            like to delete.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/shared_line_groups:
    post:
      tags:
        - phone > shared line groups
      summary: Create a shared line group
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. This gives members of the shared line
        group access to the group's direct phone number and voicemail. Use this
        API to create a shared line group.


        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * Account owner or admin privileges 


        **Scopes:** `phone:write:admin`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  description: >-
                    (Required) Provide a name to help identify the shared line
                    group.
                  example: sint
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the
                    [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
                    that you would like to use for the shared line group. You
                    will only be able to add members that belong to this site to
                    the shared line group.


                    This field is required only if the [multiple
                    sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
                    option has been enabled for the account.
                  example: voluptate tempor eu incididunt nulla
                description:
                  type: string
                  description: Provide a description for the shared line group.
                  example: consectetur labo
                extension_number:
                  type: number
                  description: >-
                    Extension number to be assigned to the shared line group. If
                    a [site code has been
                    assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
                    to the site, provide the short extension number
                  example: '-57004176'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - phone > shared line groups
      summary: List shared line groups
      description: >-
        A [shared line
        group](https://support.zoom.us/hc/en-us/articles/360038850792) allows
        Zoom Phone admins to share a phone number and extension with a group of
        phone users or common area phones. This gives members of the shared line
        group access to the group's direct phone number and voicemail. Use this
        API to list all the Shared Line Groups.


        **Prerequisties:** <br>

        * Pro or higher account with Zoom Phone license.

        * Account owner or admin privileges  <br>


        **Scopes:** `phone:read:admin`, `phone:write:admin`

         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: hkdsfghdj3hef
                page_size: 30
                total_records: 1
                shared_line_groups:
                  - id: sdgfhdser83velit
                    display_name: Test Shared Line Group
                    extension_number: 123
                    phone_numbers:
                      - id: min4glt
                        number: '46835635784'
                        status: available
                    status: active
                    site:
                      id: dgfgfgh433
                      name: San Jose Site
  /phone/metrics/call_logs:
    get:
      tags:
        - phone > metrics/call logs
      summary: List call logs
      description: >-
        Call logs provide a record of all incoming and outgoing calls over Zoom
        Phone in an account. 


        Use this API to list monthly call logs metrics. You can use query
        parameters to filter the response by date, site and MOS(Mean Opinion
        Score) of the call. 


        **Prerequisites:**

        * Business, or Education account

        * Zoom Phone license <br><br>


        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>

        **Rate Limit Label:** `Heavy`
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for the report in `yyyy-mm-dd` format. Specify a 30 day
            range using the `from` and `to` parameters as the response provides
            a maximum of a month worth of data per API request.
          example: Excepteur aute deserunt occaecat ea
        - name: to
          in: query
          schema:
            type: string
          description: End date for the report in `yyyy-mm-dd` format.
          example: Excepteur aute deserunt occaecat ea
        - name: site_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of the
            [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
            Use this query parameter if you have enabled multiple sites and
            would like to filter the response of this API call by call logs of a
            specific phone site.
          example: Excepteur aute deserunt occaecat ea
        - name: quality_type
          in: query
          schema:
            type: string
          description: >+
            Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general
            baseline to categorize calls by call quality. A MOS greater than or
            equal to 3.5 means good quality, while below 3.5 means poor quality.
            <br><br>The value of this field can be one of the following:<br>

            * `good`: Retrieve call logs of the call(s) with good quality of
            voice.<br>

            * `bad`: Retrieve call logs of the call(s) with good quality of
            voice.<br>

            * `all`: Retrieve all call logs without filtering by voice quality. 



          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: Dhgnfxcnxzerz
                page_size: 10
                total_records: 3
                from: '2020-03-11'
                to: '2020-09-11'
                call_logs:
                  - call_id: '600097'
                    duration: 75
                    direction: internal
                    date_time: '2020-09-11T05:38:53Z'
                    mos: '1.0'
                    caller:
                      phone_number: '+15550100'
                      extension_number: '1021'
                      codec: opus
                      microphone: Logitech USB Headset H340
                      headset: Logitech USB Headset H340
                      isp: other
                      device_type: Windows_Client 5.2.42619.0804
                      site_id: 8f71O6rWT8KFUGQmJIFAdQ
                    callee:
                      phone_number: '+15550101'
                      extension_number: '1003'
                      codec: opus
                      microphone: Logitech USB Headset H340
                      headset: Logitech USB Headset H340
                      isp: other
                      device_type: Windows_Client 5.2.42619.0804
                      site_id: 8f71O86ghjIFAdQ
                  - call_id: '687000062'
                    duration: 71
                    direction: internal
                    date_time: '2020-09-11T05:35:41Z'
                    mos: '1.0'
                    caller:
                      phone_number: '+15550100'
                      extension_number: '1021'
                      codec: opus
                      microphone: Logitech USB Headset H340
                      headset: Logitech USB Headset H340
                      isp: other
                      device_type: Windows_Client 5.2.42619.0804
                      site_id: 8f9586mJIFAdQ
                    callee:
                      phone_number: '+15550101'
                      extension_number: '1003'
                      codec: opus
                      microphone: Logitech USB Headset H340
                      headset: Logitech USB Headset H340
                      isp: other
                      device_type: Windows_Client 5.2.42619.0804
                      site_id: 8f87cgmJIFAdQ
                  - call_id: '68798685701826'
                    duration: 67
                    direction: internal
                    date_time: '2020-09-11T05:30:49Z'
                    mos: '1.0'
                    caller:
                      phone_number: '+15550100'
                      extension_number: '1021'
                      codec: opus
                      microphone: Logitech USB Headset H340
                      headset: Logitech USB Headset H340
                      isp: other
                      device_type: Windows_Client 5.2.42619.0804
                      site_id: 8f71O6rWT8KFUGQmJIFAdQ
                    callee:
                      extension_number: '10006'
                      site_id: DS8YB6B6TYSN8BKo0P-5ug
  /phone/metrics/call_logs/{call_id}:
    get:
      tags:
        - phone > metrics/call logs
      summary: Get call details from call log
      description: >
        Call logs provide a record of all incoming and outgoing calls over Zoom
        Phone in an account. 


        Use this API to list call log details of a specific call. 


        **Prerequisites:**

        * Business, or Education account

        * Zoom Phone license <br><br>


        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>

        **Rate Limit Label:** `Light`
      parameters:
        - name: call_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the phone call. The value of this
            field can be retrieved from [List Call Logs]() API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                call_id: '687100000600397'
                duration: 75
                direction: internal
                date_time: '2020-09-11T05:38:53Z'
                mos: '1.0'
                caller:
                  id: Y40bbbbgGh0V1Ul_Q
                  extension_type: user
                  display_name: Abcde
                  phone_number: '+15550100'
                  extension_number: '1021'
                  codec: opus
                  microphone: Logitech USB Headset H340
                  headset: Logitech USB Headset H340
                  isp: other
                  device_type: Windows_Client 5.2.42619.0804
                  site_id: 8f71986768JIFAdQ
                callee:
                  id: DnE46573vvzjgojw
                  extension_type: user
                  display_name: Shrijana
                  phone_number: '+15550101'
                  extension_number: '1003'
                  codec: opus
                  microphone: Logitech USB Headset H340
                  headset: Logitech USB Headset H340
                  isp: other
                  device_type: Windows_Client 5.2.42619.0804
                  site_id: 8f71O66543IFAdQ
                  route:
                    - id: 8M756763533A
                      extension_type: callQueue
                      display_name: asfdfsdg3_214
                      extension_number: '10006'
  /phone/metrics/call_logs/{callId}/qos:
    get:
      tags:
        - phone > metrics/call logs
      summary: Get call QoS
      description: >-
        Get call quality of service(QoS) data for a call made or received by a
        Zoom phone user in the account. 


        **Prerequisites:**

        * Business, or Education account

        * Zoom Phone license <br><br>

        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>

        **Rate Limit Label:** `Light`
      parameters:
        - name: callId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the call.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                call_id: '6738888828'
                caller_qos:
                  sending:
                    - date_time: '2019-09-05T02:22:27Z'
                      qos:
                        bitrate: 28.4kbps
                        avg_loss: 0.03%
                        max_loss: 0.4%
                        jitter: 0ms
                        network_delay: '252'
                        mos: '4.0'
                    - date_time: '2019-09-05T02:23:27Z'
                      qos:
                        bitrate: 27.15kbps
                        avg_loss: 0.03%
                        max_loss: 0.4%
                        jitter: 0ms
                        network_delay: '251'
                        mos: '4.0'
                    - date_time: '2019-09-05T02:24:27Z'
                      qos:
                        bitrate: 37.25kbps
                        avg_loss: 0%
                        max_loss: 0%
                        jitter: 0.55ms
                        network_delay: '249'
                        mos: '4.0'
                  receiving:
                    - date_time: '2019-09-05T02:22:35Z'
                      qos:
                        bitrate: 26.25kbps
                        avg_loss: 1.8%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '248'
                        mos: '3.9'
                    - date_time: '2019-09-05T02:23:40Z'
                      qos:
                        bitrate: 26.14kbps
                        avg_loss: 1.1%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '252'
                        mos: '3.9'
                    - date_time: '2019-09-05T02:24:40Z'
                      qos:
                        bitrate: 26.66kbps
                        avg_loss: 1.3%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '248'
                        mos: '3.9'
                callee_qos:
                  sending:
                    - date_time: '2019-09-05T02:22:33Z'
                      qos:
                        bitrate: 18.23kbps
                        avg_loss: 0.03%
                        max_loss: 0.55%
                        jitter: 0ms
                        network_delay: '0'
                        mos: '4.5'
                    - date_time: '2019-09-05T02:23:34Z'
                      qos:
                        bitrate: 18.28kbps
                        avg_loss: 0%
                        max_loss: 0%
                        jitter: 2.52ms
                        network_delay: '0'
                        mos: '4.5'
                    - date_time: '2019-09-05T02:24:34Z'
                      qos:
                        bitrate: 19.16kbps
                        avg_loss: 0%
                        max_loss: 0%
                        jitter: 0.48ms
                        network_delay: '0'
                        mos: '4.5'
                  receiving:
                    - date_time: '2019-09-05T02:22:35Z'
                      qos:
                        bitrate: 26.25kbps
                        avg_loss: 1.8%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '248'
                        mos: '3.9'
                    - date_time: '2019-09-05T02:23:40Z'
                      qos:
                        bitrate: 26.14kbps
                        avg_loss: 1.1%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '252'
                        mos: '3.9'
                    - date_time: '2019-09-05T02:24:40Z'
                      qos:
                        bitrate: 26.66kbps
                        avg_loss: 1.3%
                        max_loss: ''
                        jitter: 1.0ms
                        network_delay: '248'
                        mos: '3.9'
  /phone/batch_locations:
    post:
      tags:
        - phone
      summary: Batch add emergency service locations
      description: Use this API to batch add emergency service locations.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                locations:
                  type: string
                  description: '(Required) '
                  example: >-
                    [{"identifier":"esse aliquip in","display_name":"officia id
                    sit","emergency_address":{"address_line1":"in
                    ali","country":"Lorem","address_line2":"in in","city":"ut
                    anim nisi","state_code":"laborum consectetur dolor
                    eius","zip":"aute deserunt","vat_number":""},"elin":"amet
                    sed","bssid":"sint consectetur mollit
                    dolore","public_ip":"id culpa ipsum","private_ip":"et quis
                    laboris dolore tempor","parent_identifier":"veniam
                    ipsum","sip_group_name":"tempor reprehenderit
                    dolore","network_switches":[{"mac_address":"aliqua eu
                    voluptate commodo","port":"et ut
                    en","port_prefix":"cupidatat sed aute
                    dolor","port_range_from":"aliqua velit ad
                    minim","port_range_to":"aliquip velit
                    ad"},{"mac_address":"Excepteur eu laboris
                    aliqua","port":"esse in eu cupidatat","port_prefix":"dolore
                    irure","port_range_from":"deserunt adipisicing non esse
                    qui","port_range_to":"aute ad
                    aliquip"}]},{"identifier":"et","display_name":"eiusmod do ex
                    magna","emergency_address":{"address_line1":"Excepteur in in
                    nulla","country":"sint velit exercitation
                    Ut","address_line2":"laboris laborum","city":"consequat
                    velit enim","state_code":"quis ea non
                    fugiat","zip":"pariatur sed nulla
                    do","vat_number":"cillum"},"elin":"velit Ut","bssid":"quis
                    et minim tempor","public_ip":"reprehenderit esse minim
                    incididunt","private_ip":"do dolor sit sed
                    aliquip","parent_identifier":"mollit","sip_group_name":"in
                    in
                    nisi","network_switches":[{"mac_address":"laboris","port":"adipisicing
                    aute dolore","port_prefix":"do nulla
                    dolor","port_range_from":"et
                    ea","port_range_to":"eiusmod"},{"mac_address":"pariatur
                    nisi","port":"commodo labore ea","port_prefix":"elit
                    anim","port_range_from":"aliquip
                    culpa","port_range_to":"exercitation et tempor"}]}]
                site_id:
                  type: string
                  description: The site's ID.
                  example: dolore et sunt qui
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - location_id: 8e77d889-baba-43d1-b80c-77c90c135cde
                  display_name: location name
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/sip_groups:
    get:
      tags:
        - phone
      summary: List SIP groups
      description: >-
        Use this API to list SIP (Session Initiation Protocol) groups.


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Pro or a higher account with Zoom Phone license

        * Account owner or admin permissions
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: sdfafdsa12fa_fasfdacc
                page_size: 1
                sip_groups:
                  - id: dddMfX_eRLqrYCHnntfdJA
                    display_name: sip_group_01
                    send_sip_group_name: false
                    sip_trunk:
                      id: VWQU-veBQnm08EtBkUGnbw
                      name: SIPAPI01
                    description: SIP Group 1
  /phone/recordings:
    get:
      tags:
        - phone
      summary: Get call recordings
      description: >-
        Use this API to list an account's [call
        recordings](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings)


        **Scopes:** `phone:read:admin`,
        `phone:write:admin`,`phone_recording:read:admin`


        **Prerequisties:** 

        * A Pro or higher account plan 

        * A Zoom Phone license 

        * Account owner or admin privileges
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: number
          description: >-
            The number of records returned within a single API call. The default
            is **30**, and the maximum is **100**.
          example: '-17728915'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: The current page number of returned records.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: >
            Start date and time in **yyyy-mm-dd** format or
            **yyyy-MM-dd’T’HH:mm:ss’Z’** format. The date range defined by the
            from and to parameters should only be one month as the report
            includes only one month worth of data at once.
          example: Excepteur aute deserunt occaecat ea
        - name: to
          in: query
          schema:
            type: string
          description: >+
            End date and time in **yyyy-mm-dd** format or
            **yyyy-MM-dd’T’HH:mm:ss’Z’** format, the same formats supported by
            the `from` parameter.

          example: Excepteur aute deserunt occaecat ea
        - name: owner_type
          in: query
          schema:
            type: string
          description: >
            The owner type. The allowed values are null, `user`, or `callQueue`.
            The default is null. If null, returns all owner types.
          example: all
        - name: recording_type
          in: query
          schema:
            type: string
          description: >
            The recording type. The allowed values are null, `OnDemand`, or
            `Automatic`. The default is null. If null, returns all recording
            types.
          example: Excepteur aute deserunt occaecat ea
        - name: site_id
          in: query
          schema:
            type: string
          description: The site ID. The default is `All sites`.
          example: All sites
        - name: query_date_type
          in: query
          schema:
            type: string
          description: |-
            The query's date type:
            * `start_time`
            * `end_time`

            This value defaults to `start_time`.
          example: start_time
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: '3'
                page_size: '2'
                total_records: '1'
                recordings:
                  - id: test
                    caller_number: '4085552222'
                    caller_number_type: internal
                    caller_name: janedoe
                    callee_number: '4087778888'
                    callee_number_type: external
                    callee_name: johndoe
                    recording_type: OnDemand
                    owner:
                      type: user
                      id: '123'
                      extension_number: '43765674'
                      name: Tracy
                    site:
                      id: dfhg35273d
                      name: string
                    direction: inbound
                    duration: 50
                    download_url: >-
                      https://zoom.us/v2/phone/recording/download/6FHBshghfd3t7-45476zKrw
                    date_time: '2020-11-03T14:31:41Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/sip_trunk/trunks:
    get:
      tags:
        - phone
      summary: List BYOC SIP trunks
      description: >-
        Use this API to return a list of an account's assigned [BYOC (Bring Your
        Own Carrier) SIP (Session Initiation Protocol)
        trunks](https://zoom.us/docs/doc/Zoom-Bring%20Your%20Own%20Carrier.pdf).


        **Scopes:** `phone:write:admin` or `phone:master`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise account
      security:
        - oauth2Auth: []
      parameters:
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: ' '
                page_size: '30'
                byoc_sip_trunk:
                  - id: con3t6gdt
                    name: Test 12
                    carrier: my_carrierr
                    carrier_account: dsgf63tt
                    region: US
                    sbc_label: abc-test
  /phone/company_number:
    put:
      tags:
        - phone
      summary: Change main company number
      description: >-
        Use this API to [change an account's main company
        number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72).


        External users can use the [main company
        number](https://support.zoom.us/hc/en-us/articles/360028553691) to reach
        your Zoom Phone users by dialing the main company number and the user's
        extension. It can also be used by your account's Zoom Phone users as
        their caller ID when making calls.


        **Scopes:** `phone:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Pro or higher account plan 

        * Account owner or admin permissions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: >-
                    Provide either the unique identifier of the phone number
                    (id) or the phone number itself in e164 format (e.g:
                    +199955500123).
                  example: fugiat dolor Duis
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/calling_plans:
    get:
      tags:
        - phone
      summary: List calling plans
      description: >-
        Use this API to return all of an account's Zoom Phone [calling
        plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).


        **Scopes:** `phone:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Pro or a higher account 

        * A Zoom Phone license
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                calling_plans:
                  - name: US/Canada metered calling plan
                    type: 100
                    subscribed: 10
                    assigned: 1
                    available: 9
                  - name: Australia/New Zealand metered calling plan
                    type: 101
                    subscribed: 4
                    assigned: 2
                    available: 2
  /phone/reports/operationlogs:
    get:
      tags:
        - phone
      summary: Get operation logs report
      description: >+
        The **Phone System operation logs report** allows account owners and
        admins to view monthly Zoom phone related admin operation details. 


        Use this API to retrieve the **Phone System Operation Logs Report**.
        Account owners and admins can also access this information by logging
        into their Zoom accounts and navigating to [Phone System Operation
        Logs](https://zoom.us/pbx/page/report/operations#/report/operation-logs).<br><br>
        **Scopes:** `phone:read:admin`, `phone:write:admin` <br> **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

        <br> **Prerequisites:** <br>

        * Account must be enrollled in Pro or a higher plan

        * Account must be enrolled in a [Zoom
        Phone](https://zoom.us/pricing/zoom-phone) plan

      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date in 'yyyy-mm-dd' format. The date range defined by the
            "from" and "to" parameters should only be one month as the report
            provides only one month worth of data per API request.
          example: Excepteur aute deserunt occaecat ea
        - name: to
          in: query
          schema:
            type: string
          description: End date in 'yyyy-mm-dd' format.
          example: Excepteur aute deserunt occaecat ea
        - name: category_type
          in: query
          schema:
            type: string
          description: >-
            Filter the response by the category of the action performed. By
            default, the value of this field is "all" and thus, the response
            will include log of all operations for the defined period.<br><br>To
            only include response for a specific category type, provide a value
            for `category_type` from this
            [table](http://marketplace.zoom.us/docs/phone-operation-categories
            ).
          example: all
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: abcD3944YsoYPB12
                page_size: 15
                total_records: 16
                from: '2020-08-01'
                to: '2020-08-30'
                operation_logs:
                  - time: '2020-08-24T06:15:12Z'
                    operator: apbchd@mail123a.com
                    category_type: Phone Number
                    action: UPDATE
                    operation_detail: >-
                      Unbind Phone Number +1112222 From
                      Not_Delete_CallQueue_Recording
                  - time: '2020-08-24T06:13:30Z'
                    operator: apbchd@mail123a.com
                    category_type: Phone Number
                    action: DELETE
                    operation_detail: Delete Phone Number +123456 From abc.zoom.us
                  - time: '2020-08-11T03:13:17Z'
                    operator: apbcdef@mail123a.com
                    category_type: Device
                    action: ADD
                    operation_detail: Add Device testDevice
                  - time: '2020-08-06T08:29:45Z'
                    operator: apapbchd@mail123a.com
                    category_type: Phone Number
                    action: UPDATE
                    operation_detail: >-
                      Assign Phone Number +120000123 to Sam
                      Mendes(abcdaccount@someaccount.com)
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/byoc_numbers:
    post:
      tags:
        - phone
      summary: Add BYOC phone numbers
      description: >-
        Use this API to add BYOC (Bring Your Own Carrier) phone numbers to Zoom
        Phone.


        **Scopes:** `phone:write:admin`, `phone:write`, or
        `phone:master`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Business or Enterprise plan 

        * A Zoom Phone license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                carrier:
                  type: string
                  description: (Required) Name of the carrier.
                  example: irure proident fugiat
                phone_numbers:
                  type: string
                  description: >-
                    (Required) Phone number(s) to be added to Zoom. The value
                    should be in e164 format.
                  example: '["esse aliquip","aute cupidatat aliquip"]'
                site_id:
                  type: string
                  description: >-
                    Unique identifier of the site. This field is only required
                    if you have enabled multiple sites in the account. See
                    [Managing multiple
                    sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)
                    or [Adding a
                    site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15)
                    for details.
                  example: tempor esse consectetur
                sip_group_id:
                  type: string
                  description: Sip group id.
                  example: commodo
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                phone_numbers:
                  - id: incididunt
                    number: '+123456789'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /phone/voice_mails/{voicemailId}:
    delete:
      tags:
        - phone
      summary: Delete a voicemail
      description: >-
        Use this API to delete an account's [voicemail
        message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages).


        **Scopes:** `phone:write:admin`, `phone:write`, `phone_voicemail:write`,
        `phone_voicemail:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Zoom Phone license
      parameters:
        - name: voicemailId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the voicemail. Retrieve the value
            for this field by calling the [Get
            voicemails](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneuservoicemails)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /sip_phones/{phoneId}:
    patch:
      tags:
        - sip phones > {phone Id}
      summary: Update SIP phone
      description: >-
        Zoom’s Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to update information of a specific SIP Phone on a Zoom
        account.<br><br>

        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.<br> **Scope:** `sip_phone:write:admin`

        <br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: >-
                    (Required) The name or IP address of your provider’s SIP
                    domain. (example: CDC.WEB).
                  example: fugia
                register_server:
                  type: string
                  description: >-
                    (Required) IP address of the server that accepts REGISTER
                    requests. Note that if you are using the UDP transport
                    protocol, the default port is 5060. If you are using UDP
                    with a different port number, that port number must be
                    included with the IP address.
                  example: consequat magna incididunt tempor
                proxy_server:
                  type: string
                  description: >-
                    (Required) IP address of the proxy server for SIP requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server.
                  example: in eu
                register_server2:
                  type: string
                  description: >-
                    (Required) IP address of the server that accepts REGISTER
                    requests. Note that if you are using the UDP transport
                    protocol, the default port is 5060. If you are using UDP
                    with a different port number, that port number must be
                    included with the IP address.
                  example: officia consectetur exercitation
                proxy_server2:
                  type: string
                  description: >-
                    (Required) IP address of the proxy server for SIP requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server.
                  example: dolore
                register_server3:
                  type: string
                  description: >-
                    (Required) IP address of the server that accepts REGISTER
                    requests. Note that if you are using the UDP transport
                    protocol, the default port is 5060. If you are using UDP
                    with a different port number, that port number must be
                    included with the IP address.
                  example: dolor veniam anim labore
                proxy_server3:
                  type: string
                  description: >-
                    (Required) IP address of the proxy server for SIP requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server.
                  example: Duis do
                user_name:
                  type: string
                  description: >-
                    (Required) The phone number associated with the user in the
                    SIP account.
                  example: do Excepteur ullamco
                password:
                  type: string
                  description: >-
                    (Required) The password generated for the user in the SIP
                    account.
                  example: dolor irur
                authorization_name:
                  type: string
                  description: >-
                    (Required) Authorization name of the user  registered for
                    SIP Phone.
                  example: ea
                voice_mail:
                  type: string
                  description: (Required) The number to dial for checking voicemail.
                  example: Ut rep
                transport_protocol:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: UDP
                transport_protocol2:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: TLS
                transport_protocol3:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: TLS
                registration_expire_time:
                  type: integer
                  description: >-
                    The number of minutes after which the SIP registration of
                    the Zoom client user will expire, and the client will auto
                    register to the SIP server.
                  example: '60'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: phoneId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the SIP Phone. This can be retrieved
            from the List SIP Phones API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - sip phones > {phone Id}
      summary: Delete SIP phone
      description: >-
        Zoom’s Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to delete a specific SIP phone on a Zoom account.<br><br>

        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * User must enable SIP Phone Integration by contacting the
        [Sales](https://zoom.us/contactsales) team.<br> **Scope:**
        `sip_phone:read:admin`

        <br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: phoneId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the SIP Phone. It can be retrieved
            from the List SIP Phones API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /sip_phones:
    get:
      tags:
        - sip phones
      summary: List SIP phones
      description: >
        Zoom’s Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to list SIP phones on an account.<br><br>

        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * User must enable SIP Phone Integration by contacting the
        [Sales](https://zoom.us/contactsales) team.<br> **Scope:**
        `sip_phone:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: search_key
          in: query
          schema:
            type: string
          description: >-
            User name or email address of a user. If this parameter is provided,
            only the SIP phone system integration enabled for that specific user
            will be returned. Otherwise, all SIP phones on an account will be
            returned.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: number
          description: The number of records returned within a single API call.
          example: '-17728915'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 1
                total_records: 1
                phones:
                  - id: '123456'
                    user_email: example@example.com
                    domain: example.com
                    register_server: 192.0.2.1
                    transport_protocol: UDP
                    proxy_server: 192.0.2.2
                    register_server2: 192.0.2.3
                    transport_protocol2: UDP
                    proxy_server2: 192.0.2.4
                    register_server3: 192.0.2.5
                    transport_protocol3: UDP
                    proxy_server3: 192.0.2.6
                    registration_expire_time: 60
                    user_name: '1008'
                    password: apassword1
                    authorization_name: testname
                    voice_mail: '4000'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - sip phones
      summary: Enable SIP phone
      description: >+
        Zoom’s Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to enable a user to use SIP phone.<br><br>

        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.<br> **Scope:** `sip_phone:write:admin`

        <br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: >-
                    (Required) The name or IP address of your provider’s SIP
                    domain. (example: CDC.WEB).
                  example: fugiat eiusmod id sit
                register_server:
                  type: string
                  description: >-
                    (Required) IP address of the server that accepts REGISTER
                    requests. Note that if you are using the UDP transport
                    protocol, the default port is 5060. If you are using UDP
                    with a different port number, that port number must be
                    included with the IP address.
                  example: reprehenderit aliqua officia dolore
                proxy_server:
                  type: string
                  description: >-
                    (Required) IP address of the proxy server for SIP requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server.
                  example: magna et dolor sint
                user_name:
                  type: string
                  description: >-
                    (Required) The phone number associated with the user in the
                    SIP account.
                  example: cupidatat id ea
                password:
                  type: string
                  description: >-
                    (Required) The password generated for the user in the SIP
                    account.
                  example: nostrud in in eu
                authorization_name:
                  type: string
                  description: >-
                    (Required) Authorization name of the user registered for SIP
                    Phone.
                  example: et la
                user_email:
                  type: string
                  description: >-
                    (Required) The email address of the user to associate with
                    the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`,
                    `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of
                    the email (for example, `example@example.com.mac`) to add
                    accounts for different platforms for the same user.
                  example: RZRWw9yVlbewPE@bqZSmFjOrncFBkCyqxyWBL.lr
                voice_mail:
                  type: string
                  description: (Required) The number to dial for checking voicemail.
                  example: enim deserunt
                transport_protocol:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: TCP
                register_server2:
                  type: string
                  description: >-
                    IP address of the server that accepts REGISTER requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address.
                  example: pariatur au
                transport_protocol2:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: UDP
                proxy_server2:
                  type: string
                  description: >-
                    IP address of the proxy server for SIP requests. Note that
                    if you are using the UDP transport protocol, the default
                    port is 5060. If you are using UDP with a different port
                    number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server, or empty.
                  example: dolore reprehenderit magna
                register_server3:
                  type: string
                  description: >-
                    IP address of the server that accepts REGISTER requests.
                    Note that if you are using the UDP transport protocol, the
                    default port is 5060. If you are using UDP with a different
                    port number, that port number must be included with the IP
                    address.
                  example: dolor irure esse adipisicing
                transport_protocol3:
                  type: string
                  description: >-
                    Protocols supported by the SIP provider.<br> The value must
                    be either `UDP`, `TCP`, `TLS`, `AUTO`. (This can only be one
                    of UDP,TCP,TLS,AUTO)
                  example: TCP
                proxy_server3:
                  type: string
                  description: >-
                    IP address of the proxy server for SIP requests. Note that
                    if you are using the UDP transport protocol, the default
                    port is 5060. If you are using UDP with a different port
                    number, that port number must be included with the IP
                    address. If you are not using a proxy server, this value can
                    be the same as the Register Server, or empty.
                  example: ullamco adipisicing veniam tempor
                registration_expire_time:
                  type: integer
                  description: >-
                    The number of minutes after which the SIP registration of
                    the Zoom client user will expire, and the client will auto
                    register to the SIP server.
                  example: '60'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/account_profile:
    get:
      tags:
        - rooms > account profile
      summary: Get Zoom Room account profile
      description: >-
        Get details on the account profile of a Zoom Room. This information can
        only by accessed either by the Zoom Room Account Owner or a user with
        Zoom Rooms admin permission. To get information on an individual Room
        Profile, use [Get Zoom Room Profile
        API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/getzrprofile)
        instead.


        **Prerequisites:**<br>

        * Zoom account owner or Zoom Rooms admin permissions<br>


        **Scopes:** `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                basic:
                  support_email: example@example.com
                  support_phone: '15550100'
                  room_passcode: '12234'
                  required_code_to_ext: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > account profile
      summary: Update Zoom Room account profile
      description: >-
        Update information on the account profile of a Zoom Room. This
        information can only by accessed either by the Zoom Room Account Owner
        or a user with Zoom Rooms admin permission. To update information on an
        individual Room Profile, use [Update Zoom Room Profile
        API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/updatezrprofile)
        instead.


        **Prerequisites:**<br>

        * Zoom account owner or Zoom Rooms admin permissions<br>


        **Scopes:** `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                basic:
                  type: string
                  example: >-
                    {"support_email":"Vj7@uGObFk.mfi","support_phone":"exercitation
                    proident aute","room_passcode":"consequat
                    proide","required_code_to_ext":false}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/account_settings:
    get:
      tags:
        - rooms > account settings
      summary: Get Zoom Room account settings
      description: >-
        Get details on Account Settings of a Zoom Room. With this API, you can
        view either the **Account Meeting Settings** or the **Alert Settings**
        (Client Alert Settings and Notfication Settings) of the Zoom Rooms
        account. By default, only **Account Meeting Settings** are returned. To
        view only **Alert Settings**, specify `alert` as the value of the
        `setting_type` query parameter.<br><br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:read:admin`<br><br> 
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            (Required) The type of setting that you would like to retrieve.<br>
            `alert`: Alert Settings applied on the Zoom Rooms Account.<br>

            `meeting`: Meeting settings of the Zoom Rooms Account. <br>

            `signage`: View digital signage settings of the Zoom Rooms Account.
          example: meeting
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                client_alert:
                  detect_microphone_error_alert: true
                  detect_bluetooth_microphone_error_alert: true
                  detect_speaker_error_alert: true
                  detect_bluetooth_speaker_error_alert: true
                  detect_camera_error_alert: true
                notification:
                  audio_not_meet_usability_threshold: false
                  battery_low_and_not_charging: false
                  controller_scheduling_disconnected: false
                  cpu_usage_high_detected: false
                  network_unstable_detected: false
                  zoom_room_offline: false
                  sip_registration_failed: false
                  mic_speaker_camera_disconnected: false
                  zoom_room_display_disconnected: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > account settings
      summary: Update Zoom Room account settings
      description: >-
        Update account settings applied for Zoom Rooms in a Zoom account. With
        this API, you can update either the **Account Meeting Settings** or the
        **Alert Settings** (Client Alert Settings and Notfication Settings) of
        the Zoom Rooms account by specifying the required setting type in the
        `setting_type` parameter. To update only **Alert Settings**, specify
        `alert` as the value of the `setting_type` query parameter and to update
        only **Account Meeting Settings**, specify `meeting` as the value of the
        `setting_type` query parameter.<br><br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:write:admin`<br> 

          **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                zoom_rooms:
                  type: string
                  example: >-
                    {"upcoming_meeting_alert":true,"show_alert_before_meeting":false,"start_airplay_manually":true,"weekly_system_restart":false,"display_meeting_list":false,"display_top_banner":true,"display_feedback_survey":true,"auto_direct_sharing":false,"transform_meeting_to_private":false,"hide_id_for_private_meeting":false,"auto_start_scheduled_meeting":false,"auto_stop_scheduled_meeting":false,"audio_device_daily_auto_test":false,"support_join_3rd_party_meeting":true,"email_address_prompt_before_recording":true,"secure_connection_channel":true,"encrypt_shared_screen_content":true,"allow_multiple_content_sharing":true,"show_non_video_participants":true,"show_call_history_in_room":false,"make_room_alternative_host":true,"show_contact_list_on_controller":true,"count_attendees_number_in_room":false,"send_whiteboard_to_internal_contact_only":true}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            (Required) The type of setting that you would like to update.<br>
            `alert`: Alert Settings applied on the Zoom Rooms Account.<br>

            `meeting`: Meeting settings of the Zoom Rooms Account.<br>

            `signage`: View digital signage settings of the Zoom Rooms Account.
          example: meeting
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/locations/{locationId}/settings:
    get:
      tags:
        - rooms > locations > {location Id} > settings
      summary: Get location settings
      description: >-
        Get information on meeting or alert settings applied to Zoom Rooms
        located in a specific location. By default, only **Meeting Settings**
        are returned. To view only **Alert Settings**, specify `alert` as the
        value of the `setting_type` query parameter.<br><br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            (Required) The type of setting that you would like to retrieve.<br>
            `alert`: Alert Settings applied on the Zoom Rooms Account.<br>

            `meeting`: Meeting settings of the Zoom Rooms Account.<br>

            `signage`: Digital signage settings of the Zoom Rooms Account.
          example: meeting
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the location type. This can be
            retrieved using the [List Zoom Room Location
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
            (Id property in the response).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                client_alert:
                  detect_microphone_error_alert: true
                  detect_bluetooth_microphone_error_alert: true
                  detect_speaker_error_alert: true
                  detect_bluetooth_speaker_error_alert: true
                  detect_camera_error_alert: true
                notification:
                  audio_not_meet_usability_threshold: false
                  battery_low_and_not_charging: false
                  controller_scheduling_disconnected: false
                  cpu_usage_high_detected: false
                  network_unstable_detected: false
                  zoom_room_offline: false
                  sip_registration_failed: false
                  mic_speaker_camera_disconnected: false
                  zoom_room_display_disconnected: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > locations > {location Id} > settings
      summary: Update location settings
      description: >-
        Update information on either meeting or alert settings applied to Zoom
        Rooms located in a specific location. To update **Alert Settings**,
        specify `alert` as the value of the `setting_type` query parameter.
        Similarly, to update **Meeting Settings**, specify `meeting` as the
        value of the `setting_type` query parameter.<br><br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                zoom_rooms:
                  type: string
                  example: >-
                    {"upcoming_meeting_alert":true,"show_alert_before_meeting":false,"start_airplay_mirroring":true,"start_airplay_manually":true,"weekly_system_restart":true,"display_meeting_list":true,"display_top_banner":true,"display_feedback_survey":false,"auto_accept_incoming_call_and_fecc":false,"hide_self_view":false,"lock_speaker_volume_control":true,"start_hdmi_content_share_manualy":true,"auto_direct_sharing":true,"voice_commands":true,"transform_meeting_to_private":false,"hide_id_for_private_meeting":true,"auto_start_scheduled_meeting":false,"auto_stop_scheduled_meeting":true,"audio_device_daily_auto_test":false,"support_join_3rd_party_meeting":true,"encrypt_shared_screen_content":false,"allow_multiple_content_sharing":true,"show_non_video_participants":false,"show_call_history_in_room":true,"show_contact_list_on_controller":false,"count_attendees_number_in_room":false,"send_whiteboard_to_internal_contact_only":false}
                meeting_security:
                  type: string
                  example: >-
                    {"end_to_end_encrypted_meetings":true,"encryption_type":"e2ee"}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            (Required) The type of setting that you would like to update.<br>
            `alert`: Alert Settings applied on the Zoom Rooms Account.<br>

            `meeting`: Meeting settings of the Zoom Rooms Account.<br>

            `signage`: Digital signage settings.
          example: meeting
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the location type. This can be
            retrieved using the [List Zoom Room Location
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
            (Id property in the response).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/locations/{locationId}:
    get:
      tags:
        - rooms > locations > {location Id}
      summary: Get Zoom Room location profile
      description: >-
        Each location type of the [Zoom Rooms location
        hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        has a profile page that includes information such as name of the
        location, address, support email, etc. Use this API to retrieve
        information about a specific Zoom Rooms location type such as
        information about the city where the Zoom Rooms is located.


        **Prerequisite:**<br>

        * Account owner or admin permission

        * Zoom Rooms version 4.0 or higher<br>

        **Scopes:** `room:read:admin`<br> 
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the location type. This can be
            retrieved using the [List Zoom Room Location
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
            (Id property in the response).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                basic:
                  name: Kathmandu
                  description: This Zoom Rooms is located in Kathmandu.
                  timezone: Asia/Kathmandu
                  support_email: example@example.com
                  support_phone: '15550100'
                  room_passcode: '12234'
                  required_code_to_ext: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > locations > {location Id}
      summary: Update Zoom Room location profile
      description: >-
        Each location type of the [Zoom Rooms location
        hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        has a profile page that includes information such as name of the
        location, address, support email, etc. Use this API to update
        information about a specific Zoom Rooms location type such as
        information about the city where the Zoom Rooms is located.


        **Prerequisite:**<br>

        * Account owner or admin permission

        * Zoom Rooms version 4.0 or higher<br>

        **Scopes:** `room:write:admin`<br> 

         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                basic:
                  type: string
                  example: >-
                    {"name":"elit laboris fugiat","description ":"tempor dolor
                    anim ex est","timezone":"laboris eiusmod
                    ut","address":"nostrud
                    ipsum","support_email":"gEz-rcXzx@gxyGaqBdYmCkEVYrbUTFzWZJsoOhz.io","support_phone":"Duis
                    qui ut veniam Ut","room_passcode":"ipsum
                    elit","required_code_to_ext":false}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the location. This can be retrieved
            from the [List Zoom Room
            Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /rooms/locations/{locationId}/location:
    put:
      tags:
        - rooms > locations > {location Id}
      summary: Change the assigned parent location
      description: >-
        An account owner of a Zoom account can establish a [Zoom Rooms Location
        Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        to better organize Zoom Rooms spread accross various location. The
        location can be structured in a hierarchy with Country being the
        top-level location, followed by city, campus, building, and floor. The
        location in the lower level in the hierarchy is considered as a child of
        the location that is a level above in the hierarchy. Use this API to
        change the parent location of a child location. <br><br> For instance,
        if the location hierarchy is structured in a way where there are two
        campuses (Campus 1, and Campus 2) in a City and Campus 1 consists of a
        building named Building 1 with a floor where Zoom Rooms are located, and
        you would like to rearrange the structure so that Building 1 along with
        its child locations (floor and Zoom Rooms) are relocated directly under
        Campus 2 instead of Campus 1, you must provide the location ID of
        Building 1 in the path parameter of this request and the location ID of
        Campus 2 as the value of `parent_location_id` in the  request
        body.<br><br>

        **Prerequisite:**<br>

        * Account owner or admin permission

        * Zoom Rooms version 4.0 or higher<br>

        **Scopes:** `room:write:admin`<br><br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                parent_location_id:
                  type: string
                  description: >-
                    Location ID of the new Parent Location under which you the
                    child location will be positioned. This can be retrieved
                    from the [List Zoom Room
                    Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
                    API.
                  example: ipsum mollit consequa
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: locationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/locations/structure:
    get:
      tags:
        - rooms > locations > structure
      summary: Get Zoom Room location structure
      description: >-
        Get the [location hierarchial
        structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        applied on the Zoom Rooms in an account.<br><br>

        **Prerequisites:**<br>

        * Zoom Rooms version 4.0 or higher

        * Account owner or admin permissions<br>

        **Scopes:** `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                structures:
                  - country
                  - state
                  - city
                  - campus
                  - building
                  - floor
                  - room
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > locations > structure
      summary: Update Zoom Rooms location structure
      description: >-
        Update the [location hierarchial
        structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        applied on the Zoom Rooms in an account.<br><br>

        **Prerequisites:**<br>

        * Zoom Rooms version 4.0 or higher

        * Account owner or admin permissions<br>

        **Scopes:** `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                structures:
                  type: string
                  description: >-
                    Location Structure. The value can be either one or a
                    combination of the following strings separated by comma:

                    `country`, `state`, `city`, `campus`, `building`, `floor`
                  example: '["laborum","sit"]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/locations:
    get:
      tags:
        - rooms > locations
      summary: List Zoom Room locations
      description: >-
        A Zoom account owner or a Zoom Room administrator can establish a
        [location
        hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        to help manage Zoom Rooms that are spread among a variety of locations.
        Use this API to list the different location types used for Zoom Rooms in
        an account.<br><br>

        **Prerequisites:**

        * Account owner or admin permissions.

        * Zoom Rooms Version 4.0 or higher<br><br>

        **Scopes:** `room:read:admin`<br> 
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: parent_location_id
          in: query
          schema:
            type: string
          description: >-
            A unique identifier of the parent location. For instance, if a Zoom
            Room is located in Floor 1 of Building A, the location of Building A
            will be the parent location of Floor 1. Use this parameter to filter
            the response by a specific location hierarchy level.
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Use this field to filter the response by the type of location. The
            value can be one of the following:

            `country`, `states`, `city`, `campus`, `building`, `floor`.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                  "page_size": 30,
                  "next_page_token": "",
                  "locations": [
                    {
                      "id": "AAAAAAAAAA",
                      "name": "Country/Region1",
                      "parent_location_id": "I-qsfdUbbbbg",
                      "type": "country"
                    },
                    {
                      "id": "BBBBBBBB",
                      "name": "State1",
                      "parent_location_id": "AAAAAAAAAA",
                      "type": "state"
                    },
                    {
                      "id": "ccccddddd,
                      "name": "City1",
                      "parent_location_id": "BBBBBBBB",
                      "type": "city"
                    },
                    {
                      "id": "fgaajfjfhgjgjgjg",
                      "name": "Campus1",
                      "parent_location_id": "ccccddddd,
                      "type": "campus"
                    },
                    {
                      "id": "YQGK12344",
                      "name": "Building1",
                      "parent_location_id": "fgaajfjfhgjgjgjg",
                      "type": "building"
                    },
                    {
                      "id": "uUbbbbbbbb",
                      "name": "Floor1",
                      "parent_location_id": "YQGK12344",
                      "type": "floor"
                    }
                  ]
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - rooms > locations
      summary: Add a location
      description: >-
        Add a location to the [location hierarchial
        structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        of Zoom Rooms in an account.


        **Prerequisites:**

        * Account owner or admin permissions.

        * Zoom Rooms Version 4.0 or higher<br><br>

        **Scopes:** `room:write:admin`<br> 

         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    Name of the location. The name must be unique and shouldn't
                    have already been used in the same account.
                  example: proident
                parent_location_id:
                  type: string
                  description: >-
                    The location ID of the location that is a level higher from
                    the location that is being added.<br><br> For example, to
                    add a City named "City 1" as the child location under a
                    State named "State 1", you must provide the location ID of
                    "State 1". This can be retrieved using the [List Zoom Room
                    Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
                    API.
                  example: sit occaecat in irure
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: sedo534pis
                name: San Jose City
                type: City
                parent_location_id: gdrgre54t5th
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{roomId}/settings:
    get:
      tags:
        - rooms > {room Id} > settings
      summary: Get Zoom Room settings
      description: >-
        Get information on meeting or alert settings applied to a specific Zoom
        Room. By default, only **Meeting Settings** are returned. To view only
        **Alert Settings**, specify `alert` as the value of the `setting_type`
        query parameter.<br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:read:admin`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            (Required) The type of setting that you would like to retrieve.<br>
            `alert`: Alert Settings applied on the Zoom Rooms Account.<br>

            `meeting`: Meeting settings of the Zoom Rooms Account.
          example: meeting
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                zoom_rooms:
                  upcoming_meeting_alert: true
                  show_alert_before_meeting: false
                  start_airplay_manually: true
                  weekly_system_restart: false
                  display_meeting_list: false
                  display_top_banner: false
                  display_feedback_survey: true
                  auto_direct_sharing: false
                  transform_meeting_to_private: false
                  hide_id_for_private_meeting: false
                  auto_start_scheduled_meeting: true
                  auto_stop_scheduled_meeting: true
                  hide_share_instruction: true
                  audio_device_daily_auto_test: true
                  support_join_3rd_party_meeting: true
                  encrypt_shared_screen_content: false
                  allow_multiple_content_sharing: true
                  show_non_video_participants: false
                  show_call_history_in_room: true
                  show_contact_list_on_controller: true
                  count_attendees_number_in_room: true
                  send_whiteboard_to_internal_contact_only: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > {room Id} > settings
      summary: Update Zoom Room settings
      description: >-
        Update either meeting or alert settings applied to a specific Zoom Room.
        To update **Alert Settings**, specify `alert` as the value of the
        `setting_type` query parameter. To update **Meeting Settings**, specify
        `meeting` as the value of the `setting_type` query parameter.<br>

        **Prerequisites:**<br>

        * Zoom Room licenses

        * Owner or Admin privileges on the Zoom Account.<br>

        **Scopes:** `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                zoom_rooms:
                  type: string
                  example: >-
                    {"upcoming_meeting_alert":false,"show_alert_before_meeting":true,"start_airplay_mirroring":false,"start_airplay_manually":true,"weekly_system_restart":true,"display_meeting_list":true,"display_top_banner":false,"display_feedback_survey":false,"auto_direct_sharing":false,"transform_meeting_to_private":true,"hide_id_for_private_meeting":false,"auto_start_scheduled_meeting":false,"auto_stop_scheduled_meeting":false,"hide_share_instruction":true,"audio_device_daily_auto_test":true,"support_join_3rd_party_meeting":false,"encrypt_shared_screen_content":false,"allow_multiple_content_sharing":false,"show_non_video_participants":false,"show_call_history_in_room":true,"show_contact_list_on_controller":false,"count_attendees_number_in_room":true,"send_whiteboard_to_internal_contact_only":true}
                meeting_security:
                  type: string
                  example: >-
                    {"end_to_end_encrypted_meetings":false,"encryption_type":"enhanced_encryption"}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: setting_type
          in: query
          schema:
            type: string
          description: >-
            The type of setting that you would like to update.<br> `alert`:
            Alert Settings applied on the Zoom Room.<br>

            `meeting`: Meeting settings of the Zoom Room.<br>

            `signage`: Digital signage settings applied on the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{roomId}/devices:
    get:
      tags:
        - rooms > {room Id} > devices
      summary: List Zoom Room devices
      description: >-
        List information about the devices that are being used for a specific
        [Zoom
        Room](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms)
        in an account.


        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        * Account owner or admin permissions.

        **Scopes**: `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Zoom Room. This can be retrieved
            from the response of [List Zoom
            Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                devices:
                  - id: sajhdfshf24324
                    room_name: MyAwesomeZoomRoom
                    device_type: Zoom Rooms Computer
                    app_version: 4.4.1 (1242.0623)
                    device_system: Win 10
                    status: Online
                  - id: 32dhgdfg2were
                    room_name: MyAwesomeZoomRoom
                    device_type: Zoom Rooms Controller
                    app_version: 4.3.6 (265.0307)
                    device_system: iPad 12.3.1
                    status: Online
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{roomId}/devices/{deviceId}/app_version:
    put:
      tags:
        - rooms > {room Id} > devices
      summary: Change Zoom Rooms' app version
      description: >-
        [Upgrade](https://support.zoom.us/hc/en-us/articles/204675449-Upgrade-or-Downgrade-Zoom-Rooms-Software#h_1751c48a-644e-4a60-b96a-31ec77c616e6)
        or
        [downgrade](https://support.zoom.us/hc/en-us/articles/204675449-Upgrade-or-Downgrade-Zoom-Rooms-Software#h_d97349d6-9253-484c-af80-350475026524)
        the version of Zoom Rooms App installed in your Mac or Windows device.


        **Prerequisites:**<br>

        * Pro or a higher account with Zoom Rooms.

        * Zoom Rooms software must be installed either on a Mac or a Windows
        device. This API does not support other devices.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    Specify one of the following values for this field:


                    `upgrade`: Upgrade to the latest Zoom Rooms App Version.<br>

                    `downgrade`: Downgrade the Zoom Rooms App Version.<br>

                    `cancel`: Cancel an ongoing upgrade or downgrade process.
                    (This can only be one of upgrade,downgrade,cancel)
                  example: downgrade
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Mac or the Windows device. The
            value of this field can be retrieved from the [List Zoom Room
            Devices
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzrdevices).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{roomId}:
    get:
      tags:
        - rooms > {room Id}
      summary: Get Zoom Room profile
      description: >-

        Zoom Rooms is a software-based room system that provides an integrated
        experience for audio conferencing, wireless screen sharing and video
        conferencing. Use this API to get detailed information on a specific
        Zoom Room in a Zoom account.


        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        **Scopes**: `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Zoom Room. This can be retrieved
            from the response of [List Zoom
            Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                basic:
                  name: MytestbRoom
                  activation_code: '12345'
                  support_email: example@example.com
                  support_phone: '15550100'
                  room_passcode: '1234'
                  required_code_to_ext: true
                  hide_room_in_contacts: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - rooms > {room Id}
      summary: Delete a Zoom Room
      description: >-
        [Remove](https://support.zoom.us/hc/en-us/articles/360033432032-Zoom-Room-Device-Profiles#h_e55b2092-c418-4b02-819f-44de51448900)
        a specific Zoom Room profile from a Zoom account.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        **Scopes**: `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of a Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - rooms > {room Id}
      summary: Update a Zoom Room profile
      description: >-
        Update basic information on a specific Zoom Room in a Zoom account.<br>


        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        **Scopes**: `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                basic:
                  type: string
                  example: >-
                    {"name":"dolor","support_email":"b9IPFfvxJEjFF@hvFUzVmpGlVYq.bz","support_phone":"Excepteur
                    cupidatat","room_passcode":"proi","required_code_to_ext":false,"hide_room_in_contacts":false}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of a Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{roomId}/location:
    put:
      tags:
        - rooms > {room Id}
      summary: Change a Zoom Room's location
      description: >-
        An account owner of a Zoom account can establish a [Zoom Rooms Location
        Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
        to better organize Zoom Rooms spread accress various location. The
        location can be structured in a hierarchy with Country being the
        top-level location, followed by city, campus, building, and floor. Use
        this API to assign a new location for a Zoom Room. Note that the Zoom
        Room can be assigned only to the lowest level location available in the
        hierarchy.

        **Prerequisite:**<br>

        * Account owner or admin permission

        * Zoom Rooms version 4.0 or higher<br>

        **Scopes:** `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                location_id:
                  type: string
                  description: >-
                    Location ID of the location where Zoom Room is to be
                    assigned. This can be retrieved from the `id` property in
                    the response of [List Zoom Rooms
                    Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
                    API.
                  example: quis elit ad enim id
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: roomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique Identifier of the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms:
    get:
      tags:
        - rooms
      summary: List Zoom Rooms
      description: >-
        Zoom Rooms is a software-based room system that provides an integrated
        experience for audio conferencing, wireless screen sharing and video
        conferencing. Use this API to list all the existing [Zoom
        Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms)
        in a Zoom account.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        **Scopes**: `room:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: The status of the Zoom Room.
          example: InMeeting
        - name: type
          in: query
          schema:
            type: string
          description: Type of the Zoom Rooms.
          example: SchedulingDisplayOnly
        - name: unassigned_rooms
          in: query
          schema:
            type: boolean
          description: >-
            Use this query parameter with a value of `true` if you would like to
            see Zoom Rooms in your account that have not been assigned to anyone
            yet.
          example: 'false'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: location_id
          in: query
          schema:
            type: string
          description: Parent location ID of the Zoom Room.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 30
                rooms:
                  - id: 387434ryewr334
                    name: testZoomRooms
                    activation_code: '1200'
                    status: Available
                  - id: 4ryewr33sjfkds
                    name: MyZoomRooms
                    activation_code: eu34355empor
                    status: Offline
    post:
      tags:
        - rooms
      summary: Add a Zoom Room
      description: >-
        Use this API to [add a Zoom
        Room](https://support.zoom.us/hc/en-us/articles/202822279-Add-Zoom-Rooms-on-Web-Portal)
        to a Zoom account.<br><br>

        **Prerequisites:**<br>

        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms)
        license.<br>

        **Scopes**: `room:write:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) Name of the Zoom Room.
                  example: anim proident dolor consectetur
                type:
                  type: string
                  description: >-
                    (Required) Type of the Zoom Room.  (This can only be one of
                    ZoomRoom,SchedulingDisplayOnly,DigitalSignageOnly)
                  example: SchedulingDisplayOnly
                location_id:
                  type: string
                  description: >-
                    **Optional**<br>Location ID of the lowest level location in
                    the [location
                    hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy)
                    where the Zoom Room is to be added. For instance if the
                    structure of the location hierarchy is set up as “country,
                    states, city, campus, building, floor”, a room can only be
                    added under the floor level location. 


                    This ID can be retrieved from the [List Zoom Room
                    Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations)
                    API.
                  example: in
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: abcdefgg
                name: Cool ZoomRoom
                type: SchedulingDisplayOnly
                location_id: 434gfg0is
                room_id: dhsfd8287rgf
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/{id}/events:
    patch:
      tags:
        - rooms
      summary: Check-in or check-out of a Zoom Room
      description: >-
        The Zoom Rooms check-in feature helps maximize your room utilization.
        Use this API to either **check in** and confirm that you are utilizing
        the room reservation or to **check out** of the room so that the room
        gets released from the scheduled meeting and will be made available for
        others to use. Learn more from the [Using the Zoom Rooms check-in
        feature](https://support.zoom.us/hc/en-us/articles/360001147163-Using-the-Zoom-Rooms-check-in-feature)
        guide. 


        **Prerequisites:**

        * [Zoom
        Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-started-with-Zoom-Rooms#:~:text=Zoom%20Rooms%20is%20a%20software,or%20from%20their%20mobile%20device)
        must have been set up for use for the account and must be online. 

        * You must have access to the Calendar Integration APIs (either
        Microsoft Exchange or Google Calendar APIs) to get calendar information
        associated with the Room.


        **Scope:** `room:write:admin`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: |-
                    The value of this field can be one of the following:<br>
                    * zoomroom.check_in
                    * zoomroom.check_out
                  example: fugiat voluptate
                params:
                  type: string
                  example: >-
                    {"event_id":"cillum do in aliqua","change_key":"sed proident
                    minim aliquip Ut","calendar_id":"in elit officia
                    aliquip","resource_email":"YaUgNkG7tuCKUGl@PyQMCBZEkNtymGWLIFJMHWEEBYP.yhsy"}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Room ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/digital_signage:
    get:
      tags:
        - rooms
      summary: List digital signage contents
      description: >+
        List information about existing [Zoom Rooms digital
        signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage)
        content in a Zoom account.<br> You can also access this information by
        logging into your Zoom account in the Zoom web portal and visiting the
        [Digital Signage Content](https://zoom.us/digitalsignage#/) page listed
        under **Room Management**.


        **Prerequisites:**

        * Pro or a higher account with Zoom Rooms.

        * Existing content files or folder in [Digital Signage
        Content](https://zoom.us/digitalsignage#/) page.


      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Specify the type of digital signane resource. The value can be one
            of the following:

            * `content`: Returns information about content files.

            * `folder`: Returns information about the folder where the content
            files are located.
          example: Excepteur aute deserunt occaecat ea
        - name: folder_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of the folder where the content is located.
            Provide this field if you would like to filter the response by
            contents that are only available in a specific folder.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                page_size: 30
                next_page_token: ''
                contents:
                  - id: sWbbbb535LQ
                    name: Marketing_Folder
                  - id: 9N333khdhfgiafg
                    name: BackgroundImage.png
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rooms/events:
    patch:
      tags:
        - rooms
      summary: Update E911 digital signage
      description: >
        Display or hide E911 emergency alert text content from [Zoom Rooms
        digital
        signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage).


        **Scope:** `room:write:admin`


        **Prerequisites:**<br>

        * [Zoom Rooms](https://zoom.us/zoomrooms/software) 5.3.0 or higher

        * Zoom Rooms digital signage must be
        [enabled](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-Digital-Signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                method:
                  type: string
                  example: zoomroom.emergency_alert_displayed
                params:
                  type: string
                  example: >-
                    {"content":"ut
                    consectetur","target_ids":["labo"],"target_type":"location"}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                event_id: 6354hgfsdj34
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/messages/{messageId}:
    put:
      tags:
        - chat > users > {user Id} > messages > {message Id}
      summary: Update a message
      description: "Use this API to edit a chat message that you previously sent to either a contact or a channel in Zoom by providing the ID of the message as the value of the `messageId` parameter. You can get the ID from the **List User's Chat Messages** API. Additionally, as a query parameter, you must provide either the contact's **email address** of the contact or the **Channel ID** of the channel where the message was sent.\n\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note:</b> For an <b>account-level</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <a href=\"https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.\"> role</a> that has the <b>Edit</b> permission for <b>Chat Messages</b>.</p>\n\n**Scope:** `chat_message:write`,`chat_message:write:admin`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The edited message.
                  example: m
                to_contact:
                  type: string
                  description: >-
                    The email address of the contact to whom the message was
                    sent.<br>

                    You must provide either `to_contact` or `to_channel`
                    parameter in the API request.
                  example: ut
                to_channel:
                  type: string
                  description: >-
                    The Channel ID of the channel where you sent the
                    message.<br>You must provide either `to_contact` or
                    `to_channel` parameter in the API request.
                     Channel ID can be retrieved from List User's Channels API.
                  example: amet enim sit
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Message ID: Unique Identifier of the message.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - chat > users > {user Id} > messages > {message Id}
      summary: Delete a message
      description: >-
        Delete a chat message that you previously sent to a contact or a
        channel. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        In the query parameter, you must provide either of the following:


        * `to_contact`: The email address of the contact to whom you sent the
        message. Use this parameter to delete a message sent to an individual
        contact in Zoom.

        * `to_channel`: The channel ID of the channel where you sent the
        message. Use this parameter to delete a message sent to a channel in
        Zoom.




        **Scopes:** `chat_message:write`, `chat_message:write:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a> that has the <b>Edit</b> permission for <b>Chat
        Messages</b>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: to_contact
          in: query
          schema:
            type: string
          description: >-
            The userId or email address of a chat contact to whom you previously
            sent the message.


            Note: You must provide either `to_contact` or `to_channel` as a
            query parameter to delete a message that was previously sent to
            either an individual or a chat channel respectively.
          example: Excepteur aute deserunt occaecat ea
        - name: to_channel
          in: query
          schema:
            type: string
          description: >-
            The channel Id of the channel where you would like to send the
            message.


            You must provide either `to_contact` or `to_channel` as a query
            parameter to delete a message that was previously sent to either an
            individual or a chat channel
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Message ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - chat > users > {user Id} > messages > {message Id}
      summary: Get a message
      description: >-
        Get a chat message previously sent to a contact or a channel. For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        You must provide one of the following query parameters:<br>

        * `to_contact` — The email address of the Zoom contact to whom you sent
        the message.

        * `to_channel` — The ID of the Zoom channel where you sent the message.


        **Scopes:** `chat_message:read`, `chat_message:read:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, you can only use this API for a user assigned <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">the
        <b>Edit</b> permission for the <b>Chat message</b> role setting</a>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: to_contact
          in: query
          schema:
            type: string
          description: >-
            The `userId` or email address of a Zoom Chat contact to whom you
            sent the message.\n\n**Note:** You must use this query parameter to
            delete a message sent to a Zoom Chat contact.
          example: Excepteur aute deserunt occaecat ea
        - name: to_channel
          in: query
          schema:
            type: string
          description: >-
            The `channelId` of the Zoom Chat channel where sent the
            message.\n\n**Note:** You must use this query parameter to delete a
            message sent to Zoom Chat channel.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Message ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '{4C6A11E6-0145-430F-BC4D-937886AE559D}'
                message: reply_file
                sender: jemsa@example.com
                date_time: '2021-05-31T07:34:50Z'
                timestamp: 1622446490991
                reply_main_message_id: '{52400403-DA96-4D7B-9E05-C1C399FF0725}'
                reply_main_message_timestamp: 1622446481695
                reactions:
                  - emoji: U+ 00000023-0000fe0f
                    total_count: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/messages/{messageId}/status:
    patch:
      tags:
        - chat > users > {user Id} > messages > {message Id}
      summary: Mark message read or unread
      description: >-
        Mark a message as read or unread. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a>
        that has the <b>Edit</b> permission for <b>Chat Messages</b>.</p>


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                timestamp:
                  type: integer
                  description: The marking message's timestamp.
                  example: '67571686'
                to_contact:
                  type: string
                  description: >-
                    The email address of the contact to whom the message was
                    sent.<br>

                    You must provide either a `to_contact` or `to_channel`
                    parameter in the API request.
                  example: occaecat
                to_channel:
                  type: string
                  description: >-
                    The Channel ID of the channel where you sent the
                    message.<br>You must provide either a `to_contact` or
                    `to_channel` parameter in the API request.
                     You can retrieve the Channel ID using the [List User's Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
                  example: nostrud do laboris culpa
                action:
                  type: string
                  description: Values include <br>`read` or `unread`.
                  example: adipisicing voluptate
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the message.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/messages/{messageId}/emoji_reactions:
    patch:
      tags:
        - chat > users > {user Id} > messages > {message Id}
      summary: React to a chat message
      description: >-
        Use this API to react (add or remove) to a chat message with an emoji.


        For an **account-level** [OAuth
        app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app),
        this API can only be used on behalf of a user who is assigned with a
        [role](https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.)
        that has the **Edit** permission for **Chat Messages**.


        **Scopes:** `chat_message:write`, `chat_message:write:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                to_contact:
                  type: string
                  description: >-
                    The email address of the contact to whom the message was
                    sent. You must provide either the `to_contact` or the
                    `to_channel` parameter in the API request.


                    To get a channel's ID, use the [List User's Channels
                    API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
                to_channel:
                  type: string
                  description: >-
                    The channel's ID where you sent the message. You must
                    provide either the `to_contact` or the `to_channel`
                    parameter in the API request.


                    To get a channel's ID, use the [List User's Channels
                    API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
                  example: et Lorem officia consequat aute
                action:
                  type: string
                  description: >-
                    The action to perform with the message:

                    * `add` — Add an emoji reaction.

                    * `remove` — Remove an emoji reaction. (This can only be one
                    of add,remove)
                  example: add
                emoji:
                  type: string
                  description: >-
                    The emoji's unicode value, in `UTF-32` format. For more
                    information, read the
                    [Emojipedia](https://emojipedia.org/emoji-modifier-sequence/)
                    documentation.
                  example: culpa enim incididunt
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The user's unique ID.
          example: Excepteur aute deserunt occaecat ea
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The message's unique ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/messages:
    post:
      tags:
        - chat > users > {user Id} > messages
      summary: Send a chat message
      description: >-
        Send chat messages on Zoom to either an individual user who is in your
        contact list or to a
        [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        of which you are a member. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        To send a message to a contact, provide the contact's email address in
        the `to_contact` field. To send a message to a channel, provide the
        channel's ID in `to_channel` parameter


        **Scopes:** `chat_message:write`, `chat_message:write:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`

         <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note:</b> For an <b>account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has the <b>Edit</b> permission for <b>Chat Messages</b>.</p>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: (Required) The message to be sent.
                  example: enim magna elit cupidatat dolor
                to_contact:
                  type: string
                  description: >-
                    The email address of the contact to whom you would like to
                    send the message.
                  example: mollit tempor proident do
                to_channel:
                  type: string
                  description: >-
                    The Channel Id of the channel where you would like to send a
                    message.
                  example: sunt in magna Lorem
                at_items:
                  type: string
                  description: >-
                    [Chat
                    mentions](https://support.zoom.us/hc/en-us/articles/360037567431-Using-chat-mentions-and-slash-commands)
                    object. Use this object to include mentions in the message
                    that will be sent to  a channel.
                  example: >-
                    [{"start_position":84780732,"end_position":-63713604,"at_type":2,"at_contact":"labore
                    ut reprehenderit
                    in"},{"start_position":-1099783,"end_position":-68252152,"at_type":2,"at_contact":"ad
                    ullamco dolore fugiat"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ex35785hgdfjgt
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - chat > users > {user Id} > messages
      summary: List user's chat messages
      description: >-
        Use this API to list the current user's chat messages between the user
        and an individual contact or a chat channel. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        In the query parameter, you must provide one of the following:


        * `to_contact`: The email address of the contact with whom the user
        conversed by sending or receiving messages.

        * `to_channel`: The channel ID of the channel to or from which the user
        has sent and/or received messages.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a>
        that has the <b>View</b> or <b>Edit</b> permission for <b>Chat
        Messages</b>.</p>


        **Scopes:** `chat_message:read`, `chat_message:read:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: to_contact
          in: query
          schema:
            type: string
          description: >-
            The email address of a chat contact with whom the current user
            chatted. Messages that were sent and/or received between the user
            and the contact is displayed.


            Note: You must provide either `contact` or `channel` as a query
            parameter to retrieve messages either from an individual or a chat
            channel.
          example: Excepteur aute deserunt occaecat ea
        - name: to_channel
          in: query
          schema:
            type: string
          description: >-
            The channel Id of a channel inside which the current user had chat
            conversations. Messages that were sent and/or received between the
            user and the channel is displayed.


            Note: You must provide either `contact` or `channel` as a query
            parameter to retrieve messages either from an individual or a chat
            channel.
          example: Excepteur aute deserunt occaecat ea
        - name: date
          in: query
          schema:
            type: string
          description: >-
            The query date for which you would like to get the chat messages.
            This value defaults to the current date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: 'The number of records returned with a single API call. '
          example: '10'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_deleted_and_edited_message
          in: query
          schema:
            type: string
          description: >-
            **Optional** <br>

            Set the value of this field to `true` to include edited and deleted
            messages in the response.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                date: '2019-09-17'
                page_size: 10
                next_page_token: ''
                messages:
                  - id: F3CbafdljsfjkdfgBA7
                    message: And you?
                    sender: myemail@someemailaddr.com
                    date_time: '2019-09-17T20:25:21Z'
                    timestamp: 1568751921626
                  - id: B0DbfdgdfhAAfgf237000
                    message: I am good
                    sender: myemail@someemailaddr.com
                    date_time: '2019-09-17T20:25:17Z'
                    timestamp: 1568751917976
                  - id: C9Bbdfgd4sad301
                    message: How are you
                    sender: myfriendsemail@someemailaddr.us
                    date_time: '2019-09-17T20:24:13Z'
                    timestamp: 1568751853297
                  - id: 769fgdgdfgfd4566F7B96665
                    message: hello
                    sender: myfriendsemail@someemailaddr.us
                    date_time: '2019-09-17T20:22:26Z'
                    timestamp: 1568751746769
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/channels/{channelId}/members:
    get:
      tags:
        - chat > users > {user Id} > channels > {channel Id} > members
      summary: List channel members
      description: >-
        Use this API to list all members of a channel. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `chat_channel:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an<b> account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a> that has the <b>View</b> or <b>Edit</b> permission for <b>Chat
        Channels</b>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned with a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user who is the owner of this
            channel.
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Channel Id.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                page_size: 30
                next_page_token: ''
                members:
                  - id: laboris3764763ull
                    email: example@example.com
                    first_name: Harry
                    last_name: King
                    name: King_H
                    role: admin
                  - id: eul21dfabore
                    email: example@example.com
                    first_name: Alisha
                    last_name: Sapkota
                    name: Alisha_S
                    role: member
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - chat > users > {user Id} > channels > {channel Id} > members
      summary: Invite channel members
      description: >-
        Use this API to invite members that are in a user's contact list to a
        channel. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `chat_channel:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a> that has the <b>Edit</b> permission for <b>Chat
        Channels</b>.</p>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: >-
                    Members of a channel. You can invite up to a max number of 5
                    members with a single API call.
                  example: >-
                    [{"email":"n0zE@PfZTRveAxhMBwrJQjVelLiCYYpbWHyt.tw"},{"email":"UCstSY-RX5XRB@uGwZDVrrtlAJmRkmBsWd.dk"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user who is the owner of this
            channel.
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of the channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids:
                  - abc4545fdgfdhg
                  - lgfdkhg123456
                added_at: '2019-09-27T00:14:46Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/channels/{channelId}/members/{memberId}:
    delete:
      tags:
        - chat > users > {user Id} > channels > {channel Id} > members
      summary: Remove a member
      description: >2-
         A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to remove a member from a chat channel. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.

        **Scopes:** `chat_channel:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>
         
         
        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b> For an<b> account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <b><a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a> that has Edit permission for Chat Channels</b>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the channel owner.
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Channel from where you would
            like to remove a member. This can be retrieved from the [List
            Channels
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Email address of the member whom you would like to be
            remove from the channel.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/channels/{channelId}:
    get:
      tags:
        - chat > users > {user Id} > channels > {channel Id}
      summary: Get a channel
      description: >-
        Use this API to get information about a specific channel. For user-level
        apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom chat
        [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        allow users to communicate via chat in private or public groups.


        **Scopes:** `chat_channel:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a>  that has the <b>View</b> or <b>Edit</b> permission for <b>Chat
        Channels</b>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user who is the owner of the
            channel.
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of a channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ut1234sgfsdf
                name: Leah
                type: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - chat > users > {user Id} > channels > {channel Id}
      summary: Update a channel
      description: >-
        Use this API to update the name of a specific channel created by a user.
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom chat channels allow users to communicate via chat in private or
        public channels.


        **Scopes:** `chat_channel:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> For an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, this API can only be used on behalf of a user who is assigned
        with a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">
        role</a> that has the <b>Edit</b> permission for <b>Chat
        Channel</b>.</p>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) A new name for the channel.
                  example: exercitation elit ex
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Zoom user who is the owner of
            the channel.
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Channel Id.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - chat > users > {user Id} > channels > {channel Id}
      summary: Delete a channel
      description: >-
        Use this API to delete a specific channel. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom chat
        [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        allow users to communicate via chat in private or public groups.


        **Scopes:** `chat_channel:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> This API only supports a <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p>
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of a channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/{userId}/channels:
    get:
      tags:
        - chat > users > {user Id} > channels
      summary: List user's channels
      description: >-
        Use this API to list a user's chat channels. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom chat
        [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        allow users to communicate via chat in private or public groups.


        **Scopes:** `chat_channel:read` or `chat_channel:read:admin`<br>**[Rate
        Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> This API supports both user-managed apps and account-level
        apps. However, in an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, to list channels of another user in the same Zoom account, the
        user calling this API must have a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a>
        that has the <b>View</b> or <b>Edit</b> permission for the <b>Chat
        channels</b> feature.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned from a single API call.
          example: '10'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets.
            The expiration period for this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                page_size: 10
                channels:
                  - id: ullamdsfjhgdsn663isi
                    name: Happiness Channel
                    type: 2
                  - id: dsfdfrgtre23324663isi
                    name: Sales team
                    type: 2
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - chat > users > {user Id} > channels
      summary: Create a channel
      description: >-
        Use this API to create a channel for a user. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom chat channels allow users to communicate via chat in private or
        public groups.


        **Scopes:** `chat_channel:write` or
        `chat_channel:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> This API supports both user-managed apps and account-level
        apps. However, in an <b>account-level</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>, to create a channel on behalf of another user in the same Zoom
        account, the user calling this API must have a <a
        href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a>
        that has the <b>Edit</b> permission for the <b>Chat channels</b>
        feature.</p>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the channel.
                  example: sint veniam non
                type:
                  type: integer
                  description: >-
                    Type of the channel. The value can be one of the
                    following:<br>

                    `1`: Private channel. In this type of channel, members must
                    be invited to join a channel.<br>

                    `2`: Private channel with members that belong to one Zoom
                    account. Members in this channel should be invited and the
                    members should be from the same organization.<br>

                    `3`: Public channel. Anyone can search for this channel and
                    join the channel.<br>

                    `4`: New chat. This is an instant channel which can be
                    created by adding members to a new chat.  (This can only be
                    one of 1,2,3)
                  example: '2'
                members:
                  type: string
                  description: >-
                    Member(s) to include in the channel. A max of 5 members can
                    be added to the channel at once with this API.
                  example: >-
                    [{"email":"zOlo0CePq@guWaaCCyfaNk.lbhv"},{"email":"2G5Q@HEwVoYaKIOXLSCUEKLuIT.yrge"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the user.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: id8977ullamco
                name: Happy Channel
                type: 1
                jid: nisi73624365536st
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/me/contacts:
    get:
      tags:
        - chat > users > me/contacts
      summary: List user's contacts
      description: >-
        A user under an organization’s Zoom account has internal users listed
        under Company Contacts in the Zoom Client. A Zoom user can also add
        another Zoom user as a
        [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts).
        Call this API to list all the contacts of a Zoom user. Zoom contacts are
        categorized into "company contacts" and "external contacts". You must
        specify the contact type in the `type` query parameter. If you do not
        specify, by default, the type will be set as company contact.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b> This API only supports <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p><br>


        **Scope**: `chat_contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: |-
            The type of contact. The value can be one of the following:
            `company`: Contacts from the user's organization.
            `external`: External contacts.
          example: company
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned with a single API call.
          example: '10'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 10
                next_page_token: shdjksA4
                contacts:
                  - id: 44ABCDEfgjWHABBxw
                    email: example@example.com
                    first_name: Brandon
                    last_name: Ghimire
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/users/me/contacts/{contactId}:
    get:
      tags:
        - chat > users > me/contacts
      summary: Get user's contact details
      description: >-
        A user under an organization’s Zoom account has internal users listed
        under Company Contacts in the Zoom Client. A Zoom user can also add
        another Zoom user as a
        [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts).
        Call this API to get information on a specific contact of the Zoom user.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b>This API only supports <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p><br>


        **Scope**: `chat_contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: query_presence_status
          in: query
          schema:
            type: boolean
          description: >-
            The presence status of the contact. 

            Include this query parameter with a value of `true` to get the
            presence status of the contact in the response.
          example: 'true'
        - name: contactId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's contact Id or email address. The contact can
            be either a company contact or an external contact.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: u487547sic45ing
                email: example@example.com
                first_name: Vikram
                last_name: Grg
                presence_status: Do_Not_Disturb
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/channels/{channelId}/members/me:
    post:
      tags:
        - chat > channels/{channel Id} > members > me
      summary: Join a channel
      description: >-
        A
        [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        can have one or multiple members. Use this API to join a channel that is
        open for anyone in the same organization to join. You cannot use this
        API to join private channels that only allows invited members to be a
        part of it.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b>This API only supports <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p><br>


        **Scope:** `chat_channel:write`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Channel Id.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: lbborum-12fiasf-abaa
                added_at: '2018-12-11T15:06:32.633Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - chat > channels/{channel Id} > members > me
      summary: Leave a channel
      description: >-
        If you're no longer interested in being a member of an existing channel,
        you can leave the channel at any time. Use this API to leave a specific
        channel. After leaving the channel, you can no longer access information
        from that channel.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b>This API only supports <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p><br>


        **Scope:** `chat_channel:write`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of a channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/channels/{channelId}/members/{memberId}:
    delete:
      tags:
        - chat > channels/{channel Id} > members
      summary: Remove a member
      description: |2+
         A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to remove a member from a chat channel.<br><br>
         **Scopes:** `chat_channel:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
         
         <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>


      security:
        - oauth2Auth: []
      parameters:
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the Channel from where you would
            like to remove a member. This can be retrieved from the [List
            Channels
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Email address of the member whom you would like to be
            remove from the channel.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /chat/channels/{channelId}:
    get:
      tags:
        - chat > channels/{channel Id}
      summary: Get a channel
      description: "Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to get information about a specific channel. \n\n**Scope:** `chat_channel:read`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n<p style=\"background-color:#e1f5fe; color:#000000; padding:8px\"> <b>Note: </b> This API supports only <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth apps</a>. If you use an Account-Level OAuth Access token, you can only retrieve the channel information for the authorized user. You can't retrieve the channel information of other account users. Use the <a href=\"https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels-account-level/getchannel\">Account-Level Get Channel Info API</a> to retrieve the channel information of other account users.</p><br>\n\n\n "
      security:
        - oauth2Auth: []
      parameters:
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of a channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: cabc1234567defghijkl01234
                jid: cabc1234567defghijkl01234@conference.xmpp.zoom.us
                name: common2
                type: 5
                channel_settings:
                  new_members_can_see_previous_messages_files: true
                  allow_to_add_external_users: 1
                  posting_permissions: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - chat > channels/{channel Id}
      summary: Update a channel
      description: "Zoom chat channels allow users to communicate via chat in private or public channels. Use this API to update the name of a specific channel that you created. \n\n**Scope:** `chat_channel:write`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) A new name for the channel.
                  example: exercitation elit ex
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Channel Id.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - chat > channels/{channel Id}
      summary: Delete a channel
      description: >-
        Zoom chat
        [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-)
        allow users to communicate via chat in private or public groups. Use
        this API to delete a specific channel. 


        **Scope:** `chat_channel:write`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note: </b> This API only supports <b>user-managed</b> <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth
        app</a>.</p><br>

      parameters:
        - name: channelId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Channel ID: Unique Identifier of a channel.'
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}/members/{memberId}:
    delete:
      tags:
        - groups > {group Id} > members > {member Id}
      summary: Delete a group member
      description: >-
        Delete a member from a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        in a Zoom account.


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The member ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - groups > {group Id} > members > {member Id}
      summary: Update a group member
      description: >-
        Use this API to perform either of the following tasks: 

        * Remove a group member from one group and move them to a different
        group. 

        * Set a user's primary group. By default, the primary group is the first
        group that user is added to.


        If a user is a member of multiple groups, you can [assign the user a
        primary
        group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-#h_d07c7dcd-4fd8-485a-b5fe-a322e8d21c09).
        The user will use the primary group’s settings by default. However, if
        the user is a member of a group with locked settings, those group
        settings will remain locked to the user.


        **Scopes:** `group:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Pro or higher account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) The action to perform: 

                    * `move` — Remove the group member from one group and move
                    them to a different group. 

                    * `set_primary` — Set the user's primary group. (This can
                    only be one of move,set_primary)
                  example: move
                target_group_id:
                  type: string
                  description: >-
                    The target group's ID. To get this value, use the [List
                    Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)
                    API. 

                    * To set a user's primary group, use the designated primary
                    group's `groupId` value. 

                    * To move a group member from one group to another, use the
                    `groupId` of the designated group.
                  example: ex cupidatat tempor nisi
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group's unique ID. To get this value, use the [List
            Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)
            API.

            * To set a user's primary group, use the `target_group_id` value for
            this parameter's value. 

            * To move a group member from one group to another, use the
            `groupId` of the designated group.
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group member's unique ID. To get this value, use the
            [List Group
            Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}/members:
    get:
      tags:
        - groups > {group Id} > members
      summary: 'List group members '
      description: >-
        List the members of a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under your account.


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                members:
                  - email: ''
                    first_name: Ram
                    id: '3542342'
                    last_name: Ghale
                    type: 1
                page_count: 1
                page_number: 1
                page_size: 1
                total_records: 1
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - groups > {group Id} > members
      summary: Add group members
      description: >-
        Add members to a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under your account.


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: List of Group members
                  example: >-
                    [{"id":"culpa sun","email":"esse"},{"id":"Excepteur tempor
                    cillum consequat","email":"ullamco laborum adipisicing"}]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: string
                added_at: string [date-time]
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}/settings/virtual_backgrounds:
    delete:
      tags:
        - groups > {group Id} > settings > virtual backgrounds
      summary: Delete virtual background files
      description: >+
        Delete existing virtual background file(s) from an account. 


        **Prerequisites:**<br>

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.

        <br> **Scope:** `group:write:admin`<br><br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`<br>

      parameters:
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            Provide the id of the file that is to be deleted. To delete multiple
            files, provide comma separated values for this field.
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the group. Retrieve the value for
            this field by calling the [List
            groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - groups > {group Id} > settings > virtual backgrounds
      summary: Upload virtual background files
      description: >-
        Use this API to [upload virtual background
        files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE)
        for all users in a group to use. 



        **Prerequisites:**<br>

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.

        <br> **Scope:** `group:write:admin`<br><br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>



        `
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: Provide the file's path here.
                  example: fugiat eius
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            Provide the id of the file that is to be deleted. To delete multiple
            files, provide comma separated values for this field.
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the group. Retrieve the value for
            this field by calling the [List
            groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: _Tcj7354w6eHw
                name: u=mdbhhfg3y7&fm=2fdjs0.jpg
                type: image
                is_default: false
                size: 53434
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}/settings:
    get:
      tags:
        - groups > {group Id} > settings
      summary: Get a group's settings
      description: >-
        Get settings for a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-). 

        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: option
          in: query
          schema:
            type: string
          description: >-
            `meeting_authentication`: Use this query parameter to view [meeting
            authentication
            configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
            applied on the group.<br>`recording_authentication`: Use this query
            parameter to view [recording authentication
            configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings)
            applied on the group.<br>

            `meeting_security`: Use this query parameter to view meeting
            security settings applied on the group.<br>
          example: meeting_authentication
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedule_meeting:
                  host_video: true
                  participant_video: true
                  audio_type: both
                  join_before_host: true
                  force_pmi_jbh_password: true
                  require_password_for_scheduling_new_meetings: true
                  require_password_for_scheduled_meetings: true
                  require_password_for_instant_meetings: false
                  require_password_for_pmi_meetings: all
                  pstn_password_protected: true
                  mute_upon_entry: true
                  upcoming_meeting_reminder: true
                in_meeting:
                  e2e_encryption: true
                  chat: true
                  allow_participants_chat_with: 2
                  allow_users_save_chats: 2
                  private_chat: true
                  auto_saving_chat: true
                  entry_exit_chime: all
                  record_play_own_voice: false
                  feedback: true
                  post_meeting_feedback: true
                  co_host: true
                  polling: true
                  attendee_on_hold: true
                  show_meeting_control_toolbar: true
                  allow_show_zoom_windows: true
                  annotation: true
                  whiteboard: true
                  remote_control: true
                  non_verbal_feedback: true
                  breakout_room: false
                  remote_support: true
                  closed_caption: true
                  far_end_camera_control: true
                  group_hd: true
                  virtual_background: true
                  alert_guest_join: true
                  auto_answer: true
                  sending_default_email_invites: true
                  use_html_format_email: true
                  stereo_audio: true
                  original_audio: true
                  show_device_list: false
                  only_host_view_device_list: false
                  screen_sharing: true
                  waiting_room: true
                  show_browser_join_link: true
                  show_a_join_from_your_browser_link: true
                  join_from_mobile: true
                  join_from_desktop: true
                  allow_live_streaming: true
                  live_streaming_facebook: true
                  workplace_by_facebook: true
                  live_streaming_youtube: true
                  custom_live_streaming_service: true
                  custom_service_instructions: specific instructions
                  webinar_live_streaming:
                    enable: true
                    live_streaming_service:
                      - facebook
                      - workplace_by_facebook
                      - youtube
                      - custom_live_streaming_service
                    custom_service_instructions: specific instructions
                    live_streaming_reminder: true
                  webinar_question_answer: true
                  webinar_chat:
                    enable: true
                    allow_panelists_chat_with: 1
                    allow_attendees_chat_with: 1
                    default_attendees_chat_with: 1
                    allow_panelists_send_direct_message: true
                    allow_users_save_chats: 1
                    allow_auto_save_local_chat_file: true
                email_notification:
                  cloud_recording_available_reminder: true
                  jbh_reminder: true
                  cancel_meeting_reminder: true
                  alternative_host_reminder: true
                  schedule_for_reminder: true
                recording:
                  local_recording: true
                  cloud_recording: true
                  record_speaker_view: true
                  record_gallery_view: false
                  record_audio_file: true
                  save_chat_text: true
                  show_timestamp: false
                  recording_audio_transcript: false
                  auto_recording: none
                  cloud_recording_download: true
                  cloud_recording_download_host: true
                  account_user_access_recording: false
                  host_delete_cloud_recording: true
                telephony:
                  third_party_audio: true
                  audio_conference_info: '1234656'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - groups > {group Id} > settings
      summary: Update a group's settings
      description: >-
        Update settings for a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).<p
        style="background-color:#FEEFB3; color:#9F6000"><br>Note:</b> The
        `force_pmi_jbh_password` field under meeting settings is planned to be
        deprecated on September 22, 2019. This field will be replaced by another
        field that will provide the same functionality.</p>

        **Prerequisite**: Pro, Business, or Education account<br> 

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"host_video":false,"participant_video":false,"audio_type":"adipisicing","join_before_host":false,"require_password_for_all_meetings":false,"force_pmi_jbh_password":true,"require_password_for_scheduling_new_meetings":false,"require_password_for_scheduled_meetings":true,"require_password_for_instant_meetings":false,"require_password_for_pmi_meetings":"none","pstn_password_protected":true,"mute_upon_entry":false,"upcoming_meeting_reminder":false,"embed_password_in_join_link":false}
                in_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"e2e_encryption":true,"chat":false,"allow_participants_chat_with":3,"allow_users_save_chats":1,"private_chat":true,"auto_saving_chat":false,"entry_exit_chime":"et
                    sit","record_play_own_voice":true,"feedback":true,"post_meeting_feedback":false,"co_host":false,"polling":false,"attendee_on_hold":false,"show_meeting_control_toolbar":false,"allow_show_zoom_windows":true,"annotation":true,"whiteboard":true,"remote_control":true,"non_verbal_feedback":false,"breakout_room":true,"remote_support":true,"closed_caption":false,"far_end_camera_control":false,"group_hd":false,"virtual_background":false,"alert_guest_join":false,"auto_answer":true,"sending_default_email_invites":true,"use_html_format_email":false,"stereo_audio":true,"original_audio":true,"show_device_list":false,"only_host_view_device_list":false,"screen_sharing":false,"who_can_share_screen":"host","who_can_share_screen_when_someone_is_sharing":"host","waiting_room":false,"show_browser_join_link":false,"show_a_join_from_your_browser_link":true,"join_from_mobile":false,"join_from_desktop":false,"file_transfer":true,"custom_data_center_regions":false,"data_center_regions":"IN","request_permission_to_unmute":false,"allow_live_streaming":true,"live_streaming_facebook":true,"workplace_by_facebook":false,"live_streaming_youtube":false,"custom_live_streaming_service":true,"custom_service_instructions":"","webinar_live_streaming":{"enable":true,"live_streaming_service":["youtube","custom_live_streaming_service"],"custom_service_instructions":"aliquip
                    enim","live_streaming_reminder":false},"webinar_question_answer":false,"webinar_chat":{"enable":true,"allow_panelists_chat_with":2,"allow_attendees_chat_with":2,"default_attendees_chat_with":1,"allow_panelists_send_direct_message":false,"allow_users_save_chats":1,"allow_auto_save_local_chat_file":true}}
                email_notification:
                  type: string
                  description: undefined
                  example: >-
                    {"cloud_recording_available_reminder":true,"jbh_reminder":true,"cancel_meeting_reminder":true,"alternative_host_reminder":false,"schedule_for_reminder":false}
                recording:
                  type: string
                  description: undefined
                  example: >-
                    {"local_recording":true,"cloud_recording":true,"record_speaker_view":true,"record_gallery_view":true,"record_audio_file":true,"save_chat_text":false,"show_timestamp":true,"recording_audio_transcript":false,"auto_recording":"sint
                    irure ullamco
                    veniam","cloud_recording_download":false,"cloud_recording_download_host":true,"account_user_access_recording":false,"host_delete_cloud_recording":false,"prevent_host_access_recording":false,"ip_address_access_control":{"enable":true,"ip_addresses_or_ranges":"magna
                    in ut
                    adipisicing"},"archive":{"enable":false,"type":3,"settings":{"chat_file":false,"chat_with_sender_email":false,"audio_file":false,"video_file":true,"cc_transcript_file":false}}}
                telephony:
                  type: string
                  description: undefined
                  example: >-
                    {"third_party_audio":false,"audio_conference_info":"elit
                    laboris"}
                profile:
                  type: string
                  description: undefined
                  example: >-
                    {"recording_storage_location":{"allowed_values":["anim
                    dolor","ullamco enim"],"value":"ea nisi"}}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: option
          in: query
          schema:
            type: string
          example: meeting_security
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Id of the group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}/lock_settings:
    get:
      tags:
        - groups > {group Id} > lock settings
      summary: Get locked settings
      description: >-
        Retrieve a
        [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        locked settings. If you lock a setting, the group members will not be
        able to modify it individually. <p style="background-color:#FEEFB3;
        color:#9F6000"><br>Note:</b> The `force_pmi_jbh_password` field under
        meeting settings is planned to be deprecated on September 22, 2019. This
        field will be replaced by another field that will provide the same
        functionality.</p>


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: option
          in: query
          schema:
            type: string
          description: >-
            Specify `meeting_security` as the value of this field if you would
            like to view security settings applied on a meeting hosted by the
            users in this group.
          example: Excepteur aute deserunt occaecat ea
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Id of the group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedule_meeting:
                  host_video: true
                  participant_video: true
                  audio_type: true
                  join_before_host: true
                  force_pmi_jbh_password: true
                  require_password_for_scheduling_new_meetings: true
                  require_password_for_instant_meetings: false
                  require_password_for_pmi_meetings: true
                  pstn_password_protected: true
                  mute_upon_entry: true
                  upcoming_meeting_reminder: true
                in_meeting:
                  e2e_encryption: true
                  chat: true
                  private_chat: true
                  auto_saving_chat: true
                  entry_exit_chime: false
                  feedback: true
                  post_meeting_feedback: true
                  co_host: true
                  polling: true
                  attendee_on_hold: true
                  show_meeting_control_toolbar: true
                  allow_show_zoom_windows: true
                  annotation: true
                  whiteboard: true
                  remote_control: true
                  non_verbal_feedback: true
                  breakout_room: true
                  remote_support: true
                  closed_caption: true
                  far_end_camera_control: true
                  group_hd: true
                  virtual_background: true
                  alert_guest_join: true
                  auto_answer: true
                  sending_default_email_invites: true
                  use_html_format_email: true
                  stereo_audio: true
                  original_audio: true
                  screen_sharing: true
                  waiting_room: true
                  show_browser_join_link: true
                  show_a_join_from_your_browser_link: true
                  webinar_live_streaming: true
                  webinar_question_answer: true
                  webinar_chat: true
                email_notification:
                  cloud_recording_available_reminder: true
                  jbh_reminder: true
                  cancel_meeting_reminder: true
                  alternative_host_reminder: true
                  schedule_for_reminder: true
                recording:
                  local_recording: false
                  cloud_recording: false
                  auto_recording: false
                  cloud_recording_download: false
                  account_user_access_recording: false
                  host_delete_cloud_recording: false
                  auto_delete_cmr: false
                telephony:
                  third_party_audio: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - groups > {group Id} > lock settings
      summary: Update locked settings
      description: >-
        Update a
        [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        locked settings. If you lock a setting, the group members will not be
        able to modify it individually. <p style="background-color:#FEEFB3;
        color:#9F6000"><br>Note:</b> The `force_pmi_jbh_password` field under
        meeting settings is planned to be deprecated on September 22, 2019. This
        field will be replaced by another field that will provide the same
        functionality.</p>


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"host_video":true,"participant_video":true,"audio_type":false,"join_before_host":false,"force_pmi_jbh_password":false,"require_password_for_scheduling_new_meetings":false,"require_password_for_instant_meetings":false,"require_password_for_pmi_meetings":true,"pstn_password_protected":true,"mute_upon_entry":false,"upcoming_meeting_reminder":false,"meeting_authentication":false,"embed_password_in_join_link":true,"personal_meeting":false}
                in_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"e2e_encryption":false,"chat":true,"private_chat":false,"auto_saving_chat":true,"entry_exit_chime":"Excepteur
                    ex consequat
                    eiusmod","feedback":false,"post_meeting_feedback":true,"co_host":false,"polling":false,"attendee_on_hold":false,"show_meeting_control_toolbar":false,"allow_show_zoom_windows":true,"annotation":false,"whiteboard":true,"remote_control":true,"non_verbal_feedback":true,"breakout_room":false,"remote_support":true,"closed_caption":false,"far_end_camera_control":true,"group_hd":true,"virtual_background":true,"alert_guest_join":true,"auto_answer":true,"sending_default_email_invites":true,"use_html_format_email":true,"stereo_audio":true,"original_audio":false,"screen_sharing":false,"waiting_room":false,"show_browser_join_link":false,"show_a_join_from_your_browser_link":false,"custom_data_center_regions":true,"file_transfer":false,"request_permission_to_unmute":true,"webinar_question_answer":false,"webinar_live_streaming":false,"webinar_chat":false}
                email_notification:
                  type: string
                  description: undefined
                  example: >-
                    {"cloud_recording_available_reminder":false,"jbh_reminder":true,"cancel_meeting_reminder":true,"alternative_host_reminder":false,"schedule_for_reminder":true}
                recording:
                  type: string
                  description: undefined
                  example: >-
                    {"local_recording":true,"cloud_recording":true,"auto_recording":"exercitation
                    esse
                    do","cloud_recording_download":true,"account_user_access_recording":false,"host_delete_cloud_recording":true,"auto_delete_cmr":true,"recording_authentication":"ea
                    est velit
                    eu","ip_address_access_control":{"enable":false,"ip_addresses_or_ranges":"do
                    Ut quis eu"}}
                telephony:
                  type: string
                  description: undefined
                  example: '{"third_party_audio":false,"telephony_regions":true}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: option
          in: query
          schema:
            type: string
          description: >-
            Specify `meeting_security` as the value of this field if you would
            like to view security settings applied on a meeting hosted by the
            users in this group.
          example: Excepteur aute deserunt occaecat ea
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Id of the group.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups/{groupId}:
    get:
      tags:
        - groups > {group Id}
      summary: Get a group
      description: >-
        Get a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under an account.


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: chfhfhhfh_TKikJIX0
                name: My test group
                total_members: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - groups > {group Id}
      summary: Update a group
      description: >-
        Update a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under your account.


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    Group name. It must be unique to one account and less than
                    128 characters.
                  example: ea esse
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - groups > {group Id}
      summary: Delete a group
      description: >-
        Delete a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).


        **Prerequisite**: Pro, Business, or Education account<br>

        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /groups:
    get:
      tags:
        - groups
      summary: List groups
      description: >-
        List
        [groups](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under an account.


        **Prerequisite**: Pro or higher account.<br>

        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                groups:
                  - id: hFK_GtF_e_TaVA808
                    name: ipsum
                    total_members: 10
                  - id: TaVA8QKik_123
                    name: awesomegroup
                    total_members: 0
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - groups
      summary: Create a group
      description: >-
        Create a
        [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-)
        under an account. 


        You can add a maximum of 100 groups in one account per day. If you go
        over, you will get an error. You can add a maximum of 5000 groups in one
        account.


        **Prerequisite**: Pro or higher account.<br>

        **Scopes**: `group:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group name.
                  example: consectetur
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                name: string
                total_members: integer
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /h323/devices/{deviceId}:
    patch:
      tags:
        - h323/devices > {device Id}
      summary: Update a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit
        information of a H.323/SIP device from your Zoom account.<br><br>

        **Scopes:** `h323:write:admin`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) Device name.
                  example: non irure cillum
                protocol:
                  type: string
                  description: >-
                    (Required) Device protocol:<br>`H.323` - H.323.<br>`SIP` -
                    SIP. (This can only be one of H.323,SIP)
                  example: H.323
                ip:
                  type: string
                  description: (Required) Device IP.
                  example: ad sed culpa incididunt
                encryption:
                  type: string
                  description: >-
                    (Required) Device encryption:<br>`auto` - auto.<br>`yes` -
                    yes.<br>`no` - no. (This can only be one of auto,yes,no)
                  example: 'no'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - h323/devices > {device Id}
      summary: Delete a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete
        a H.323/SIP device from your Zoom account.<br><br>

        **Scopes:** `h323:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /h323/devices:
    get:
      tags:
        - h323/devices
      summary: List H.323/SIP devices
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to list
        all H.323/SIP Devices on a Zoom account.<br><br>

        **Scopes:** `h323:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 1
                total_records: 1
                devices:
                  - id: abceHewahkrehwiK
                    name: api_test_20190508
                    protocol: H.323
                    ip: 127.0.0.1
                    encryption: auto
    post:
      tags:
        - h323/devices
      summary: Create a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a
        H.323/SIP device to your Zoom account<br><br>

        **Scopes:** `h323:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: (Required) Device name.
                  example: non irure cillum
                protocol:
                  type: string
                  description: >-
                    (Required) Device protocol:<br>`H.323` - H.323.<br>`SIP` -
                    SIP. (This can only be one of H.323,SIP)
                  example: H.323
                ip:
                  type: string
                  description: (Required) Device IP.
                  example: ad sed culpa incididunt
                encryption:
                  type: string
                  description: >-
                    (Required) Device encryption:<br>`auto` - auto.<br>`yes` -
                    yes.<br>`no` - no. (This can only be one of auto,yes,no)
                  example: 'no'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                name: string
                protocol: string
                ip: string
                encryption: string
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tracking_fields/{fieldId}:
    get:
      tags:
        - tracking fields > {field Id}
      summary: Get a tracking field
      description: >
        [Tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        allow you to analyze usage by various fields within an
        organization.<br><br> When scheduling a meeting, the tracking field will
        be included in the meeting options.<br>Use this API to get information
        on a tracking field.<br><br>

        **Scopes:** `trackingfield:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**

        * Business, Education, API or higher plan
      security:
        - oauth2Auth: []
      parameters:
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: fdfgdfgr23gr1
                field: Meeting Purpose
                required: true
                visible: false
                recommended_values:
                  - Support
                  - Onboarding
                  - Sales
                  - Other
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - tracking fields > {field Id}
      summary: Update a tracking field
      description: >-
        [Tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        allow you to analyze usage by various fields within an organization.<br>
        Use this API to update a tracking field.<br><br>

        **Scope:** `trackingfield:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**

        * Business, Education, API or higher plan
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                field:
                  type: string
                  description: Label/ Name for the tracking field.
                  example: est dolor Excepteur
                required:
                  type: boolean
                  description: Tracking Field Required
                  example: 'false'
                visible:
                  type: boolean
                  description: Tracking Field Visible
                  example: 'true'
                recommended_values:
                  type: string
                  description: Array of recommended values
                  example: '["officia occaecat","do et"]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - tracking fields > {field Id}
      summary: Delete a tracking field
      description: >-
        [Tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        allow you to analyze usage by various fields within an organization.<br>
        Use this API to delete a tracking field.<br><br>

        **Scope:** `trackingfield:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**

        * Business, Education, API or higher plan
      security:
        - oauth2Auth: []
      parameters:
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tracking_fields:
    get:
      tags:
        - tracking fields
      summary: List tracking fields
      description: >-
        [Tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        allow you to analyze usage by various fields within an organization.<br>
        Use this API to list all the tracking fields on your Zoom
        account.<br><br>

        **Scopes:** `trackingfield:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**

        * Business, Education, API or higher plan
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                  "total_records": 1,
                  "tracking_fields": [
                  {
                  "id": "3746374637",
                  "field": "Meeting Purpose",
                  "required": true,
                  "visible": false,
                  "recommended_values": [
                    "Support",
                    "Onboarding",
                    "Sales",
                    "Other"
                  ]
                }
                }
    post:
      tags:
        - tracking fields
      summary: Create a tracking field
      description: >-
        [Tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        allow you to analyze usage by various fields within an organization.<br>
        Use this API to create a new tracking field.<br><br>

        **Scope:** `trackingfield:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**

        * Business, Education, API or higher plan
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                field:
                  type: string
                  description: Label/ Name for the tracking field.
                  example: est dolor Excepteur
                required:
                  type: boolean
                  description: Tracking Field Required
                  example: 'false'
                visible:
                  type: boolean
                  description: Tracking Field Visible
                  example: 'true'
                recommended_values:
                  type: string
                  description: Array of recommended values
                  example: '["officia occaecat","do et"]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: non do
                field: non aute minim ad
                required: false
                visible: false
                recommended_values:
                  - occaecat sed cupidatat sit
                  - tempor
  /im/groups/{groupId}/members:
    get:
      tags:
        - im > groups > {group Id} > members
      summary: List IM directory group members
      description: >-
        List the members of an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>

        **Scope:** `imgroup:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_number: '1'
                page_size: '1'
                total_records: '1'
                members:
                  - id: dlfjdhq3430394
                    email: example@example.com
                    first_name: Rahul
                    last_name: Ghimire
                    type: '2'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - im > groups > {group Id} > members
      summary: Add IM directory group members
      description: >-
        Add members to an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under an account.<br><br>

        **Scope:** `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: List of IM group members.
                  example: >-
                    [{"id":"Excepteur proident","email":"adipisicing
                    culpa"},{"id":"dolor culpa fugiat nulla ","email":"dolor
                    consequat"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: string
                added_at: string [date-time]
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/groups/{groupId}/members/{memberId}:
    delete:
      tags:
        - im > groups > {group Id} > members
      summary: Delete IM directory group member
      description: >-
        Delete a member from an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under an account.<br><br>

        Scopes: `imgroup:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The member ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/groups/{groupId}:
    get:
      tags:
        - im > groups > {group Id}
      summary: Retrieve an IM directory group
      description: >-
        Retrieve an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under your account.<br><br>

        Scopes: `imgroup:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                name: string
                total_members: integer
                type: string
                search_by_domain: boolean
                search_by_account: boolean
                search_by_ma_account: boolean
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - im > groups > {group Id}
      summary: Update an IM directory group
      description: >-
        Update an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under your account.<br><br>

        **Scopes**: `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Group name: must be unique to one account.'
                  example: in veniam nulla
                type:
                  type: string
                  description: >-
                    IM Group types:<br>`normal` - Only group members can
                    automatically see others in their group. Other people can
                    search for members in the group.<br>`shared` - Everyone
                    under the account can see the group and members
                    automatically.<br>`restricted` - Nobody can see the group or
                    search for members except for the members in the group.
                    (This can only be one of normal,shared,restricted)
                  example: normal
                search_by_domain:
                  type: boolean
                  description: Members can search for others in the same email domain.
                  example: 'true'
                search_by_account:
                  type: boolean
                  description: Members can search for others under same account.
                  example: 'false'
                search_by_ma_account:
                  type: boolean
                  description: >-
                    Members can search for others under same master account,
                    including all sub accounts.
                  example: 'true'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - im > groups > {group Id}
      summary: Delete an IM directory group
      description: >-
        Delete an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under your account.<br><br>

        Scopes: `imgroup:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: groupId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The group ID.<br>

            Can be retrieved by calling [GET
            /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/groups:
    get:
      tags:
        - im > groups
      summary: List IM directory groups
      description: >-
        List [IM directory
        groups](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>

        **Scopes**: `imgroup:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_number: '1'
                page_size: '1'
                total_records: '1'
                groups:
                  - id: sjvfkjfew34535
                    name: MyAdminDirectoryGroup
                    total_members: '10'
                    type: shared
                    search_by_domain: 'true'
                    search_by_account: 'false'
                    search_by_ma_account: 'false'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - im > groups
      summary: Create an IM directory group
      description: >-
        Create an [IM directory
        group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management)
        under your account.<br><br>

        **Scopes**: `imgroup:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Group name: must be unique to one account.'
                  example: ipsum eni
                type:
                  type: string
                  description: >-
                    IM Group types:<br>`normal` - Only members can see
                    automatically see the other members of this group. Other
                    people can search for members within this group.
                    <br>`shared` - Everyone under an account can see the group
                    members automatically.<br>`restricted` - Nobody can see the
                    group or search for members except the members in the group.
                    (This can only be one of normal,shared,restricted)
                  example: normal
                search_by_domain:
                  type: boolean
                  description: Members can search for others in the same email domain.
                  example: 'true'
                search_by_account:
                  type: boolean
                  description: Members can search for others under same account.
                  example: 'false'
                search_by_ma_account:
                  type: boolean
                  description: >-
                    Members can search for others under same master account,
                    including all sub accounts.
                  example: 'false'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/chat/sessions:
    get:
      tags:
        - im > chat > sessions
      summary: Get IM chat sessions
      description: "Retrieve IM Chat sessions for a specified period of time. This API only supports Oauth2.<br>\n\t\n**Scopes:** `imchat:read, imchat:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n <br><br>\n  <p style=\"background-color:#e1f5fe; color:#000000; padding:8px\"><b>Deprecated:</b> By end of 2021, Zoom is deprecating this API in favor of a consolidated set of APIs. The API will still be available for you to use, though Zoom will no longer provide support for it. For further information, see <a href=\"https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice\">Announcements: IM APIs Deprecation</a>.</p>\n \n"
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-31'
                to: '2019-09-12'
                page_size: 30
                next_page_token: vsdfjesfdhs
                sessions:
                  - session_id: dkhfgjd
                    type: Group
                    name: API overview meeting
                    last_message_sent_time: '2016-12-16T05:04:08.470Z'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/chat/sessions/{sessionId}:
    get:
      tags:
        - im > chat > sessions
      summary: Get IM chat messages
      description: >+
        Retrieve IM chat messages for a specified period of time. This API only
        supports oauth2.<br>


        **Scopes:** `imchat:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
         
         <br>
         
         <p style="background-color:#e1f5fe; color:#000000; padding:8px"><b>Deprecated:</b> By end of 2021, Zoom is deprecating this API in favor of a consolidated set of APIs. The API will still be available for you to use, though Zoom will no longer provide support for it. For further information, see <a href="https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice">Announcements: IM APIs Deprecation</a>.</p>


      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: sessionId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Chat session ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                session_id: string
                from: string [date]
                to: string [date]
                page_size: integer
                next_page_token: string
                messages:
                  - message: string
                    sender: string
                    date_time: string [date-time]
                    action: string
                    action_time: string [date-time]
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/chat/messages/{message_id}:
    put:
      tags:
        - im > chat > messages > {message id}
      summary: Edit a chatbot message
      description: >-
        Edit a message that was
        [sent](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot)
        by your Chatbot app.<br> After sending a message using the Send Chatbot
        Message API, you must store the messageId returned in the response so
        that you can make edits to the associated message using this API.


        **Scope:** `imchat:bot`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Authorization Flow**: Client Credentials Flow<br><br>

        To get authorized, make a POST request to `/oauth/token` endpoint with
        grant type as `client_credentials`. <br>Use
        `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the
        endpoint for the request. 

        You will need to send your ClientID and Secret as a Basic base64 encoded
        AUthorization header. Ex. `Basic
        base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token
        received (access_token) as a bearer token while making the PUT
        /im/chat/messages/{message_id} request to edit a chatbot
        message.<br><br>

        Learn more about how to authotize chatbots in the [Chatbot
        Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization)
        guide.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                robot_jid:
                  type: string
                  description: >-
                    (Required) Robot JID created when enabling chatbot features
                    on your marketplace app.
                  example: sed cul
                account_id:
                  type: string
                  description: >-
                    (Required) The AccountID of the Zoom account to which the
                    message was sent. Retrieve this from the Chatbot request
                    sent to your server as shown in the example [here](
                    https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).
                  example: laborum pariatur ullamco
                content:
                  type: string
                  description: >-
                    (Required) JSON template describing how the edited message
                    should be displayed for the user. For more information
                    please see our ["Send Message"
                    templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).
                  example: '{}'
                user_jid:
                  type: string
                  description: >-
                    **Optional**<br>

                    The UserJID of the user on whose behalf the message is being
                    sent. Use this field to prevent members of a channel from
                    getting notifications that were set up by a user who has
                    left the channel.
                  example: esse
                is_markdown_support:
                  type: boolean
                  description: >-
                    **Optional**<br>

                    Enable or disable markdown parser to your chatbot message.
                    Applies the markdown parser to your chatbot message if the
                    value of this field is set to `true`.<br> To learn more,
                    refer to the Chatbot message [markdown
                    reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
                  example: 'true'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: message_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique Identifier of the message that needs to be
            updated. This should be retrieved from the response of [Send Chatbot
            Message
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message_id: 201910tryyRFjM_main
                robot_jid: v1pky3tyBBB5pl8q@xmpp.zoom.us
                sent_time: '2019-10-17 01:40:24'
                to_jid: xghfd@shj.zoom.us
                user_jid: jnrgfjp6w@xmpp.zoom.us
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - im > chat > messages > {message id}
      summary: Delete a chatbot message
      description: >-
        Delete a message that was sent by your chatbot app.<br><br> **Scopes:**
        `imchat:bot`<br> **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>**Authorization Flow**: Client Credentials Flow<br><br>To
        get authorized, make a POST request to `/oauth/token` endpoint with
        grant type as `client_credentials`. <br>Use
        `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the
        endpoint for the request. 

        You will need to send your ClientID and Secret as a Basic base64 encoded
        AUthorization header. Ex. `Basic
        base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token
        received (access_token) as a bearer token while making the DELETE
        /im/chat/messages/{message_id} request to delete a message.<br><br>

        Learn more about how to authotize chatbots in the [Chatbot
        Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization)
        guide.
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: message_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message_id: 20191017014024747_XYYRFjM_main
                robot_jid: v1pky3qsaoqqwdfdsaf5pl8q@xmppdev.zoom.us
                sent_time: '2019-10-17 01:40:24'
                to_jid: xxx@conference.xmppdev.zoom.us
                user_jid: jnr_3e_eq4cveeafp3qp6w@xmppdev.zoom.us
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/chat/messages:
    post:
      tags:
        - im > chat > messages
      summary: Send chatbot messages
      description: >-
        Send chatbot messages from your marketplace chatbot app.<br><br>

        **Scopes:** `imchat:bot`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Authorization Flow**: Client Credentials Flow<br><br>

        To get authorized, make a POST request to `/oauth/token` endpoint with
        grant type as `client_credentials`. <br>Use
        `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the
        endpoint for the request. 

        You will need to send your ClientID and Secret as a Basic base64 encoded
        AUthorization header. Ex. `Basic
        base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token
        recieved (access_token) as a bearer token while making the POST
        /im/chat/messages request to send chatbot messages.<br><br>

        Learn more about how to authorize chatbots in the [Chatbot
        Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization)
        guide.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                robot_jid:
                  type: string
                  description: >-
                    (Required) Robot JID created when enabling chatbot features
                    on your marketplace app.
                  example: velit fugiat esse
                to_jid:
                  type: string
                  description: (Required) Unique JID of reciever. Can be a group or user.
                  example: dolor culpa aliqua cupidatat
                account_id:
                  type: string
                  description: (Required) Account ID of the authorized account.
                  example: magna velit nisi irure
                content:
                  type: string
                  description: >-
                    (Required) JSON template describing how the message should
                    be displayed for the user. For more information please see
                    our ["Send Message"
                    templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).
                  example: '{}'
                visible_to_user:
                  type: string
                  description: >-
                    **Optional**<br>Allow a Chatbot to send a message to a group
                    channel, but have only one designated person in that group
                    channel see the message by providing the person's UserID in
                    this field.
                  example: laboris
                user_jid:
                  type: string
                  description: >-
                    **Optional**<br>

                    The UserJID of the user on whose behalf the message is being
                    sent. Use this field to prevent members of a channel from
                    getting notifications that were set up by a user who has
                    left the channel.
                  example: occaecat ex
                is_markdown_support:
                  type: boolean
                  description: >-
                    **Optional**<br>

                    Applies the markdown parser to your chatbot message if the
                    value of this field is set to `true`.<br> To learn more,
                    refer to the Chatbot message [markdown
                    reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
                  example: 'false'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /im/users/{userId}/chat/messages:
    get:
      tags:
        - im > users
      summary: Get user’s IM messages
      description: >
        Get IM Chat messages for a specified period of time. This API only
        supports Oauth2.<br>

        **Scopes:** `imchat:read`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`

        <br><br>
          <p style="background-color:#e1f5fe; color:#000000; padding:8px"><b>Deprecated:</b> By end of 2021, Zoom is deprecating this API in favor of a consolidated set of APIs. The API will still be available for you to use, though Zoom will no longer provide support for it. For further information, see <a href="https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice">Announcements: IM APIs Deprecation</a>.</p>
      security:
        - oauth2Auth: []
      parameters:
        - name: chat_user
          in: query
          schema:
            type: string
          description: Chat user's ID or email address.
          example: Excepteur aute deserunt occaecat ea
        - name: channel
          in: query
          schema:
            type: string
          description: IM Channel's ID.
          example: Excepteur aute deserunt occaecat ea
        - name: date
          in: query
          schema:
            type: string
          description: IM message's query date time, format as yyyy-MM-dd.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The user ID or email address.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                date: string [date]
                page_size: integer
                next_page_token: string
                messages:
                  - id: string
                    message: string
                    sender: string
                    date_time: string [date-time]
                    timstamp: Long
  /im/users/me/chat/messages:
    post:
      tags:
        - im > users
      summary: Send IM messages
      description: >-
        Send chat message to a user. <aside>Note: This API only supports OAuth
        2.0.</aside><br><br>**Scope:** `imchat:write`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: IM message content.
                  example: anim veniam amet
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: chat_user
          in: query
          schema:
            type: string
          description: >-
            The email address (registered with Zoom) or the userId of the chat
            user.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
  /users/{userId}/meetings:
    get:
      tags:
        - users > {user Id} > meetings
      summary: List meetings
      description: >-
        List all the meetings that were scheduled for a user (meeting host). For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        This API **only** supports scheduled meetings. This API does not return
        information about instant meetings.


        **Scopes:** `meeting:read:admin`, `meeting:read`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`scheduled` - This includes all valid past
            meetings (unexpired), live meetings and upcoming scheduled meetings.
            It is equivalent to the combined list of "Previous Meetings" and
            "Upcoming Meetings" displayed in the user's [Meetings
            page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` -
            All the ongoing meetings.<br>`upcoming` - All upcoming meetings
            including live meetings.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_number
          in: query
          schema:
            type: string
          description: The page number of the current page in the returned records.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 4
                meetings:
                  - uuid: mlghmfghlBBB
                    id: 11111
                    host_id: abckjdfhsdkjf
                    topic: Zoom Meeting
                    type: 2
                    start_time: '2019-08-16T02:00:00Z'
                    duration: 30
                    timezone: America/Los_Angeles
                    created_at: '2019-08-16T01:13:12Z'
                    join_url: https://zoom.us/j/11111
                  - uuid: J8H8eavweUcd321==
                    id: 2222
                    host_id: abckjdfhsdkjf
                    topic: TestMeeting
                    type: 2
                    start_time: '2019-08-16T19:00:00Z'
                    duration: 60
                    timezone: America/Los_Angeles
                    agenda: RegistrationDeniedTest
                    created_at: '2019-08-16T18:30:46Z'
                    join_url: https://zoom.us/j/2222
                  - uuid: SGVTAcfSfCbbbb
                    id: 33333
                    host_id: abckjdfhsdkjf
                    topic: My Meeting
                    type: 2
                    start_time: '2019-08-16T22:00:00Z'
                    duration: 60
                    timezone: America/Los_Angeles
                    created_at: '2019-08-16T21:15:56Z'
                    join_url: https://zoom.us/j/33333
                  - uuid: 64123avdfsMVA==
                    id: 44444
                    host_id: abckjdfhsdkjf
                    topic: MyTestPollMeeting
                    type: 2
                    start_time: '2019-08-29T18:00:00Z'
                    duration: 60
                    timezone: America/Los_Angeles
                    created_at: '2019-08-29T17:32:33Z'
                    join_url: https://zoom.us/j/4444
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/rfCGnlKMTKCwDnE_vTxAag/meetings:
    post:
      tags:
        - users > {user Id} > meetings
      summary: Create a meeting
      description: >-
        Use this API to [create a
        meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings)
        for a user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        * A meeting's `start_url` value is the URL a host or an alternative host
        can use to start a meeting. The expiration time for the `start_url`
        value is **two hours** for all regular users.

        * For `custCreate` meeting hosts (users created with the `custCreate`
        parameter via the **[Create
        Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate)**
        API), the expiration time of the `start_url` parameter is **90 days**
        from the generation of the `start_url`.


        **Note:**

        * For security reasons, the recommended way to programmatically (after
        expiry) get the updated `start_url` value is to call the [**Retrieve a
        Meeting**](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting)
        API. Refer to the `start_url` value in the response.

        * This API has a daily rate limit of **100 requests per day**. The rate
        limit is applied against the `userId` of the **meeting host** used to
        make the request.


        **Scopes:** `meeting:write:admin`, `meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                topic: API test
                type: '2'
                start_time: '2021-09-16T14:00:00.000Z'
                duration: '60'
                schedule_for: nobuhiro.satoh@g.pascalia.co.jp
                timezone: Asia/Tokyo
                password: 0916test
                agenda: Test
                settings:
                  host_video: 'true'
                  participant_video: 'true'
                  cn_meeting: 'false'
                  in_meeting: 'false'
                  join_before_host: 'false'
                  mute_upon_entry: 'false'
                  watermark: 'false'
                  use_pmi: 'false'
                  approval_type: '0'
                  registration_type: '1'
                  audio: both
                  auto_recording: local
                  enforce_login: 'false'
                  enforce_login_domains: ''
                  alternative_hosts: ''
                  global_dial_in_countries:
                    - ''
                  registrants_email_notification: 'false'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                created_at: '2019-09-05T16:54:14Z'
                duration: 60
                host_id: AbcDefGHi
                id: 1100000
                join_url: https://zoom.us/j/1100000
                settings:
                  alternative_hosts: ''
                  approval_type: 2
                  audio: both
                  auto_recording: local
                  close_registration: false
                  cn_meeting: false
                  enforce_login: false
                  enforce_login_domains: ''
                  global_dial_in_countries:
                    - US
                  global_dial_in_numbers:
                    - city: New York
                      country: US
                      country_name: US
                      number: +1 1000200200
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 6699006833
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 408000000
                      type: toll
                  breakout_room:
                    enable: false
                    rooms:
                      - name: room1
                        participants:
                          - james.user01@somemail1234.com
                          - james.user02@somemail1234.com
                      - name: room2
                        participants:
                          - james.user03@somemail1234.com
                    host_video: false
                    in_meeting: false
                    join_before_host: true
                    mute_upon_entry: false
                    participant_video: false
                    registrants_confirmation_email: true
                    use_pmi: false
                    waiting_room: false
                    watermark: false
                    registrants_email_notification: true
                  start_time: '2019-08-30T22:00:00Z'
                  start_url: >-
                    https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw
                  status: waiting
                  timezone: America/New_York
                  topic: API Test
                  type: 2
                  uuid: ng1MzyWNQaObxcf3+Gfm6A==
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/assistants:
    get:
      tags:
        - users > {user Id} > assistants
      summary: List user assistants
      description: >-
        List a user's assistants. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Assistants are the users to whom the current user has assigned
        [scheduling
        privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege).
        These assistants can schedule meeting on behalf of the current user as
        well as manage and act as an alternative host for all meetings if the
        admin has enabled [Co-host option](https://zoom.us/account/setting) on
        the account.


        **Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * Current user as well as the assistant must have Licensed or an On-prem
        license.

        * Assistants must be under the current user's account.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                assistants:
                  - id: ddgdfgfdgfgg
                    email: example@example.com
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {user Id} > assistants
      summary: Add assistants
      description: >-
        Use this API to assign assistants to a user. In the request body,
        provide either the user's ID or the user's email address. For user-level
        apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Assistants are the users to whom the current user has assigned
        [scheduling
        privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege).
        These assistants can schedule meeting on behalf of the current user as
        well as manage and act as an alternative host for all meetings if the
        admin has enabled [Co-host option](https://zoom.us/account/setting) on
        the account.


        **Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * The user as well as the assistant must have Licensed or an On-prem
        license.

        * Assistants must be under the current user's account.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                assistants:
                  type: string
                  description: List of User's assistants.
                  example: >-
                    [{"id":"ipsum irure tempor Excepteur laborum","email":"ut
                    pariatur"},{"id":"dolore non","email":"commodo sed"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: string
                add_at: string [date-time]
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id} > assistants
      summary: Delete user assistants
      description: >-
        Delete all assistants of the current user. For user-level apps, pass
        [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Assistants are the users to whom the current user has assigned
        [scheduling
        privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege).
        These assistants can schedule meeting on behalf of the current user as
        well as manage and act as an alternative host for all meetings if the
        admin has enabled [Co-host option](https://zoom.us/account/setting) on
        the account.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * The user as well as the assistant must have Licensed or an On-prem
        license.

        * Assistants must be under the current user's account.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/assistants/{assistantId}:
    delete:
      tags:
        - users > {user Id} > assistants
      summary: Delete a user assistant
      description: >-
        Delete a specific assistant of a user. For user-level apps, pass [the
        `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Assistants are the users to whom the current user has assigned
        [scheduling
        privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege).
        These assistants can schedule meeting on behalf of the current user as
        well as manage and act as an alternative host for all meetings if the
        admin has enabled [Co-host option](https://zoom.us/account/setting) on
        the account.


        **Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * The user as well as the assistant must have Licensed or an On-prem
        license.

        * Assistants must be under the current user's account.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
        - name: assistantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Assistant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/schedulers:
    get:
      tags:
        - users > {user Id} > schedulers
      summary: List user schedulers
      description: >-
        List all the schedulers of a user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Schedulers in this context are the users for whom the current user can
        schedule meetings for. For example, if the current user (the user whose
        `userId` was passed in the `path` parameter) is "user A", the response
        of this API will contain a list of user(s), for whom user A can schedule
        and manage meetings. User A is the assistant of these users and thus has
        scheduling privilege for these user(s).


        **Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * Current user must be under the same account as the scheduler.
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedulers:
                  - id: abXXXsfsidfhjdsfhd768944
                    email: example@example.com
                  - id: abXXbbbbioepur8944
                    email: example-2@example.com
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id} > schedulers
      summary: Delete user schedulers
      description: >-
        Delete all of a user's schedulers. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Schedulers are users on whose behalf the current user (assistant) can
        schedule meetings for. By calling this API, the current user will no
        longer be a scheduling assistant of any user. 


        **Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Current user (assistant) must be under the same account as the
        scheduler.
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/schedulers/{schedulerId}:
    delete:
      tags:
        - users > {user Id} > schedulers
      summary: Delete a scheduler
      description: >-
        Delete a scheduler. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Schedulers are users on whose behalf the current user (assistant) can
        schedule meetings for. By calling this API, the current user will no
        longer be a scheduling assistant of this scheduler.


        **Scopes:** `user:write:admin`, `user:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Current user must be under the same account as the scheduler.
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
        - name: schedulerId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Scheduler's ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/settings/virtual_backgrounds:
    post:
      tags:
        - users > {user Id} > settings > virtual backgrounds
      summary: Upload virtual background files
      description: >-
        Use this API to [upload virtual background
        files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background)
        to a user's profile. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        > **Note:** A user profile cannot exceed more than 10 files.


        **Scopes:** `user:write:admin`

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:**

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: Provide the file's path here.
                  example: fugiat eius
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user. Retrieve the value for
            this field by calling the [List
            users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: _Tcj7354w6eHw
                name: u=mdbhhfg3y7&fm=2fdjs0.jpg
                type: image
                is_default: false
                size: 53434
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id} > settings > virtual backgrounds
      summary: Delete virtual background files
      description: >-
        Delete existing virtual background file(s) of a user. For user-level
        apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `user:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**

        * Virtual background feature must be
        [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7)
        on the account.
      parameters:
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            Provide the id of the file that is to be deleted. To delete multiple
            files, provide comma separated values for this field.
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user. Retrieve the value of this
            field by calling the [List
            users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/settings:
    get:
      tags:
        - users > {user Id} > settings
      summary: Get user settings
      description: >-
        Retrieve a user's settings. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: login_type
          in: query
          schema:
            type: integer
          description: "The user's login method:\n\n`0` — Facebook OAuth</br>`1` —\_Google OAuth</br>`24` —\_Apple OAuth</br>`27` —\_Microsoft OAuth</br>`97` — Mobile device</br>`98` — RingCentral OAuth</br>`99` — API user</br>`100` — Zoom Work email</br>`101` — Single Sign-On (SSO)\n\nThe following login methods are only available in China:\n\n`11` — Phone number</br>`21` —\_WeChat</br>`23` — Alipay"
          example: '23'
        - name: option
          in: query
          schema:
            type: string
          description: >-
            `meeting_authentication`: Use this query parameter to view [meeting
            authentication
            configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
            applied on the user's account.<br>`recording_authentication`: Use
            this query parameter to view [recording authentication
            configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings)
            applied on the user's account.<br>

            `meeting_security`: Use this query parameter to view meeting
            security settings applied on the user's account.<br>
          example: meeting_authentication
        - name: custom_query_fields
          in: query
          schema:
            type: string
          description: >-
            Provide the name of the field by which you would like to filter the
            response. For example, if you provide "host_video" as the value of
            this field, you will get a response similar to the following:<br>

            {
                "schedule_meeting": {
                    "host_video": false
                }
            }

            <br>You can provide multiple values by separating them with
            commas(example: "host_video,participant_video”).
          example: Excepteur aute deserunt occaecat ea
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schedule_meeting:
                  audio_type: both
                  embed_password_in_join_link: false
                  force_pmi_jbh_password: true
                  host_video: true
                  join_before_host: false
                  meeting_password_requirement:
                    have_letter: true
                    have_number: false
                    have_special_character: false
                    length: 6
                    only_allow_numeric: false
                  not_store_meeting_topic: false
                  participants_video: false
                  pmi_password: '98654'
                  pstn_password_protected: false
                  require_password_for_pmi_meetings: all
                  require_password_for_scheduling_new_meetings: false
                  use_pmi_for_instant_meetings: true
                  use_pmi_for_scheduled_meetings: false
                in_meeting:
                  allow_live_streaming: false
                  annotation: true
                  attendee_on_hold: false
                  auto_saving_chat: false
                  breakout_room: false
                  chat: true
                  allow_participants_chat_with: 2
                  allow_users_save_chats: 2
                  closed_caption: true
                  co_host: false
                  custom_data_center_regions: true
                  data_center_regions:
                    - AU
                    - CN
                    - EU
                    - HK
                    - LA
                    - TY
                    - US
                  e2e_encryption: false
                  entry_exit_chime: all
                  far_end_camera_control: false
                  feedback: true
                  group_hd: false
                  non_verbal_feedback: false
                  polling: true
                  private_chat: true
                  record_play_voice: false
                  remote_control: true
                  remote_support: false
                  show_meeting_control_toolbar: false
                  virtual_background: true
                  waiting_room: false
                  show_a_join_from_your_browser_link: true
                  join_from_mobile: true
                  join_from_desktop: true
                  live_streaming_facebook: true
                  workplace_by_facebook: true
                  live_streaming_youtube: true
                  custom_live_streaming_service: true
                  webinar_live_streaming:
                    enable: true
                    live_streaming_service:
                      - facebook
                      - workplace_by_facebook
                      - youtube
                      - custom_live_streaming_service
                    custom_service_instructions: specific instructions
                    live_streaming_reminder: true
                  webinar_chat:
                    enable: true
                    allow_panelists_chat_with: 1
                    allow_attendees_chat_with: 1
                    default_attendees_chat_with: 1
                    allow_panelists_send_direct_message: true
                    allow_users_save_chats: 1
                    allow_auto_save_local_chat_file: true
                email_notification:
                  cloud_recording_available_reminder: true
                  jbh_reminder: false
                  cancel_meeting_reminder: false
                  alternative_host_reminder: false
                  schedule_for_reminder: false
                recording:
                  auto_delete_cmr: false
                  auto_recording: none
                  cloud_recording: true
                  local_recording: true
                  record_audio_file: true
                  record_gallery_view: false
                  record_speaker_view: true
                  recording_audio_transcript: true
                  recording_password_requirement:
                    have_letter: true
                    have_number: true
                    have_special_character: true
                    length: 8
                    only_allow_numeric: false
                  save_chat_text: true
                  show_timestamp: false
                telephony:
                  third_party_audio: false
                  audio_conference_info: ''
                  show_international_numbers_link: false
                feature:
                  meeting_capacity: 100
                  large_meeting: false
                  webinar: false
                  cn_meeting: true
                  in_meeting: false
                  zoom_phone: false
                tsp:
                  call_out: true
                  call_out_countries:
                    - USA
                  show_international_numbers_link: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - users > {user Id} > settings
      summary: Update user settings
      description: >-
        Update a user's settings. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"host_video":true,"participants_video":true,"audio_type":"voip","join_before_host":true,"force_pmi_jbh_password":true,"pstn_password_protected":false,"use_pmi_for_scheduled_meetings":false,"use_pmi_for_instant_meetings":true,"require_password_for_scheduling_new_meetings":true,"require_password_for_scheduled_meetings":true,"default_password_for_scheduled_meetings":"ipsum
                    cupidatat
                    esse","require_password_for_instant_meetings":false,"require_password_for_pmi_meetings":"none","pmi_password":"consectetur","embed_password_in_join_link":true,"meeting_password_requirement":{"length":-97437980,"have_letter":false,"have_number":false,"have_special_character":true,"only_allow_numeric":false,"have_upper_and_lower_characters":true,"consecutive_characters_length":5,"weak_enhance_detection":false},"personal_meeting":false}
                in_meeting:
                  type: string
                  description: undefined
                  example: >-
                    {"e2e_encryption":false,"chat":false,"allow_participants_chat_with":4,"allow_users_save_chats":2,"private_chat":false,"auto_saving_chat":false,"entry_exit_chime":"all","record_play_voice":true,"feedback":false,"co_host":false,"polling":false,"attendee_on_hold":false,"annotation":false,"remote_control":false,"non_verbal_feedback":false,"breakout_room":false,"remote_support":false,"closed_caption":false,"group_hd":false,"virtual_background":false,"virtual_background_settings":{"enable":false,"allow_videos":false,"allow_upload_custom":true,"files":[{"id":"ex
                    reprehenderit magna sint dolor","name":"in ea
                    sint","type":"nulla","is_default":true,"size":"Ut sint
                    ullamco cupidatat non"},{"id":"exercitation dolor
                    Ut","name":"laborum tempor anim cupid","type":"esse
                    quis","is_default":false,"size":"nostrud dolor
                    velit"}]},"far_end_camera_control":false,"share_dual_camera":false,"waiting_room":false,"allow_live_streaming":true,"live_streaming_facebook":false,"workplace_by_facebook":true,"live_streaming_youtube":false,"custom_live_streaming_service":true,"custom_service_instructions":"ut
                    consectetur","show_meeting_control_toolbar":false,"custom_data_center_regions":true,"data_center_regions":"TY","screen_sharing":false,"who_can_share_screen":"all","who_can_share_screen_when_someone_is_sharing":"host","file_transfer":true,"request_permission_to_unmute":true,"show_a_join_from_your_browser_link":false,"join_from_mobile":true,"join_from_desktop":true,"webinar_live_streaming":{"enable":false,"live_streaming_service":["workplace_by_facebook","youtube"],"custom_service_instructions":"Ut
                    ut reprehenderit
                    quis","live_streaming_reminder":true},"webinar_chat":{"enable":false,"allow_panelists_chat_with":2,"allow_attendees_chat_with":3,"default_attendees_chat_with":1,"allow_panelists_send_direct_message":true,"allow_users_save_chats":2,"allow_auto_save_local_chat_file":false}}
                email_notification:
                  type: string
                  description: undefined
                  example: >-
                    {"cloud_recording_available_reminder":false,"jbh_reminder":false,"cancel_meeting_reminder":false,"alternative_host_reminder":false,"schedule_for_reminder":false}
                recording:
                  type: string
                  description: undefined
                  example: >-
                    {"local_recording":false,"cloud_recording":false,"record_speaker_view":false,"record_gallery_view":false,"record_audio_file":false,"save_chat_text":false,"show_timestamp":false,"recording_audio_transcript":false,"auto_recording":"local","host_pause_stop_recording":false,"auto_delete_cmr":false,"auto_delete_cmr_days":34,"recording_disclaimer":false,"ask_participants_to_consent_disclaimer":false,"ask_host_to_confirm_disclaimer":false,"recording_password_requirement":{"length":-96481255,"have_letter":true,"have_number":false,"have_special_character":true,"only_allow_numeric":true},"ip_address_access_control":{"enable":false,"ip_addresses_or_ranges":"deserunt"}}
                telephony:
                  type: string
                  description: undefined
                  example: >-
                    {"third_party_audio":false,"audio_conference_info":"","show_international_numbers_link":true,"telephony_regions":{"selection_values":"amet
                    dolor adipisicing ipsum"}}
                feature:
                  type: string
                  description: undefined
                  example: >-
                    {"meeting_capacity":-90287845,"large_meeting":false,"large_meeting_capacity":-50812540,"webinar":false,"webinar_capacity":-73514753,"zoom_events":false,"zoom_events_capacity":3000,"zoom_phone":true}
                tsp:
                  type: string
                  description: undefined
                  example: '{"call_out":false,"show_international_numbers_link":false}'
                profile:
                  type: string
                  description: undefined
                  example: >-
                    {"recording_storage_location":{"allowed_values":["eiusmod","ipsum"],"value":"sit
                    irure"}}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: option
          in: query
          schema:
            type: string
          example: recording_authentication
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp/{tspId}:
    get:
      tags:
        - users > {user Id} > tsp > {tsp Id}
      summary: Get a user's TSP account
      description: >
        Each user can have a maximum of two TSP accounts. Use this API to
        retrieve details of a specific TSP account enabled for a specific
        user.<br><br>

        **Scopes:** `tsp:read:admin` `tsp:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '0123444444'
                conference_code: '1275454'
                leader_pin: '111'
                tsp_bridge: string
                dial_in_numbers:
                  - code: '675'
                    number: '00000000'
                    type: toll
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - users > {user Id} > tsp > {tsp Id}
      summary: Update a TSP account
      description: |
        Update a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                conference_code:
                  type: string
                  description: >-
                    (Required) Conference code: numeric value, length is less
                    than 16.
                  example: id s
                leader_pin:
                  type: string
                  description: >-
                    (Required) Leader PIN: numeric value, length is less than
                    16.
                  example: velit
                dial_in_numbers:
                  type: string
                  description: List of dial in numbers.
                  example: >-
                    [{"code":"irure","number":"pariat","type":"tollfree","country_label":"esse
                    labo"},{"code":"","number":"dolor labore
                    ","type":"toll","country_label":"voluptate"}]
                tsp_bridge:
                  type: string
                  description: >-
                    Telephony bridge (This can only be one of
                    US_TSP_TB,EU_TSP_TB)
                  example: EU_TSP_TB
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id} > tsp > {tsp Id}
      summary: Delete a user's TSP account
      description: |
        Delete a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp:
    get:
      tags:
        - users > {user Id} > tsp
      summary: List user's TSP accounts
      description: >-
        A user can have a maximum of two TSP accounts. Use this API to list all
        TSP accounts of a user.<br><br>

        **Scopes:** `tsp:read:admin` `tsp:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tsp_accounts:
                  - id: 111222222
                    conference_code: '0125'
                    leader_pin: '11189898'
                    tsp_bridge: string
                    dial_in_numbers:
                      - code: '01'
                        number: '000000000'
                        type: toll
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {user Id} > tsp
      summary: Add a user's TSP account
      description: |
        Add a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                conference_code:
                  type: string
                  description: >-
                    (Required) Conference code: numeric value, length is less
                    than 16.
                  example: sunt esse cup
                leader_pin:
                  type: string
                  description: >-
                    (Required) Leader PIN: numeric value, length is less than
                    16.
                  example: nulla deser
                dial_in_numbers:
                  type: string
                  description: List of dial in numbers.
                  example: >-
                    [{"code":"ve","number":"eu irure
                    ","type":"tollfree","country_label":"e"},{"code":"","number":"ut
                    eiusmo","type":"tollfree","country_label":"Lo"}]
                tsp_bridge:
                  type: string
                  description: >-
                    Telephony bridge (This can only be one of
                    US_TSP_TB,EU_TSP_TB)
                  example: US_TSP_TB
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                conference_code: '0125'
                leader_pin: '11189898'
                tsp_bridge: string
                dial_in_numbers:
                  - code: '01'
                    number: '000000000'
                    type: toll
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp/settings:
    patch:
      tags:
        - users > {user Id} > tsp
      summary: Set global dial-in URL for a TSP user
      description: >
        A global dial-in page can provide a list of global access numbers using
        which audio conferencing can be conducted. By calling this API, you can
        set the url for the global dial-in page of a user whose Zoom account has
        TSP and special TSP with third-party audio conferencing options enabled.
        <p></p>

        **Scopes:**`tsp:write:admin` `tsp:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio_url:
                  type: string
                  description: >-
                    The global dial-in URL for a TSP enabled account. The URL
                    must be valid with a max-length of 512 characters.
                  example: proident officia ad aliqua
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The userId or email address of the user.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/token:
    get:
      tags:
        - users > {user Id} > token
      summary: Get a user token
      description: >-
        Retrieve a user's token. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        This token is used for starting meetings with the Client SDK. If a user
        signed into Zoom using Google or Facebook, a null value will be returned
        for the token. To get the token with this API, ask the user to sign into
        Zoom using their email and password instead.


        **Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            User token types:<br>`token` - Used for starting meetings with the
            client SDK. This token expires in 14 days and a new token will be
            returned after the expiry.<br>`zak` - Used for generating the start
            meeting URL. The token expiration time is two hours. For API users,
            the expiration time is 90 days.
          example: token
        - name: ttl
          in: query
          schema:
            type: number
          description: >-
            Use this field in conjunction with the `type` field where the value
            of `type` field is `zak`. The value of this field denotes the expiry
            time of the `zak` token in seconds. For example, if you would like
            the zak token to be expired after one hour of the token generation,
            the value of this field should be `3600`.
          example: '-17728915'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: string
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id} > token
      summary: Revoke a user's SSO token
      description: >-
        Revoke a user's SSO token. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        After calling this API, the SSO user will be logged out of their current
        Zoom session.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/webinars:
    get:
      tags:
        - users > {user Id} > webinars
      summary: List webinars
      description: >-
        Use this API to list all the webinars that are scheduled by or on-behalf
        a user (webinar host). For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing webinars. Webinars allow a host to broadcast a
        Zoom meeting to up to 10,000 attendees.


        **Scopes:** `webinar:read:admin`, `webinar:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:**

        * Pro or higher plan with a Webinar Add-on.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                  "page_count": "1",
                  "page_number": "1",
                  "page_size": "30",
                  "total_records": "1",
                  "webinars": [
                    {
                      "uuid": "dsghfkhaewfds",
                      "id": 0001000,
                      "host_id": "24654130000000",
                      "topic": "My Webinar",
                      "agenda": "Learn more about Zoom APIs",
                      "type": "5",
                      "duration": "60",
                      "start_time": "2019-09-24T22:00:00Z",
                      "timezone": "America/Los_Angeles",
                      "created_at": "2019-08-30T22:00:00Z",
                      "join_url": "https://zoom.us/0001000/awesomewebinar"
                    }
                  ]
                }
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {user Id} > webinars
      summary: Create a webinar
      description: >-
        Use this API to schedule a webinar for a user (host). For user-level
        apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing webinars. Webinars allow a host to broadcast a
        Zoom meeting to up to 10,000 attendees.


        **Scopes:** `webinar:write:admin`, `webinar:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**

        * Pro or higher plan with a Webinar add-on.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: aute
                type:
                  type: integer
                  example: '5'
                start_time:
                  type: string
                  example: '1956-01-18T09:47:32.868Z'
                duration:
                  type: integer
                  example: '6724571'
                timezone:
                  type: string
                  example: ipsum labore
                password:
                  type: string
                  example: ex cillum Lorem voluptate nulla
                agenda:
                  type: string
                  example: in laborum in
                tracking_fields:
                  type: string
                  example: >-
                    [{"field":"exercitation voluptate irure
                    ex","value":"ea"},{"field":"cillum","value":"velit in"}]
                recurrence:
                  type: string
                  example: >-
                    {"type":1,"repeat_interval":32217062,"weekly_days":"labore
                    irure","monthly_day":75839661,"monthly_week":3,"monthly_week_day":4,"end_times":1,"end_date_time":"1975-02-21T18:43:57.403Z"}
                settings:
                  type: string
                  example: >-
                    {"host_video":true,"panelists_video":true,"practice_session":false,"hd_video":false,"hd_video_for_attendees":false,"send_1080p_video_to_attendees":false,"approval_type":2,"registration_type":1,"audio":"both","auto_recording":"none","enforce_login":true,"enforce_login_domains":"","alternative_hosts":"nulla
                    sed","close_registration":false,"show_share_button":true,"allow_multiple_devices":true,"on_demand":false,"global_dial_in_countries":["tempor",""],"contact_name":"proident
                    tempor sint","contact_email":"dolor occaecat
                    es","registrants_restrict_number":0,"post_webinar_survey":true,"survey_url":"mollit
                    id","registrants_email_notification":true,"meeting_authentication":false,"authentication_option":"aliqua
                    velit culpa magna ex","authentication_domains":"mollit
                    cillum laborum
                    dolore","question_and_answer":{"enable":false,"allow_anonymous_questions":false,"answer_questions":"only","attendees_can_upvote":false,"attendees_can_comment":true},"email_language":"ut
                    ad","panelists_invitation_email_notification":true,"attendees_and_panelists_reminder_email_notification":{"enable":true,"type":6},"follow_up_attendees_email_notification":{"enable":false,"type":2},"follow_up_absentees_email_notification":{"enable":false,"type":3}}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: string
                id: integer
                host_id: string
                topic: string
                type: integer
                start_time: string [date-time]
                duration: integer
                timezone: string
                agenda: string
                created_at: string [date-time]
                start_url: string
                join_url: string
                occurrences:
                  - occurrence_id: integer
                    start_time: string [date-time]
                    duration: integer
                    status: string
                settings:
                  host_video: boolean
                  panelists_video: boolean
                  practice_session: boolean
                  hd_video: boolean
                  hd_video_for_attendees: boolean
                  send_1080p_video_to_attendees: boolean
                  approval_type: integer
                  registration_type: integer
                  audio: string
                  auto_recording: string
                  enforce_login: boolean
                  enforce_login_domains: string
                  alternative_hosts: string
                  close_registration: boolean
                  show_share_button: boolean
                  allow_multiple_devices: boolean
                  email_language: string
                  panelists_invitation_email_notification: boolean
                  registrants_confirmation_email: boolean
                  registrants_email_notification: boolean
                  attendees_and_panelists_reminder_email_notification:
                    enable: boolean
                    type: integer
                  follow_up_attendees_email_notification:
                    enable: boolean
                    type: integer
                  follow_up_absentees_email_notification:
                    enable: boolean
                    type: integer
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}:
    get:
      tags:
        - users > {user Id}
      summary: Get a user
      description: >-
        View a specific user's information on a Zoom account. A Zoom account can
        have one or more users. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        <p style="background-color:#e1f5fe; color:#000000; padding:8px">
        <b>Note:</b> Users who have not activated their account have a status of
        <i>pending</i>, and the <code>created_at</code> time displays the time
        at which the API call was made.</p>


        **Scopes:** `user:read:admin`, `user:read`, `user_info:read`<p
        style="background-color:#e1f5fe; color:#000000; padding:8px">
        <b>Note:</b> The `user_info:read` scope is only available when you pass
        the `me` value for the `$userId` value.</p></br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - name: login_type
          in: query
          schema:
            type: integer
          description: "The user's login method:\n\n`0` — Facebook OAuth</br>`1` —\_Google OAuth</br>`24` —\_Apple OAuth</br>`27` —\_Microsoft OAuth</br>`97` — Mobile device</br>`98` — RingCentral OAuth</br>`99` — API user</br>`100` — Zoom Work email</br>`101` — Single Sign-On (SSO)\n\nThe following login methods are only available in China:\n\n`11` — Phone number</br>`21` —\_WeChat</br>`23` — Alipay"
          example: '23'
        - name: encrypted_email
          in: query
          schema:
            type: boolean
          description: >-
            Whether the email address passed for the `userId` value is an
            encrypted email address:


            * `true` — The email address is encrypted.

            * `false` — The email address is not encrypted.


            If you do not query this parameter, this value defaults to null
            (`false`).
          example: 'true'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                created_at: '2018-11-15T01:10:08Z'
                custom_attributes:
                  - key: cb3674544gexq
                    name: Country of Citizenship
                    value: Nepal
                id: z8dsdsdsdsdCfp8uQ
                first_name: Harry
                last_name: Grande
                email: example@example.com
                type: 2
                role_name: Owner
                pmi: 100000000
                use_pmi: false
                personal_meeting_url: https://zoom.us/j/6352635623323434343443
                timezone: America/Los_Angeles
                verified: 1
                dept: ''
                last_login_time: '2019-09-13T21:08:52Z'
                last_client_version: 4.4.55383.0716(android)
                pic_url: >-
                  https://lh4.googleusercontent.com/-hsgfhdgsfghdsfghfd-photo.jpg
                host_key: '0000'
                jid: hghghfghdfghdfhgh@xmpp.zoom.us
                group_ids: []
                im_group_ids:
                  - CcSAAAAAAABBBVoQ
                account_id: EAAAAAbbbbbCCCCHMA
                language: en-US
                phone_country: USA
                phone_number: '15550100'
                status: active
                role_id: hdsfwyteg3675hgfs
                employee_unique_id: dddaaaa
                account_number: 20212021
                manager: name@example.com
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - users > {user Id}
      summary: Update a user
      description: >-
        Update information on a user's [Zoom
        profile](https://support.zoom.us/hc/en-us/articles/201363203-My-Profile).
        For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `user:write:admin` `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: >-
                    User's first name. Cannot contain more than 5 Chinese
                    characters.
                  example: dolor culpa sunt sed anim
                last_name:
                  type: string
                  description: >-
                    User's last name. Cannot contain more than 5 Chinese
                    characters.
                  example: proident co
                type:
                  type: integer
                  description: >-
                    User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` -
                    On-prem.<br>`99` - None (this can only be set with
                    `ssoCreate`). (This can only be one of 1,2,3,99)
                  example: '99'
                pmi:
                  type: integer
                  description: 'Personal meeting ID: length must be 10.'
                  example: '80795093'
                use_pmi:
                  type: boolean
                  description: Use Personal Meeting ID for instant meetings.
                  example: 'false'
                timezone:
                  type: string
                  description: >-
                    The time zone ID for a user profile. For this parameter
                    value please refer to the ID value in the
                    [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)
                    list.
                  example: esse nulla id
                language:
                  type: string
                  description: language
                  example: non ullamco aute velit nulla
                dept:
                  type: string
                  description: 'Department for user profile: use for report.'
                  example: aliqua
                vanity_name:
                  type: string
                  description: Personal meeting room name.
                  example: ut cupidatat
                host_key:
                  type: string
                  description: Host key. It should be a 6-10 digit number.
                  example: 'voluptate '
                cms_user_id:
                  type: string
                  description: Kaltura user ID.
                  example: Ut sit
                job_title:
                  type: string
                  description: User's job title.
                  example: aliquip officia aute
                company:
                  type: string
                  description: User's company.
                  example: et elit
                location:
                  type: string
                  description: User's location.
                  example: consequat magna dolor
                phone_number:
                  type: string
                  description: >-
                    **Note:** This field has been **deprecated** and will not be
                    supported in the future. Use the **phone_numbers** field
                    instead to assign phone number(s) to a user.



                    Phone number of the user. To update a phone number, you must
                    also provide the `phone_country` field.
                  example: labore irure ea
                phone_country:
                  type: string
                  description: >-
                    **Note:** This field has been **deprecated** and will not be
                    supported in the future. Use the **country** field of the
                    **phone_numbers** object instead to select the country for
                    the phone number.




                    [Country
                    ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)
                    of the phone number. For example, if the phone number
                    provided in the `phone_number` field is a Brazil based
                    number, the value of the `phone_country` field should be
                    `BR`.
                  example: nulla culpa in eu
                custom_attributes:
                  type: string
                  description: Custom attribute(s) of the user.
                  example: >-
                    {"key":"non","name":"nisi ex ullamco irure","value":"dolore
                    ipsum sint conse"}
                group_id:
                  type: string
                  description: >-
                    Provide unique identifier of the group that you would like
                    to add a [pending
                    user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb)
                    to. The value of this field can be retrieved from [List
                    Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups)
                    API.
                  example: in exercitation et
                phone_numbers:
                  type: string
                  example: >-
                    {"country":"commodo Excepteur irure","code":"mollit laboris
                    exercitation consectetur","number":"laboris
                    in","label":"Mobile"}
                manager:
                  type: string
                  description: The manager for the user.
                  example: EFBvLvAOvCf8LWR@UoWfhrpJYcwYXrAnRRQZQmxILiSuYpu.dic
                pronouns:
                  type: string
                  description: The user's pronouns.
                  example: sit aute
                pronouns_option:
                  type: integer
                  description: >-
                    The user's display pronouns setting:

                    * `1` — Ask the user every time they join meetings and
                    webinars. 

                    * `2` — Always display pronouns in meetings and webinars. 

                    * `3` — Do not display pronouns in meetings and webinars.
                    (This can only be one of 1,2,3)
                  example: '1'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: login_type
          in: query
          schema:
            type: integer
          description: "The user's login method:\n\n`0` — Facebook OAuth</br>`1` —\_Google OAuth</br>`24` —\_Apple OAuth</br>`27` —\_Microsoft OAuth</br>`97` — Mobile device</br>`98` — RingCentral OAuth</br>`99` — API user</br>`100` — Zoom Work email</br>`101` — Single Sign-On (SSO)\n\nThe following login methods are only available in China:\n\n`11` — Phone number</br>`21` —\_WeChat</br>`23` — Alipay"
          example: '23'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {user Id}
      summary: Delete a user
      description: >-
        Use this API to disassociate (unlink) a user or permanently delete a
        user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Deleting** a user **permanently** removes the user and their data from
        Zoom. Users can create a new Zoom account using the same email address.
        An account owner or an account admin can transfer meetings, webinars and
        cloud recordings to another Zoom user account before deleting.


        **Disassociating** a user unlinks the user from the associated Zoom
        account and provides the user their own basic free Zoom account. The
        disassociated user can then purchase their own Zoom licenses. An account
        owner or account admin can transfer the user's meetings, webinars, and
        cloud recordings to another user before disassociation.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - name: action
          in: query
          schema:
            type: string
          description: >-
            Delete action options:<br>`disassociate` - Disassociate a
            user.<br>`delete`-  Permanently delete a user.<br>Note: To delete
            pending user in the account, use `disassociate`
          example: disassociate
        - name: transfer_email
          in: query
          schema:
            type: string
          description: >-
            Transfer email. This field is **required** if the user has upcoming
            Zoom Events scheduled. After you delete or disassociate the user,
            the user's upcoming Zoom Events will be transferred to the target
            user.
          example: Excepteur aute deserunt occaecat ea
        - name: transfer_meeting
          in: query
          schema:
            type: boolean
          description: Transfer meeting.
          example: 'true'
        - name: transfer_webinar
          in: query
          schema:
            type: boolean
          description: Transfer webinar.
          example: 'true'
        - name: transfer_recording
          in: query
          schema:
            type: boolean
          description: Transfer recording.
          example: 'true'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/recordings:
    get:
      tags:
        - users > {user Id}
      summary: List all recordings
      description: >-
        Use this API to list all [cloud
        recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        of a user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> To access a user's password protected cloud recording, add
        an <code>access_token</code> parameter to the download URL and provide
        either the <a
        href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app">JWT</a>
        or the user's OAuth access token as the value of the
        <code>access_token</code> parameter.</p>


        When a user records a meeting or a webinar by choosing the **Record to
        the Cloud** option, the video, audio, and chat text are recorded in the
        Zoom cloud.


        **Scopes:** `recording:read:admin`, `recording:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * Pro or a higher plan.

        * Cloud Recording must be enabled on the user's account.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: mc
          in: query
          schema:
            type: boolean
          description: >-
            Query Metadata of Recording if an On-Premise Meeting Connector was
            used for the meeting.
          example: 'false'
        - name: trash
          in: query
          schema:
            type: boolean
          description: >-
            Query trash.

            `true`: List recordings from trash.<br> `false`: Do not list
            recordings from the trash.<br> The default value is `false`. If you
            set it to `true`, you can use the `trash_type` property to indicate
            the type of Cloud recording that you need to retrieve.
          example: 'false'
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date in 'yyyy-mm-dd' UTC format for the date range for
            which you would like to retrieve recordings. The maximum range can
            be a month. If no value is provided for this field, the default will
            be current date. For example, if you make the API request on June
            30, 2020, without providing the “from” and “to” parameters, by
            default the value of 'from' field will be “2020-06-30” and the value
            of the 'to' field will be “2020-07-01”. 


            **Note**: The "trash" files cannot be filtered by date range and
            thus, the "from" and "to" fields should not be used for trash files.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: "End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
          example: '1965-05-02'
        - name: trash_type
          in: query
          schema:
            type: string
          description: >-
            The type of Cloud recording that you would like to retrieve from the
            trash. The value can be one of the following:<br>
                `meeting_recordings`: List all meeting recordings from the trash.<br>
                `recording_file`: List all individual recording files from the trash.
          example: meeting_recordings
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-15'
                to: '2019-09-15'
                page_count: 1
                page_size: 30
                total_records: 1
                next_page_token: ''
                meetings:
                  - uuid: gkABCDEnCkPuA==
                    id: 1000000000000
                    account_id: AbcjxkfhdEEE
                    host_id: z8dfkgABBBBBBBfp8uQ
                    topic: MyTestPollMeeting
                    type: 2
                    start_time: '2019-08-29T21:54:49Z'
                    timezone: America/Los_Angeles
                    duration: 1
                    total_size: 47383
                    recording_count: 1
                    share_url: >-
                      https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw
                    recording_files:
                      - id: 589ABBBBB-8718e
                        meeting_id: gkABCDEnCkPuA==
                        recording_start: '2019-08-29T21:54:55Z'
                        recording_end: '2019-08-29T21:55:24Z'
                        file_type: M4A
                        file_size: 10098
                        play_url: >-
                          https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl
                        download_url: >-
                          https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl
                        status: completed
                        recording_type: audio_only
                      - meeting_id: gkABCDEnCkPuA==
                        recording_start: '2019-08-29T21:54:55Z'
                        recording_end: '2019-08-29T21:55:24Z'
                        file_type: TIMELINE
                        download_url: >-
                          https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa
                      - id: 96119b=kdfhf791
                        meeting_id: gkABCDEnCkPuA==
                        recording_start: '2019-08-29T21:54:55Z'
                        recording_end: '2019-08-29T21:55:24Z'
                        file_type: MP4
                        file_size: 37285
                        play_url: https://api.zoom.us/recording/play/abcdkjfhdhfdhfj
                        download_url: https://api.zoom.us/recording/download/abcdkjfhdhfdhfj
                        status: completed
                        recording_type: shared_screen_with_speaker_view
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/picture:
    post:
      tags:
        - users > {user Id}
      summary: Upload a user's profile picture
      description: >-
        Upload a user's profile picture. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Provide `multipart/form-data` as the value of the `content-type` header
        for this request. This API supports `.jpeg` and `.png` file formats.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pic_file:
                  type: string
                  description: "(Required) The file's path. "
                  example: reprehenderit cupidatat
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/status:
    put:
      tags:
        - users > {user Id}
      summary: Update user status
      description: >-
        Use this API to
        [deactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_6a9bc1c3-d739-4945-b1f2-00b3b88fb5cc)
        an active user or to
        [reactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_16319724-d120-4be6-af5d-31582d134ea0)
        a deactivated user. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        An account owner or admins can deactivate as well as activate a user in
        a Zoom account. Deactivating a user will remove all licenses associated
        with a user. It will prevent the deactivated user from logging into
        their Zoom account. A deactivated user can be reactivated. Reactivating
        a user grants the user access to login to their Zoom account.


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) The action types:<br>`activate` - Activate a
                    deactivated user.<br>`deactivate` - Deactivate a user. (This
                    can only be one of activate,deactivate)
                  example: deactivate
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/password:
    put:
      tags:
        - users > {user Id}
      summary: Update a user's password
      description: >-
        Update the
        [password](https://support.zoom.us/hc/en-us/articles/206344385-Change-a-User-s-Password)
        of a user using which the user can login to Zoom. For user-level apps,
        pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        After this request is processed successfully, an email notification will
        be sent to the user stating that the password was changed.<br>

        **Scopes:** `user:write:admin` `user:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
        **Prerequisites:**<br>

        * Owner or admin of the Zoom account.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: >-
                    (Required) User password. Should be less than 32 characters.


                    **Note:** If the account owner or admin has enabled
                    [enhanced password
                    requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd),
                    the value provided in this field must meet those
                    requirements. These requirements can be retrieved by calling
                    the [Get Account Settings
                    API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings)
                    and referring to the `password_requirement` field present in
                    the `security` object.
                  example: proident aliqua
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/permissions:
    get:
      tags:
        - users > {user Id}
      summary: Get user permissions
      description: >-
        Use this API to get permissions that have been granted to the user. For
        user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        Users can be assigned a set of permissions that allows them to access
        only the pages/information that a user needs to view or edit.


        **Scopes:** `user:read:admin`, `user:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                permissions:
                  - IMGroups:Edit
                  - Security:Edit
                  - IMGroups:Read
                  - BillingSubscription:Edit
                  - SingleSignOn:Edit
                  - WebinarSetting:Edit
                  - Branding:Read
                  - UsageReport:Read
                  - BillingSubscription:Read
                  - CrossHybrid:Read
                  - UserActivitiesReport:Read
                  - Branding:Edit
                  - SingleSignOn:Read
                  - Security:Read
                  - Dashboard:Read
                  - AccountProfile:Read
                  - MarketPlace:Edit
                  - ZoomRooms:Edit
                  - PbxAdmin:Read
                  - Meeting:Edit
                  - IMChatHistory:Read
                  - RoomConnector:Read
                  - IMChatBot:Edit
                  - CrossHybrid:Edit
                  - AccountProfile:Edit
                  - RoomConnector:Edit
                  - Group:Edit
                  - BillingInformation:Edit
                  - LyncConnector:Edit
                  - LyncConnector:Read
                  - Integration:Read
                  - User:Edit
                  - BillingInformation:Read
                  - AccountSetting:Edit
                  - SubAccount:Read
                  - IMSetting:Read
                  - MeetingConnector:Read
                  - ThirdPartyConference:Read
                  - Meeting:Join
                  - CallInContacts:Read
                  - ZoomDevelopers:Read
                  - Recording:Read
                  - Role:Edit
                  - Recording:Edit
                  - DigitalSignage:Read
                  - ScheduleTrackingFields:Read
                  - ThirdPartyConference:Edit
                  - Group:Read
                  - AccountSetting:Read
                  - MeetingConnector:Edit
                  - Integration:Edit
                  - CallInContacts:Edit
                  - DigitalSignage:Edit
                  - MarketPlace:Read
                  - PbxAdmin:Edit
                  - ZoomRooms:Read
                  - MobileDeviceManagement:Read
                  - RecordingContent:Read
                  - User:Read
                  - ScheduleTrackingFields:Edit
                  - WebinarSetting:Read
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/pac:
    get:
      tags:
        - users > {user Id}
      summary: List a user's PAC accounts
      description: >-
        Use this API to list a user's [Personal Audio
        Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        accounts. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        PAC allows Pro or higher account holders to host meetings through PSTN
        (phone dial-in) only.


        **Scopes:** `pac:read:admin`, `pac:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * A Pro or higher plan with [Premium Audio
        Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        add-on.

        * Personal Audio Conference must be enabled in the user's profile.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                pac_accounts:
                  - dedicated_dial_in_number:
                      - number: '123343434'
                        country: USA
                    global_dial_in_numbers:
                      - number: '434343434'
                        country: USA
                    conference_id: '111111'
                    participant_password: ghdf
                    listen_only_password: hkgk
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/email:
    put:
      tags:
        - users > {user Id}
      summary: Update a user's email
      description: >-
        Change a user's [email
        address](https://support.zoom.us/hc/en-us/articles/201362563-How-Do-I-Change-the-Email-on-My-Account-)
        on a Zoom account that has managed domain set up. For user-level apps,
        pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        * If the Zoom account in which the user belongs has multiple [managed
        domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-),
        then the email to be updated **must** match one of the managed domains.

        * A user's email address can **only** be changed for a maximum of 3
        times in a day (24 hours).


        **Scopes:** `user:write:admin`, `user:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Managed domain must be enabled in the account. 

        * The new email address should not already exist in Zoom.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    (Required) User’s email. The length should be less than 128
                    characters.
                  example: Ipsnq@OuVNVpNgM.wd
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/webinar_templates:
    get:
      tags:
        - users > {user Id}
      summary: List webinar templates
      description: >-
        Use this API to list a user's existing [webinar
        templates'](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates)
        information. For user-level apps, pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        When you schedule a webinar, you can save the settings for that webinar
        as a template for scheduling future webinars.


        **Prerequisites:**

        * Pro or a higher account with Webinar plan enabled.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                templates:
                  - id: ull6574eur
                    name: Weekly Meeting Template
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/presence_status:
    put:
      tags:
        - users > {user Id}
      summary: Update a user's presence status
      description: >-
        Use this API to update a user's presence status. For user-level apps,
        pass [the `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        A user's status **cannot** be updated more than once per minute. For
        example, you can only submit a maximum of one update request per minute
        for a single user.


        Users in the Zoom desktop client and mobile apps are assigned with a
        [presence
        status](https://support.zoom.us/hc/en-us/articles/360032554051-Status-Icons).
        The presence status informs users of their contact's availability. Users
        can also change their own presence status to one the following:

        * **Away**

        * **Do not disturb**

        * **Available**

        * **In a calendar event**

        * **Presenting**

        * **In a Zoom meeting**

        * **On a call**


        Note that a user's presence status **cannot** be updated via this API if
        the user is not logged in to the Zoom client.


        **Scopes:** `user:write`, `user:write:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: >-
                    Presence status of the user. The value can be set to one of
                    the following:<br>

                    * `Away`

                    * `Do_Not_Disturb`

                    * `Available`

                    * `In_Calendar_Event`

                    * `Presenting`

                    * `In_A_Zoom_Meeting`

                    * `On_A_Call`


                    Users who are on Zoom Client with a version **lower than
                    5.3.0** can update the status from:

                    * `Away` to `Do_Not_Disturb` 

                    * `Available` to `Do_Not_Disturb`


                    Users who are on **Zoom Client 5.3.0** or higher can update
                    the status from:

                    * `Do_Not_Disturb` to `Away`

                    * `Do_Not_Disturb` to `Available`

                    * `Available` to `Away`

                    * `Away` to `Available` (This can only be one of
                    Do_No_Disturb,Away,Available,In_Calendar_Event,Presenting,In_A_Zoom_Meeting,On_A_Call)
                  example: On_A_Call
                duration:
                  type: integer
                  description: >-
                    If you're updating the status to `Do_Not_Disturb`, specify a
                    duration in minutes for which the status should remain as
                    `Do_Not_Disturb`. 


                    The default value is 20 minutes and the maximum allowed
                    value is 1440 minutes.
                  example: '1412'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/meeting_templates:
    get:
      tags:
        - users > {user Id}
      summary: List meeting templates
      description: >
        Use this API to list [meeting
        templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates)
        that are available to be used by a user. For user-level apps, pass [the
        `me`
        value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword)
        instead of the `userId` parameter.


        **Scopes:** `meeting:read` or `meeting:read:admin`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the user. Retrieve the value of this
            field by calling the [List
            users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 2
                templates:
                  - id: AdxbhxCzKgSiWAw
                    type: 1
                    name: My meeting template
                  - id: eYshgdftw4-5_MUSQ
                    type: 2
                    name: Zoom meeting template for daily sync
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users:
    get:
      tags:
        - users
      summary: List users
      description: >-
        Use this API to list your account's users.


        **Scopes:** `user:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: |-
            The user's status: 
            * `active` — An active user. 
            * `inactive` — A deactivated user. 
            * `pending` — A pending user.

            This value defaults to `active`.
          example: active
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 1
                users:
                  - id: z8yAAAAA8bbbQ
                    first_name: Taylor
                    last_name: Kim
                    email: example@example.com
                    type: 2
                    pmi: 111111111
                    timezone: America/Los_Angeles
                    verified: 1
                    dept: ''
                    created_at: '2018-11-15T01:10:08Z'
                    last_login_time: '2019-09-13T21:08:52Z'
                    last_client_version: 4.4.55383.0716(android)
                    pic_url: https://example.com/photo.jpg
                    im_group_ids:
                      - GroupName
                    status: active
    post:
      tags:
        - users
      summary: Create users
      description: >-
        A Zoom account can have one or more users. Use this API to add a new
        user to your account.<br><br>

        **Prerequisites:**<br>

        * Pro or higher plan<br><br>

        **Scopes:** `user:write:admin` `user:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) Specify how to create the new user: <br>`create`
                    - User will get an email sent from Zoom. There is a
                    confirmation link in this email. The user will then need to
                    use the link to activate their Zoom account. The user can
                    then set or change their password.<br>`autoCreate` - This
                    action is provided for the enterprise customer who has a
                    managed domain. This feature is disabled by default because
                    of the security risk involved in creating a user who does
                    not belong to your domain.<br>`custCreate` - Users created
                    via this option do not have passwords and will not have the
                    ability to log into the Zoom Web Portal or the Zoom Client.
                    These users can still host and join meetings using the
                    `start_url` and `join_url` respectively. To use this option,
                    you must contact the ISV Platform Sales team at
                    isv@zoom.us.<br>`ssoCreate` - This action is provided for
                    the enabled “Pre-provisioning SSO User” option. A user
                    created in this way has no password. If not a basic user, a
                    personal vanity URL using the user name (no domain) of the
                    provisioning email will be generated. If the user name or
                    PMI is invalid or occupied, it will use a random number or
                    random personal vanity URL. (This can only be one of
                    create,autoCreate,custCreate,ssoCreate)
                  example: create
                user_info:
                  type: string
                  example: >-
                    {"email":"in dolore ad
                    veniam","type":99,"first_name":"incididunt
                    Ut","last_name":"nulla veniam","password":"et Duis velit"}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: string
                first_name: string
                last_name: string
                email: string
                type: integer
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/me/zak:
    get:
      tags:
        - users
      summary: Get user's ZAK
      description: >+
        Get User’s Zoom Access Token (ZAK). You can use a ZAK to enable a
        non-login user to join a meeting on your app. Non-login users do not
        need to enter their username and password to join meetings.


        **Scope:** `user_zak:read`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`

      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: sslldd00933aaas
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/email:
    get:
      tags:
        - users
      summary: Check a user email
      description: >
        Verify if a user's email is registered with Zoom.<br><br>


        <b>Note: </b>You can successfully check if a user is a registered Zoom
        user only if the user **signed up for Zoom via email and is within your
        account.** If you provide an email address of a user who is not in your
        account, the value of "existed_email" parameter will be "false"
        irrespective of whether or not the user is registered with Zoom. The
        response of this API call will not include users who joined Zoom using
        options such as "Sign in with SSO", "Sign in with Google" or "Sign in
        with Facebook" even if they are in the same account as yours.


        **Scopes:** `user:read:admin` `user:read`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) The email address to be verified.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                existed_email: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/vanity_name:
    get:
      tags:
        - users
      summary: Check a user's PM room
      description: >-
        A personal meeting room is a virtual meeting room that can be
        permanently assigned to a user.

        Use this API to check if a personal meeting room with the given name
        exists or not.<br><br>

        **Scopes:** `user:read:admin` `user:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: vanity_name
          in: query
          schema:
            type: string
          description: (Required) Personal meeting room name.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                existed: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/{registrantId}:
    delete:
      tags:
        - meetings/{meeting Id} > registrants > {registrant Id}
      summary: Delete a meeting registrant
      description: |-
        Delete a meeting registrant.<br><br>
        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: (Required) The meeting ID.
          example: '-17728915'
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The meeting registrant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - meetings/{meeting Id} > registrants > {registrant Id}
      summary: Get a meeting registrant
      description: >-
        Use this API to get details on a specific user who has registered for
        the meeting. A host or a user with administrative permissions can
        require [registration for Zoom
        meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).


        **Scopes:** `meeting:read:admin`, `meeting:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * The account must have a Meeting plan
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '24000002122'
                email: example@example.com
                first_name: Jill
                last_name: Chill
                address: 1800 Amphibious Blvd.
                city: Mountain View
                country: US
                zip: '94045'
                state: CA
                phone: '5550100'
                industry: Food
                org: Cooking Org
                job_title: Chef
                purchasing_time_frame: 1-3 months
                role_in_purchase_process: Influencer
                no_of_employees: '10'
                comments: Looking forward to the Meeting
                custom_questions:
                  - title: What do you hope to learn from this Meeting?
                    value: >-
                      Look forward to learning how you come up with new recipes
                      and what other services you offer.
                status: approved
                create_time: '2021-07-29T08:06:15Z'
                join_url: >-
                  https://zoom.us/w/93996867430?tk=xK1MkXXQmkGWEaGvJ5BrbQ4Xc1FhUt90CUH5qI3Ko2E.DQUAAAAV4qZfZhZ5dm1pRVQ0NVRSVzBfSUpyRlpybllBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&pwd=M35SOl_x90Gq8VR10a4BroJCx5OMoK.1
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/questions:
    get:
      tags:
        - meetings/{meeting Id} > registrants > questions
      summary: 'List registration questions '
      description: >+
        List registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br>


        **Scopes:** `meeting:read`, `meeting:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                questions:
                  - field_name: address
                    required: true
                custom_questions:
                  - title: How long have you been working?
                    type: short
                    required: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings/{meeting Id} > registrants > questions
      summary: Update registration questions
      description: >+
        Update registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br><br>

        **Scopes:** `meeting:write`, `meeting:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"field_name":"no_of_employees","required":true},{"field_name":"industry","required":false}]
                custom_questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"title":"dolore adipisicing
                    ullamco","type":"single","required":true,"answers":["sit
                    mollit dolore quis dolore","proident dolore consequat
                    est"]},{"title":"ipsum
                    minim","type":"short","required":true,"answers":["incididunt
                    adipisicing","nulla velit"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants:
    get:
      tags:
        - meetings/{meeting Id} > registrants
      summary: List meeting registrants
      description: >-
        A host or a user with admin permission can require [registration for a
        Zoom
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).
        Use this API to list users that have registered for a meeting.<br><br>

        **Scopes**: `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The registrant status:<br>`pending` - Registrant's status is
            pending.<br>`approved` - Registrant's status is
            approved.<br>`denied` - Registrant's status is denied.
          example: approved
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 1
                total_records: 1
                registrants:
                  - email: example@example.com
                    first_name: Tim
                    last_name: S.
                    id: zjkfsdfjdfhg
                    address: 8 Rue du Nom Fictif
                    city: Paris
                    country: France
                    zip: '314'
                    state: Ile-de-France
                    phone: '5550100'
                    industry: Tech
                    org: Growth
                    job_title: Developer
                    purchasing_time_frame: Within a month
                    role_in_purchase_process: Not involved
                    no_of_employees: 1-20
                    comments: Love using Zoom APIs
                    custom_questions:
                      - title: Did you enjoy the registration process?
                        value: Yes, alot.
                      - title: Would you like to register for our next meeting?
                        value: Absolutely.
                    status: approved
                    create_time: '2012-04-14T16:55:30.231Z'
                    join_url: https://success.zoom.us/j/0000000000000
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings/{meeting Id} > registrants
      summary: Add meeting registrant
      description: >-
        Register a participant for a meeting.<br><br> Note that there is a
        maximum limit of 4999 registrants per meeting and users will see an
        error if the capacity has reached.


        **Prerequisite:**<br>

        * Host user type must be "Licensed".


        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: minim id Lorem
                first_name:
                  type: string
                  example: ad do Lorem nisi voluptate
                last_name:
                  type: string
                  example: voluptate sint
                address:
                  type: string
                  example: sed sit elit nisi dolor
                city:
                  type: string
                  example: adipisicing ipsum amet
                country:
                  type: string
                  example: nostrud incididunt consectetur Ut ex
                zip:
                  type: string
                  example: ut incididunt Duis aute
                state:
                  type: string
                  example: ut irure
                phone:
                  type: string
                  example: nulla adipisicing ex v
                industry:
                  type: string
                  example: quis
                org:
                  type: string
                  example: anim est in
                job_title:
                  type: string
                  example: culpa ad
                purchasing_time_frame:
                  type: string
                  example: ullamco commodo
                role_in_purchase_process:
                  type: string
                  example: sit voluptate
                no_of_employees:
                  type: string
                  example: d
                comments:
                  type: string
                  example: esse
                custom_questions:
                  type: string
                  example: >-
                    [{"title":"Lorem enim","value":"ut ea ad"},{"title":"irure
                    exercitation","value":"irure elit sunt do"}]
                language:
                  type: string
                  example: culpa sit ea elit
                auto_approve:
                  type: boolean
                  example: 'false'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_ids
          in: query
          schema:
            type: string
          description: >-
            Occurrence IDs. You can find these with the meeting get API.
            Multiple values separated by comma.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 85746065
                join_url: amet
                registrant_id: a
                start_time: culpa mollit
                topic: reprehenderit ea ut ex Excepteur
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/status:
    put:
      tags:
        - meetings/{meeting Id} > registrants
      summary: Update registrant's status
      description: >-
        Update a meeting registrant's status by either approving, cancelling or
        denying a registrant from joining the meeting.<br><br>

        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) Registrant Status:<br>`approve` - Approve
                    registrant.<br>`cancel` - Cancel previously approved
                    registrant's registration.<br>`deny` - Deny registrant.
                    (This can only be one of approve,cancel,deny)
                  example: approve
                registrants:
                  type: string
                  description: List of registrants.
                  example: >-
                    [{"id":"reprehenderit cupidatat deserunt ut","email":"esse
                    culpa"},{"id":"cupidatat labore ut proident
                    dolor","email":"esse exercitation consectetur aliquip"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/polls/{pollId}:
    get:
      tags:
        - meetings/{meeting Id} > polls > {poll Id}
      summary: Get a meeting poll
      description: >+
        Polls allow the meeting host to survey attendees. Use this API to get
        information about a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br><br>

        **Scopes**: `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: abcdaaaeefffhhh
                status: notstart
                title: Meeting Usefulness
                questions:
                  - name: How useful was this meeting?
                    type: multiple
                    answers:
                      - Extremely useful
                      - Somewhat useful
                      - Not useful at all
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - meetings/{meeting Id} > polls > {poll Id}
      summary: Update a meeting poll
      description: >+
        Polls allow the meeting host to survey attendees. Use this API to update
        information of a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)<br><br>

        **Scopes**: `meeting:write:admin` `meeting:write`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` 

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: undefined
                  example: labore voluptate dolore id
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"minim cupidatat nisi
                    voluptate","type":"single","answers":["esse in","minim
                    laboris dolor"]},{"name":"sint sit
                    ","type":"single","answers":["Ut sint","cillum"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings/{meeting Id} > polls > {poll Id}
      summary: Delete a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Use this API to delete
        a meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br>

        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
        **Prerequisites**:<br>

        * Host user type must be **Pro**.

        * Polling feature should be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/polls:
    get:
      tags:
        - meetings/{meeting Id} > polls
      summary: List meeting polls
      description: >-
        Polls allow the meeting host to survey attendees. Use this API to list
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        of a meeting.<br><br>


        **Scopes**: `meeting:read:admin` `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>

        * Host user type must be **Pro** or higher plan.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                polls:
                  - id: YB33NcABCdg_g1AAAxTQ
                    title: Meeting Usefulness
                    status: notstart
                    questions:
                      - name: How useful was this meeting?
                        type: multiple
                        answers:
                          - Extremely useful
                          - Somewhat useful
                          - Not useful at all
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings/{meeting Id} > polls
      summary: Create a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Use this API to create
        a
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.<br><br>


        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>

        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: undefined
                  example: labore voluptate dolore id
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"minim cupidatat nisi
                    voluptate","type":"single","answers":["esse in","minim
                    laboris dolor"]},{"name":"sint sit
                    ","type":"single","answers":["Ut sint","cillum"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: abcdaaaeefffhhh
                status: notstart
                title: Meeting Usefulness
                questions:
                  - name: How useful was this meeting?
                    type: multiple
                    answers:
                      - Extremely useful
                      - Somewhat useful
                      - Not useful at all
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/{recordingId}:
    delete:
      tags:
        - meetings/{meeting Id} > recordings > {recording Id}
      summary: Delete a meeting recording file
      description: >-
        Delete a specific recording file from a meeting.<p
        style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> To use this API, you must enable the <b>The host can delete
        cloud recordings</b> setting. You can find this setting in the
        <b>Recording</b> tab of the <b>Settings</b> interface in the [Zoom web
        portal](https://zoom.us/).</p>


        **Scopes**: `recording:write:admin`, `recording:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: action
          in: query
          schema:
            type: string
          description: >-
            The recording delete actions:<br>`trash` - Move recording to
            trash.<br>`delete` - Delete recording permanently.
          example: trash
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
        - name: recordingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The recording ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/{recordingId}/status:
    put:
      tags:
        - meetings/{meeting Id} > recordings > {recording Id}
      summary: Recover a single recording
      description: >
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover a single recording file
        from the meeting.<br>

        **Scopes:** `recording:write:admin` `recording:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ' (This can only be one of recover)'
                  example: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
        - name: recordingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The recording ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/settings:
    get:
      tags:
        - meetings/{meeting Id} > recordings > settings
      summary: Get meeting recording settings
      description: >-
        Retrieve settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).<br><br>

        **Scopes**: `recording:read:admin` `recording:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                share_recording: none
                recording_authentication: true
                authentication_option: abc
                authentication_domains: ccc.com
                viewer_download: false
                password: dAbyzK1
                on_demand: false
                approval_type: 1
                send_email_to_host: true
                show_social_share_buttons: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings/{meeting Id} > recordings > settings
      summary: Update meeting recording settings
      description: >-
        Update settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)<br><br>

        **Scopes**: `recording:write:admin` `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                share_recording:
                  type: string
                  description: >-
                    Determine how the meeting recording is shared. (This can
                    only be one of publicly,internally,none)
                  example: internally
                recording_authentication:
                  type: boolean
                  description: Only authenticated users can view.
                  example: 'false'
                authentication_option:
                  type: string
                  description: Authentication Options.
                  example: enim et
                authentication_domains:
                  type: string
                  description: Authentication domains.
                  example: est
                viewer_download:
                  type: boolean
                  description: >-
                    Determine whether a viewer can download the recording file
                    or not.
                  example: 'true'
                password:
                  type: string
                  description: >-
                    Enable password protection for the recording by setting a
                    password. The password must have a minimum of **eight**
                    characters with a mix of numbers, letters and special
                    characters.<br><br>

                    **Note:** If the account owner or the admin has set minimum
                    password strength requirements for recordings via Account
                    Settings, the password value provided here must meet those
                    requirements. <br><br>If the requirements are enabled, you
                    can view those requirements by calling either the [Get User
                    Settings
                    API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)
                    or the [Get Account
                    Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings)
                    API.
                  example: et elit ci
                on_demand:
                  type: boolean
                  description: >-
                    Determine whether registration  isrequired to view the
                    recording.
                  example: 'false'
                approval_type:
                  type: integer
                  description: >-
                    Approval type for the registration.<br>

                    `0`- Automatically approve the registration when a user
                    registers.<br>

                    `1` - Manually approve or deny the registration of a
                    user.<br>

                    `2` - No registration required to view the recording. (This
                    can only be one of 0,1,2)
                  example: '2'
                send_email_to_host:
                  type: boolean
                  description: >-
                    Send an email to host when someone registers to view the
                    recording. This applies for On-demand recordings only.
                  example: 'false'
                show_social_share_buttons:
                  type: boolean
                  description: >-
                    Show social share buttons on registration page. This applies
                    for On-demand recordings only.
                  example: 'false'
                topic:
                  type: string
                  description: Name of the recording.
                  example: deserunt exercitation
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants/questions:
    get:
      tags:
        - meetings/{meeting Id} > recordings > registrants > questions
      summary: Get registration questions
      description: >
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to retrieve a list of questions that are displayed for
        users to complete when registering to view the recording of a specific
        meeting.<br>

        **Scopes:** `recording:read:admin`, `recording:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                questions:
                  - field_name: address
                    required: false
                custom_questions:
                  - title: Would you like us to contact you for a survey?
                    type: multiple
                    required: false
                    answers:
                      - 'Yes'
                      - 'No'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings/{meeting Id} > recordings > registrants > questions
      summary: Update registration questions
      description: >
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to update registration questions that are to be answered by
        users while registering to view a recording.<br>

        **Scopes:** `recording:write:admin`, `recording:write`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"field_name":"zip","required":true},{"field_name":"address","required":true}]
                custom_questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"title":"consectetur deserunt
                    id","type":"short","required":true,"answers":["enim velit et
                    ad nulla","tempor"]},{"title":"tempor
                    deserunt","type":"short","required":false,"answers":["magna
                    fugiat do","irure labore aliqua dolore"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants:
    get:
      tags:
        - meetings/{meeting Id} > recordings > registrants
      summary: List recording registrants
      description: >
        Cloud Recordings of past Zoom Meetings can be made
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings).
        Users should be
        [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate)
        to view these recordings.


        Use this API to list registrants of **On-demand Cloud Recordings** of a
        past meeting.<br>

        **Scopes:** `recording:read:admin`, `recording:read`.<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The registrant status:<br>`pending` - Registrant's status is
            pending.<br>`approved` - Registrant's status is
            approved.<br>`denied` - Registrant's status is denied.
          example: approved
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 0
                page_number: 1
                page_size: 30
                total_records: 1
                registrants:
                  - id: sskldsbdABBBBBBBB
                    first_name: Shri
                    last_name: Shree
                    email: example@example.com
                    address: 1800 Amphibious Blvd.
                    city: Mountain View
                    country: US
                    zip: '94045'
                    state: CA
                    phone: '5550100'
                    industry: sfsdf
                    org: dsadsfsf
                    job_title: sfsdfsdf
                    purchasing_time_frame: Within a month
                    role_in_purchase_process: Influencer
                    no_of_employees: '40'
                    comments: Amazing!
                    custom_questions: []
                    status: approved
                    create_time: '2019-08-29T23:04:08Z'
                    share_url: https://zoom.us/recording/share/IlA1ABCDDJHKNDkkkkkkkTziMw
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings/{meeting Id} > recordings > registrants
      summary: Create a recording registrant
      description: >+
        Cloud Recordings of past Zoom Meetings can be made
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings).
        Users should be
        [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate)
        to view these recordings.


        Use this API to register a user to gain access to **On-demand Cloud
        Recordings** of a past meeting.<br>

        **Scopes:** `recording:write:admin`, `recording:write`.<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: consequat esse i
                first_name:
                  type: string
                  example: labore
                last_name:
                  type: string
                  example: consequat exercitatio
                address:
                  type: string
                  example: ex eiusmod officia id et
                city:
                  type: string
                  example: dolor sit culpa
                country:
                  type: string
                  example: et consequat cillum reprehenderit
                zip:
                  type: string
                  example: Ut id proident eu
                state:
                  type: string
                  example: do nulla dolor voluptate
                phone:
                  type: string
                  example: Du
                industry:
                  type: string
                  example: elit sed
                org:
                  type: string
                  example: dolor in consectetur anim
                job_title:
                  type: string
                  example: anim enim occaecat
                purchasing_time_frame:
                  type: string
                  example: sit
                role_in_purchase_process:
                  type: string
                  example: laboris sed deserunt enim
                no_of_employees:
                  type: string
                  example: adipisicing Ut enim qui laboru
                comments:
                  type: string
                  example: anim ea quis velit
                custom_questions:
                  type: string
                  example: >-
                    [{"title":"cupidatat ipsum laborum consequat
                    pariatur","value":"adipisicing ipsum velit
                    magna"},{"title":"elit","value":"nulla reprehenderit eu id
                    dolore"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrant_id: veniamKIW1Sonseq
                id: 12345666
                topic: cupidatat dolore quis minim aliquip
                share_url: https://zoom.us/recording/share/IpAAABBBBBBA1aqqkzFFgiJ2jpR
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants/status:
    put:
      tags:
        - meetings/{meeting Id} > recordings > registrants
      summary: Update registrant's status
      description: >
        A registrant can either be approved or denied from viewing the
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        recording. 

        Use this API to update a registrant's status.


        **Scopes:** `recording:write:admin`, `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: (Required)  (This can only be one of approve,deny)
                  example: approve
                registrants:
                  type: string
                  description: List of registrants
                  example: '[{"id":"sint dolore r"},{"id":"cu"}]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings:
    get:
      tags:
        - meetings/{meeting Id} > recordings
      summary: Get meeting recordings
      description: >-
        Get all the
        [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4)
        from a meeting or Webinar instance. The recording files can be
        downloaded via the `download_url` property listed in the response.


        > To access a password-protected cloud recording, add an `access_token`
        parameter to the download URL and provide OAuth access token or
        [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app)
        as the `access_token` value.


        **Scopes:** `recording:read:admin`, `recording:read`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            Get the `download_access_token` field for downloading meeting
            recordings.
          example: Excepteur aute deserunt occaecat ea
        - name: ttl
          in: query
          schema:
            type: integer
          description: >-
            Time to live (TTL) of the `download_access_token`. This is only
            valid if the `include_fields` query parameter contains
            `download_access_token`. The range is between 0-604800.
          example: '22183'
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: gkABCDEbbbbbbbkPuA==
                id: 68000000031879
                account_id: EABkdslfBBBdk
                host_id: z8yBXksaAAjdhfsfdfkjgg
                topic: MyTestPollMeeting
                type: 2
                start_time: '2019-08-29T21:54:49Z'
                timezone: America/Los_Angeles
                duration: 1
                total_size: 74596
                recording_count: 4
                share_url: https://api.zoom.us/recording/share/abcdkhfdbbfdjbg
                recording_files:
                  - id: 96119skjlfhdshkjf-djkfndjf0-f791
                    meeting_id: gkABCDEbbbbbbbkPuA==
                    recording_start: '2019-08-29T21:54:55Z'
                    recording_end: '2019-08-29T21:55:24Z'
                    file_type: MP4
                    file_size: 37285
                    play_url: >-
                      https://api.zoom.us/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    download_url: >-
                      https://api.zoom.us/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    status: completed
                    recording_type: shared_screen_with_speaker_view
                  - id: 5890sfjkdsf-aaaakdf-fbbb618718e
                    meeting_id: gkABCDEbbbbbbbkPuA==
                    recording_start: '2019-08-29T21:54:55Z'
                    recording_end: '2019-08-29T21:55:24Z'
                    file_type: M4A
                    file_size: 10098
                    play_url: >-
                      https://api.zoom.us/recording/play/ABdkEEEfhlgldfjkglfghlkfdklhsg
                    download_url: >-
                      https://api.zoom.us/recording/download/ABdkEEEfhlgldfjkglfghlkfdklhsg
                    status: completed
                    recording_type: audio_only
                  - meeting_id: gkABCDEbbbbbbbkPuA==
                    recording_start: '2019-08-29T21:54:55Z'
                    recording_end: '2019-08-29T21:55:24Z'
                    file_type: TIMELINE
                    download_url: >-
                      https://api.zoom.us/recording/download/e2ed-dlkjgdfkgh-kslsdbsjf1a
                download_access_token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOiJvNEU2WnVydFJQdWpxQVZQNmxoTVpnPT0iLCJleHAiOjE2MjEzMDY3MTR9.AiTsTgso8-g487NROU7oGXsn04W68HdZXrjqR3W-X_s
                password: '123456789'
                participant_audio_files:
                  - id: 6ebb42fb-fce2-4c6d-932d-27229f07e933
                    recording_start: '2021-06-22T05:23:41Z'
                    recording_end: '2021-06-22T05:23:58Z'
                    file_name: Audio only - API1 TA2
                    file_type: M4A
                    file_extension: M4A
                    file_size: 272173
                    play_url: >-
                      https://example.zoomdev.us/rec/play/S9sHV863qengfT4zNYGSE2gUpltTVQOL2cwOjFkyGfVZhOpnONozI_9RVJsfcc-y3iT0ayG7CKrXnGw.yqI3hidFZBHn3LXt
                    download_url: >-
                      https://example.zoomdev.us/rec/download/S9sHV863qengfT4zNYGSE2gUpltTVQOL2cwOjFkyGfVZhOpnONozI_9RVJsfcc-y3iT0ayG7CKrXnGw.yqI3hidFZBHn3LXt
                    status: completed
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings/{meeting Id} > recordings
      summary: Delete meeting recordings
      description: |
        Delete all recording files of a meeting.<br><br>

        **Scopes:** `recording:write:admin` `recording:write`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:
        * Cloud Recording should be enabled on the user's account.<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: action
          in: query
          schema:
            type: string
          description: >-
            The recording delete actions:<br>`trash` - Move recording to
            trash.<br>`delete` - Delete recording permanently.
          example: trash
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/status:
    put:
      tags:
        - meetings/{meeting Id} > recordings
      summary: Recover meeting recordings
      description: >-
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover all deleted [Cloud
        Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        of a specific meeting.<br><br>

        **Scopes**: `recording:write:admin` `recording:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>

        * A Pro user with Cloud Recording enabled.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ' (This can only be one of recover)'
                  example: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/livestream:
    patch:
      tags:
        - meetings/{meeting Id} > livestream
      summary: Update a live stream
      description: >-
        Use this API to update a meeting's live stream information. Zoom allows
        users to [live stream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform.


        **Scopes:** `meeting:write:admin`, `meeting:write`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Meeting host must have a Pro license.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                stream_url:
                  type: string
                  description: (Required) Streaming URL.
                  example: in esse
                stream_key:
                  type: string
                  description: (Required) Stream name and key.
                  example: qui
                page_url:
                  type: string
                  description: (Required) The livestream page URL.
                  example: >-
                    https://oZcoClAktRHpxyofBklYszZaCg.vhrBK-gK-AZYq21qLq0Zq-.hLttt9mSf9TD-ovvVJ7A
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - meetings/{meeting Id} > livestream
      summary: Get live stream details
      description: >+
        Zoom allows users to [live stream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Use this API to get a meeting's live stream
        configuration details such as Stream URL, Stream Key and Page
        URL.<br><br>

        **Prerequisites:**<br>

        * Meeting host must be a licensed user with a Pro or higher plan.<br>

        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the meeting.<br><br>

        **Scopes:** `meeting:read:admin` `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`



      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the meeting.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                stream_url: https://somecompany.com/livestream
                stream_key: Contact It@somecompany.com
                page_url: https://somecompany.com/livestream/123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/livestream/status:
    patch:
      tags:
        - meetings/{meeting Id} > livestream
      summary: Update Live Stream Status
      description: >+
        Zoom allows users to [live stream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Use this API to update the status of a meeting's
        live stream.<br><br>

        **Prerequisites:**<br>

        * Meeting host must have a Pro license.<br>

        **Scopes:** `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` 

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    Update the status of a livestream.


                    The value can be one of the following:<br>

                    `start`: Start a live stream. <br>

                    `stop`: Stop an ongoing live stream. (This can only be one
                    of start,stop)
                  example: start
                settings:
                  type: string
                  description: >-
                    Update the settings of a live streaming session. The
                    settings can only be updated for a live stream that has been
                    stopped. You can not update the settings of an ongoing live
                    stream.
                  example: '{"active_speaker_name":true,"display_name":"reprehenderit"}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}:
    get:
      tags:
        - meetings/{meeting Id}
      summary: Get a meeting
      description: |+
        Retrieve the details of a meeting.<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` 

      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Meeting Occurrence ID. Provide this field to view meeting details of
            a particular occurrence of the [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
          example: Excepteur aute deserunt occaecat ea
        - name: show_previous_occurrences
          in: query
          schema:
            type: boolean
          description: >-
            Set the value of this field to `true` if you would like to view
            meeting details of all previous occurrences of a [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
          example: 'true'
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                agenda: API overview
                created_at: '2019-09-09T15:54:24Z'
                duration: 60
                host_id: ABcdofjdogh11111
                id: 1234555466
                join_url: https://zoom.us/j/1234555466
                settings:
                  alternative_hosts: example@example.com
                  approval_type: 2
                  audio: both
                  auto_recording: local
                  close_registration: false
                  cn_meeting: false
                  enforce_login: false
                  enforce_login_domains: example.com
                  global_dial_in_countries:
                    - US
                  global_dial_in_numbers:
                    - city: New York
                      country: US
                      country_name: US
                      number: +1 000011100
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 6699006833
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 221122112211
                      type: toll
                  host_video: false
                  in_meeting: false
                  join_before_host: true
                  mute_upon_entry: false
                  participant_video: false
                  registrants_confirmation_email: true
                  use_pmi: false
                  waiting_room: false
                  watermark: false
                  registrants_email_notification: true
                start_time: '2019-08-30T22:00:00Z'
                start_url: >-
                  https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ
                status: waiting
                timezone: America/New_York
                topic: My API Test
                type: 2
                uuid: iAABBBcccdddd7A==
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings/{meeting Id}
      summary: Update a meeting
      description: >-
        Use this API to update a meeting's details.


        **Note:** 

        * This API has a rate limit of **100 requests per day**. Because of
        this, a meeting can only be updated for a maximum of **100 times within
        a 24-hour period**. 

        * The `start_time` value **must** be a future date. If the value is
        omitted or a date in the past, the API ignores this value and will
        **not** update any recurring meetings. 

        * If the `start_time` value is a future date, the `recurrence` object is
        **required**.


        **Scopes:** `meeting:write:admin`, `meeting:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_for:
                  type: string
                  description: undefined
                  example: sint deserunt
                topic:
                  type: string
                  description: undefined
                  example: qui exercitation consequat voluptate esse
                type:
                  type: integer
                  description: undefined
                  example: '2'
                pre_schedule:
                  type: boolean
                  description: undefined
                  example: 'false'
                start_time:
                  type: string
                  description: undefined
                  example: '1953-07-24T07:47:14.997Z'
                duration:
                  type: integer
                  description: undefined
                  example: '29183525'
                timezone:
                  type: string
                  description: undefined
                  example: dolore do
                password:
                  type: string
                  description: undefined
                  example: Ex
                agenda:
                  type: string
                  description: undefined
                  example: enim veniam in deserunt nulla
                template_id:
                  type: string
                  description: undefined
                  example: sunt deserunt qui minim
                tracking_fields:
                  type: string
                  description: undefined
                  example: >-
                    [{"field":"non mollit ex officia","value":"aute laborum nisi
                    occaecat"},{"field":"sed incididunt","value":"irure
                    ullamco"}]
                recurrence:
                  type: string
                  description: undefined
                  example: >-
                    {"type":3,"repeat_interval":-5636227,"weekly_days":"1","monthly_day":1,"monthly_week":4,"monthly_week_day":3,"end_times":1,"end_date_time":"1950-10-05T09:58:45.004Z"}
                settings:
                  type: string
                  description: undefined
                  example: >-
                    {"host_video":false,"participant_video":true,"cn_meeting":false,"in_meeting":false,"join_before_host":false,"jbh_time":0,"mute_upon_entry":false,"watermark":false,"use_pmi":false,"approval_type":2,"registration_type":1,"audio":"both","auto_recording":"none","enforce_login":false,"enforce_login_domains":"in
                    culpa Lorem officia cillum","alternative_hosts":"officia
                    sunt amet
                    in","close_registration":false,"waiting_room":false,"global_dial_in_countries":["Ut
                    magna","ut in
                    an"],"global_dial_in_numbers":[{"country":"pariatur nisi
                    laboris aliqua sed","country_name":"iru","city":"adipisicing
                    Ut consequat aliquip","number":"sint
                    elit","type":"tollfree"},{"country":"fugiat eu
                    ","country_name":"cupidatat id reprehenderit","city":"est
                    Duis non fugiat cupidatat","number":"minim sint
                    laborum","type":"tollfree"}],"contact_name":"irure
                    Lorem","contact_email":"amet
                    Lorem","registrants_email_notification":true,"registrants_confirmation_email":false,"meeting_authentication":true,"authentication_option":"elit","authentication_domains":"amet
                    quis fugiat dolore","authentication_name":"Duis
                    ad","show_share_button":true,"allow_multiple_devices":true,"encryption_type":"enhanced_encryption","approved_or_denied_countries_or_regions":{"enable":true,"method":"approve","approved_list":["ut
                    Lorem","ea aute aliqua deserunt"],"denied_list":["sunt ipsum
                    exercitation elit","dolore
                    do"]},"authentication_exception":[{"name":"minim
                    exercitation voluptate
                    laboris","email":"dmO4Cq3Bps-wM@OVOvhqIKZfuZmTOMIwoIgCDX.bclb"},{"name":"exercitation
                    in
                    magna","email":"mRD0H7usVQkA6@zZSvthlllfQegw.xv"}],"breakout_room":{"enable":false,"rooms":[{"name":"dolor
                    laborum","participants":["et consequat","dolore ullamco
                    consequat"]},{"name":"laboris nisi","participants":["esse
                    consectetur fugiat non","veniam ad ea
                    non"]}]},"language_interpretation":{"enable":true,"interpreters":[{"email":"rSv8ckz6TFCF@tfkwkMFgkgYGUdqNZKNbGKMPNOZJ.tjh","languages":"Lorem
                    anim exercitation
                    labore"},{"email":"4wkfPjYjpErc@Jr.re","languages":"pariatur"}]},"custom_keys":[{"key":"aliquip
                    occae","value":"aute eiusmod"},{"key":"ea
                    sunt","value":"adipisicing non
                    consequat"}],"alternative_hosts_email_notification":true}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Meeting occurrence id. Support change of agenda, start_time,
            duration, settings: {host_video, participant_video,
            join_before_host, mute_upon_entry, waiting_room, watermark,
            auto_recording}
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings/{meeting Id}
      summary: Delete a meeting
      description: |+
        Delete a meeting.<br><br>
        **Scopes:** `meeting:write:admin` `meeting:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` 

      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: schedule_for_reminder
          in: query
          schema:
            type: boolean
          description: >-
            `true`: Notify host and alternative host about the meeting
            cancellation via email.

            `false`: Do not send any email notification.
          example: 'true'
        - name: cancel_meeting_reminder
          in: query
          schema:
            type: string
          description: >-
            `true`: Notify registrants about the meeting cancellation via
            email. 


            `false`: Do not send any email notification to meeting registrants. 


            The default value of this field is `false`.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/status:
    put:
      tags:
        - meetings/{meeting Id}
      summary: Update meeting status
      description: |-
        Update the status of a meeting.<br><br>
        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    `end` - End a meeting.<br>

                    `recover` -
                    [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting)
                    a deleted meeting.
                     (This can only be one of end,recover)
                  example: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/invitation:
    get:
      tags:
        - meetings/{meeting Id}
      summary: Get meeting invitation
      description: >+
        Retrieve the meeting invite note that was sent for a specific
        meeting.<br><br>

        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                invitation: "Shrijana G is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: MyTestMeeting\r\nTime: Jul 31, 2019 04:00 PM Pacific Time (US and Canada)\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/000000\r\n\r\nOne tap mobile\r\n+000000"
  /meetings/{meetingId}/batch_registrants:
    post:
      tags:
        - meetings/{meeting Id}
      summary: Perform batch registration
      description: >+
        Register up to 30 registrants at once for a meeting that requires
        [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).
        <br>


        **Prerequisites:**<br>

        * The meeting host must be a Licensed user.

        * The meeting must require registration and should be of type `2`, i.e.,
        they should be scheduled meetings. Instant meetings and Recurring
        meetings are not supported by this API.<br><br>

        **Scope:** `meeting:write`, `meeting:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>







      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                auto_approve:
                  type: boolean
                  description: >-
                    If a meeting was scheduled with approval_type `1` (manual
                    approval), but you would like to automatically approve the
                    registrants that are added via this API, you can set the
                    value of this field to `true`. 


                    You **cannot** use this field to change approval setting for
                    a meeting  that was originally scheduled with approval_type
                    `0` (automatic approval).
                  example: 'true'
                registrants:
                  type: string
                  example: >-
                    [{"first_name":"fugiat minim
                    irur","email":"7Dj42SOtVGjy@dcvtPuj.duo","last_name":"in"},{"first_name":"velit
                    et","email":"UpcEZ0mWLbpBiNm@VidBoWCpLnguTedyubJXryJlOBqMU.temo","last_name":"non
                    enim"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the meeting (Meeting Number).
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrants:
                  - registrant_id: conseret14re
                    email: example@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                  - registrant_id: fdgsfh2ey82fuh
                    email: example-2@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                  - registrant_id: hdsfhjf3iwh
                    email: example-3@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/batch_polls:
    post:
      tags:
        - meetings/{meeting Id}
      summary: Perform batch poll creation
      description: >-
        Polls allow the meeting host to survey attendees. Use this API to create
        batch
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.<br><br>


        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>

        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Meeting Poll Title.
                  example: ut laboris Ut magna d
                questions:
                  type: string
                  example: >-
                    [{"name":"aliquip off","type":"multiple","answers":["irure
                    ","in laboris consectetur"]},{"name":"enim
                    ea","type":"multiple","answers":["Lorem culpa","pariatur"]}]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                polls:
                  - id: ex eiusmod
                    title: in dolore culpa ad qui
                    status: Excepteur Lorem dolor exercitation
                    questions:
                      - name: in mollit cillum adipisicing ullamco
                        type: consectetur magna et
                        answers:
                          - est officia
                          - dolor amet consectetur ad
                          - irure consectetur enim commodo
                      - name: non proident dolor eiusmod consectetur
                        type: 'et deserunt nisi '
                        answers:
                          - ut ut
                          - non pariatur dolore eiusmod consectetur
                          - pariatur deserunt in dolore et
                          - deserunt exercitation incididunt nostrud dolore
                          - dolor sit in laboris eiusmod
                      - name: minim
                        type: velit labore
                        answers:
                          - dolor mollit
                          - dolore Lorem voluptate
                  - id: mollit do
                    title: est incididunt in dolore tempor
                    status: deserunt id occaecat nisi qui
                    questions:
                      - name: exercitation consectetur officia do
                        type: id ex consequat culpa
                        answers:
                          - 'culpa '
                          - aliquip dolore
                      - name: proident ad
                        type: Lorem nostrud nulla
                        answers:
                          - ullamco consequat ut id esse
                          - veniam eiusmod anim laborum
                      - name: sint cillum ut
                        type: in enim
                        answers:
                          - nostrud voluptate eu velit
                          - non labore dolor ad eiusmod
                          - vo
                      - name: eu ullamco
                        type: anim dolor sunt
                        answers:
                          - sunt voluptate
                          - reprehenderit ea
                          - sunt aute
                          - elit
                      - name: sit enim consequat cupidatat
                        type: cillum adipisicing
                        answers:
                          - nulla Duis
                  - id: 'qui '
                    title: ullamco dolore
                    status: ut Ut esse
                    questions:
                      - name: ullamco et pariatur
                        type: proident
                        answers:
                          - laboris laborum
                          - nostrud sit dolore veniam
                          - sunt commodo amet dolor ex
                      - name: adipisicing dolor culpa commodo
                        type: aliquip veniam
                        answers:
                          - anim magna ut Lorem
                      - name: laborum nisi
                        type: in Duis qui Excepteur aute
                        answers:
                          - 'sunt dolor Excepteur amet '
                          - qui pariatur esse id fugiat
                          - aliquip
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/invite_links:
    post:
      tags:
        - meetings/{meeting Id}
      summary: Create meeting's invite links
      description: >-
        Use this API to create a batch of invitation links for a meeting.


        **Scopes**: `meeting:write:admin`, `meeting:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ttl:
                  type: integer
                  description: undefined
                  example: '7200'
                attendees:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"cillum fugiat"},{"name":"magna exercitation
                    tempor"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attendees:
                  - name: Mike Brown
                    join_url: >-
                      https://zoom.us/j/935364234?wp=9a84R6-YFwCCP04ss8PwwImO-3Rm9HSM0RwPn3Ll05WGBEJJDI21846QS-nJuNs7JKcwHTG2VoILGWJkljPTKw.tRxEV0sF4mEBkAaE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingUUID}:
    get:
      tags:
        - past meetings > {meeting UUID}
      summary: Get past meeting details
      description: >-
        Get details on a past meeting. <br><br>

        **Scopes:** `meeting:read:admin` `meeting:read`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
        > **Note**: Please double encode your UUID when using this API if the
        UUID begins with a '/'or contains '//' in it.
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. For example, after a meeting
            ends, a new UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** double-encode the meeting UUID when using
            the meeting UUID for other API calls.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: string [uuid]
                id: integer
                host_id: integer
                type: integer
                topic: string
                user_name: string
                user_email: string
                start_time: string [date-time]
                end_time: string [date-time]
                duration: integer
                total_minutes: integer
                participants_count: integer
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingUUID}/participants:
    get:
      tags:
        - past meetings > {meeting UUID}
      summary: Get past meeting participants
      description: >
        Retrieve information on participants from a past meeting. <br><br>

        **Scopes:** `meeting:read:admin` `meeting:read`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
        **Prerequisites:**<br>

        * Paid account on a Pro or higher plan.


        <br> <br>  **Note**: Please double encode your UUID when using this API
        if the UUID begins with a '/'or contains '//' in it.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. For example, after a meeting
            ends, a new UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** double-encode the meeting UUID when using
            the meeting UUID for other API calls.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_size: 30
                total_records: 1
                next_page_token: aliqua
                participants:
                  - id: 8b29rgg4bb
                    name: Ram Shekhar
                    user_email: example@example.com
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingUUID}/archive_files:
    get:
      tags:
        - past meetings > {meeting UUID}
      summary: Get meeting archived files
      description: >-
        List the archived recording files of the specific meeting instance. For
        more information, read our [Managing archiving of meeting and webinar
        data](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data)
        documentation.


        **Scopes:** `recording:read`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:** 

        * Follow the [enablement
        process](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data#h_01ENPBD3WR68D7FAKTBY92SG45)
        to access the archiving feature.
      parameters:
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. For example, after a meeting
            ends, a new UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** double-encode the meeting UUID when using
            the meeting UUID for other API calls.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: yVaEafxxRN+tiOZUSWKJVw==
                id: 4554919265
                host_id: 7pTFNV2SS0i0LKfQhmMyHQ
                topic: ZOOM_API Test's Personal Meeting Room
                type: 4
                start_time: '2021-04-26T05:23:18Z'
                timezone: Asia/Shanghai
                duration: 1
                total_size: 2676453
                recording_count: 2
                archive_files:
                  - id: 20d04c59-df9a-442b-9a3d-570884bede07
                    file_type: MP4
                    file_extension: MP4
                    file_size: 1434664
                    download_url: >-
                      https://dev-integration.zoomdev.us/rec/archive/download/6M9jB3tTyRaIGfn3QTFHOrBGIAWenAa0KOkj3cqzpAfKYAWNDET4iU_jEpdpwRpGb8urxDMHJuSd11FZ.CDVxKggXL9lh5XPN
                    status: completed
                    recording_type: shared_screen_with_speaker_view
                  - id: 83cc23a5-3a35-44e2-87b3-a2b5a4dac6f8
                    file_type: M4A
                    file_extension: M4A
                    file_size: 1241789
                    download_url: >-
                      https://dev-integration.zoomdev.us/rec/archive/download/NmR_I2KfMtMc6UKq_M3QxLVH2zXtdo3auXCNUyAg-_PC-W4KnNlYb7LUwp3y575FjxAh-uVM8QATnbK3.MOeqVo4UptE8Vj1Z
                    status: completed
                    recording_type: audio_only
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/instances:
    get:
      tags:
        - past meetings > {meeting Id}
      summary: List ended meeting instances
      description: |-
        Get a list of ended meeting instances<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meetings:
                  - uuid: eiusmod Lorem
                    start_time: '1983-05-25T22:40:06.576Z'
                  - uuid: est ea Lorem aute nisi
                    start_time: '1968-11-03T22:10:22.553Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/polls:
    get:
      tags:
        - past meetings > {meeting Id}
      summary: List past meeting's poll results
      description: >-
        [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        allow the meeting host to survey attendees. Use this API to list poll
        results of a meeting.<br><br>


        **Scopes**: `meeting:read:admin`, `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>
        **Prerequisites**:<br>

        * Host user type must be **Pro**.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123456
                uuid: gsdjfhsdfkhjdsf
                start_time: '2019-02-01T12:34:12.660Z'
                title: Learn something new
                questions:
                  - name: Sam S
                    email: example@example.com
                    question_details:
                      - question: How are you?
                        answer: I am wonderful.
  /past_meetings/{meetingId}/files:
    get:
      tags:
        - past meetings > {meeting Id}
      summary: List past meeting's files
      description: >-
        **Note: This API has been deprecated and is no longer supported due to
        GCM encryption updates for security purposes.** To learn about saving
        the in-meeting chat files via Zoom Client, refer to the [Saving
        in-meeting
        chat](https://support.zoom.us/hc/en-us/articles/115004792763-Saving-in-meeting-chat)
        guide.


        List files sent via in-meeting chat during a meeting. The in-meeting
        files are deleted after 24 hours of the meeting completion time. 

        <br><br>

        **Scope:** `meeting:read`, `meeting:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The meeting ID in **long** format. The data type of this
            field is "long"(represented as int64 in JSON).


            While storing it in your database, store it as a **long** data type
            and **not as an integer**, as the Meeting IDs can be longer than 10
            digits.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                in_meeting_files:
                  - file_name: somefile.txt
                    download_url: somefile.txt/randomurl
                    file_size: 300
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}/participants:
    get:
      tags:
        - metrics > meetings > {meeting Id} > participants
      summary: List meeting participants
      description: >-
        Get a list of participants from live or past meetings.<br><br>

        If you do not provide the `type` query parameter, the default value will
        be set to `live` and thus, you will only see metrics for participants in
        a live meeting, if any meeting is currently being conducted. To view
        metrics on past meeting participants, provide the appropriate value for
        `type`. <br> You can specify a monthly date range for the dashboard data
        using the `from` and `to` query parameters. The month should fall within
        the last six months.


        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** Business or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past
            one user meetings.<br>`live` - Live meetings.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            Provide `registrant_id` as the value for this field if you would
            like to see the registrant ID attribute in the response of this API
            call. A registrant ID is a unique identifier of a [meeting
            registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).
            This is not supported for `live` meeting types.
          example: registrant_id
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_size: 30
                total_records: 2
                next_page_token: ''
                participants:
                  - id: d52f19c548b88490b5d16fcbd38
                    user_id: 32dsfsd4g5gd
                    user_name: dojo
                    device: WIN
                    ip_address: 127.0.0.1
                    location: New York
                    network_type: Wired
                    microphone: Plantronics BT600
                    camera: FaceTime HD Camera
                    speaker: Plantronics BT600
                    data_center: SC
                    connection_type: P2P
                    join_time: '2019-09-07T13:15:02.837Z'
                    leave_time: '2019-09-07T13:15:09.837Z'
                    share_application: false
                    share_desktop: true
                    share_whiteboard: true
                    recording: false
                    status: in_waiting_room
                    pc_name: dojo's pc
                    domain: Dojo-workspace
                    mac_addr: ' 00:0a:95:9d:68:16'
                    harddisk_id: sed proident in
                    version: 4.4.55383.0716
                    leave_reason: 'Dojo left the meeting.<br>Reason: Host ended the meeting.'
                  - id: z8aaaaaaCfp8uQ
                    user_id: '1670000000'
                    user_name: Rea
                    device: Android
                    ip_address: 120.000.000
                    location: San Jose (US)
                    network_type: Wifi
                    data_center: SC
                    connection_type: UDP
                    join_time: '2019-08-02T15:31:48Z'
                    leave_time: '2019-08-02T16:04:12Z'
                    share_application: false
                    share_desktop: false
                    share_whiteboard: false
                    recording: false
                    pc_name: Rea's PC
                    domain: Rea-workspace
                    mac_addr: ''
                    harddisk_id: ''
                    version: 4.4.55383.0716
                    leave_reason: 'Rea left the meeting.<br>Reason: Host closed the meeting.'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}/participants/{participantId}/qos:
    get:
      tags:
        - metrics > meetings > {meeting Id} > participants
      summary: Get meeting participant QoS
      description: >-
        Use this API to retrieve the quality of service (QoS) for participants
        from live or past meetings. The data returned indicates the connection
        quality for sending/receiving video, audio, and shared content. The API
        returns this data for either the API request or when the API request was
        last received.


        This API will **not** return data if there is no data being sent or
        received at the time of request.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px">
        <b>Note:</b> When the sender sends its data, a timestamp is attached to
        the sender’s data packet. The receiver then returns this timestamp to
        the sender. This helps determine the upstream and downstream latency,
        which includes the application processing time. The latency data
        returned is the five second average and five second maximum.</p>


        **Scopes:** `dashboard_meetings:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`live` - Live
            Meetings.
          example: live
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
        - name: participantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Participant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                user_id: '1670000000'
                user_name: User
                device: Android
                ip_address: 192.0.2.0
                location: San Jose (US)
                join_time: '2021-06-24T20:00:00Z'
                leave_time: '2021-06-24T20:00:00Z'
                pc_name: User's Phone
                domain: user-android
                mac_addr: ''
                harddisk_id: ''
                version: 4.4.55383.0726
                user_qos:
                  - date_time: '2021-06-24T20:00:00Z'
                    audio_input:
                      bitrate: 23 kbps
                      latency: 126 ms
                      jitter: 6 ms
                      avg_loss: 0.3%
                      max_loss: 1.9%
                    audio_output:
                      bitrate: 63 kbps
                      latency: 134 ms
                      jitter: 6 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                    video_input:
                      bitrate: 1055 kbps
                      latency: 129 ms
                      jitter: 11 ms
                      avg_loss: 0.0%
                      max_loss: 4.9%
                      resolution: 1280*720
                      frame_rate: 12 fps
                    video_output:
                      bitrate: 673 kbps
                      latency: 135 ms
                      jitter: 11 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 640*360
                      frame_rate: 22 fps
                    as_input:
                      bitrate: 70 kbps
                      latency: 135 ms
                      jitter: 8 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 0*0
                      frame_rate: ''
                    as_output:
                      bitrate: 70 kbps
                      latency: 135 ms
                      jitter: 8 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 0*0
                      frame_rate: ''
                    cpu_usage:
                      zoom_min_cpu_usage: 8%
                      zoom_avg_cpu_usage: 12%
                      zoom_max_cpu_usage: 18%
                      system_max_cpu_usage: 40%
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}/participants/qos:
    get:
      tags:
        - metrics > meetings > {meeting Id} > participants
      summary: List meeting participants QoS
      description: >-
        Get a list of meeting participants from live or past meetings along with
        the quality of service they recieve during the meeting such as
        connection quality for sending/receiving video, audio, and shared
        content.<br>If you do not provide the `type` query parameter, the
        default value will be set to `live` and thus, you will only see metrics
        for participants in a live meeting, if any meeting is currently being
        conducted. To view metrics on past meeting participants, provide the
        appropriate value for `type`.<br> <br> You can specify a monthly date
        range for the dashboard data using the `from` and `to` query parameters.
        The month should fall within the last six months.<br><br>

        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>

        * Business or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`live` - Live
            Meetings.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of items returned per page.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer [int64]
                page_size: integer
                total_records: integer [int64]
                next_page_token: string
                participants:
                  - user_id: '1670000000'
                    user_name: User
                    device: Android
                    ip_address: 192.0.2.0
                    location: San Jose (US)
                    join_time: '2021-06-24T20:00:00Z'
                    leave_time: '2021-06-24T20:00:00Z'
                    pc_name: User's Phone
                    domain: user-android
                    mac_addr: ''
                    harddisk_id: ''
                    version: 4.4.55383.0726
                    user_qos:
                      - date_time: '2021-06-24T20:00:00Z'
                        audio_input:
                          bitrate: 23 kbps
                          latency: 126 ms
                          jitter: 6 ms
                          avg_loss: 0.3%
                          max_loss: 1.9%
                        audio_output:
                          bitrate: 63 kbps
                          latency: 134 ms
                          jitter: 6 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                        video_input:
                          bitrate: 1055 kbps
                          latency: 129 ms
                          jitter: 11 ms
                          avg_loss: 0.0%
                          max_loss: 4.9%
                          resolution: 1280*720
                          frame_rate: 12 fps
                        video_output:
                          bitrate: 673 kbps
                          latency: 135 ms
                          jitter: 11 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 640*360
                          frame_rate: 22 fps
                        as_input:
                          bitrate: 70 kbps
                          latency: 135 ms
                          jitter: 8 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 0*0
                          frame_rate: ''
                        as_output:
                          bitrate: 70 kbps
                          latency: 135 ms
                          jitter: 8 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 0*0
                          frame_rate: ''
                        cpu_usage:
                          zoom_min_cpu_usage: 8%
                          zoom_avg_cpu_usage: 12%
                          zoom_max_cpu_usage: 18%
                          system_max_cpu_usage: 40%
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}/participants/sharing:
    get:
      tags:
        - metrics > meetings > {meeting Id} > participants
      summary: Get sharing/recording details
      description: >-
        Retrieve the sharing and recording details of participants from live or
        past meetings.<br>

        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>

        * Business or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`live` - Live
            Meetings.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceed the current page size. The expiration period for this
            token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer
                page_size: integer
                total_records: integer
                next_page_token: string
                participants:
                  - id: string
                    user_id: string
                    user_name: string
                    details:
                      - content: string
                        start_time: string
                        end_time: string
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}/participants/satisfaction:
    get:
      tags:
        - metrics > meetings > {meeting Id} > participants
      summary: Get post meeting feedback
      description: >-
        When a meeting ends, each attendee will be prompted to share their
        meeting experience by clicking either thumbs up or thumbs down. Use this
        API to retrieve the feedback submitted for a specific meeting. Note that
        this API only works for meetings scheduled after December 20, 2020.


        **Prerequisites:**

        * [Feedback to
        Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting
        must be enabled by the participant prior to the meeting.

        * The user making the API request must be enrolled in a Business or a
        higher plan.


        <br> **Scope:** `dashboard_meetings:read:admiin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Specify a value to get the response for the corresponding meeting
            type. The value of this field can be one of the following:<br>
            <br>`past` - Meeting that already occurred in the specified date
            range.<br>`pastOne` - Past meetings that were attended by only one
            user. <br>`live` - Live meetings.<br><br>


            If you do not provide this field, the default value will be `live`
            and thus, the API will only query responses for live meetings.
          example: live
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 1
                next_page_token: ''
                participants:
                  - user_id: aegr46312rum
                    email: example@example.com
                    quality: GOOD
                    date_time: '2021-02-21T18:48:06.423Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings/{meetingId}:
    get:
      tags:
        - metrics > meetings > {meeting Id}
      summary: Get meeting details
      description: >-
        Get details on live or past meetings. This overview will show if
        features such as audio, video, screen sharing, and recording were being
        used in the meeting. You can also see the license types of each user on
        your account.<br> You can specify a monthly date range for the dashboard
        data using the `from` and `to` query parameters. The month should fall
        within the last six months.  <br>

        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>

        * Business or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past
            one user meetings.<br>`live` - Live meetings.
          example: live
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: carreter@-2c9b447f3
                id: 33281536
                topic: My meeting
                host: cool host
                email: example@example.com
                user_type: Pro|Webinar100
                start_time: '2007-06-16T16:55:42.078Z'
                end_time: '2007-06-16T16:59:42.078Z'
                duration: '30:00'
                participants: 4874645
                has_pstn: false
                has_voip: false
                has_3rd_party_audio: false
                has_video: false
                has_screen_share: false
                has_recording: false
                has_sip: false
                has_archiving: false
                in_room_participants: 3
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/meetings:
    get:
      tags:
        - metrics > meetings
      summary: List meetings
      description: >-
        List total live or past meetings that occurred during a specified period
        of time. This overview will show if features such as audio, video,
        screen sharing, and recording were being used in the meeting. You can
        also see the license types of each user on your account.<br> You can
        specify a monthly date range for the dashboard data using the `from` and
        `to` query parameters. The month should fall within the last six
        months.<br>

        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br><br>
        **Prerequisites:** <br>

        * Business or a higher plan.<br><br>
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Specify a value to get the response for the corresponding meeting
            type. The value of this field can be one of the following:<br>
            <br>`past` - Meeting that already occurred in the specified date
            range.<br>`pastOne` - Past meetings that were attended by only one
            user. <br>`live` - Live meetings.<br><br>


            If you do not provide this field, the default value will be `live`
            and thus, the API will only query responses for live meetings.
          example: live
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            Set the value of this field to "tracking_fields" if you would like
            to include tracking fields of each meeting in the response.
          example: tracking_fields
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: string [date]
                to: string [date]
                page_count: integer
                page_size: integer
                total_records: integer
                next_page_token: string
                meetings:
                  - uuid: string [uuid]
                    id: integer
                    topic: string
                    host: string
                    email: string
                    user_type: string
                    start_time: string [date-time]
                    end_time: string [date-time]
                    duration: string
                    participants: integer
                    has_pstn: boolean
                    has_voip: boolean
                    has_3rd_party_audio: boolean
                    has_video: boolean
                    has_screen_share: boolean
                    has_recording: boolean
                    has_sip: boolean
                    has_archiving: boolean
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}/participants:
    get:
      tags:
        - metrics > webinars > {webinar Id} > participants
      summary: Get webinar participants
      description: |+
        Retrieve details on participants from live or past webinars.<br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.

      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >+
            Provide 'registrant_id' as the value for this field if you would
            like to see the registrant ID attribute in the response of this API
            call. A registrant ID is a unique identifier of a [webinar
            registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>

          example: registrant_id
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer
                page_size: integer
                total_records: integer
                next_page_token: string
                participants:
                  - id: string [uuid]
                    user_id: string
                    user_name: string
                    device: string
                    ip_address: string
                    location: string
                    network_type: string
                    microphone: string
                    speaker: string
                    data_center: string
                    connection_type: string
                    join_time: string [date-time]
                    leave_time: string [date-time]
                    share_application: boolean
                    share_desktop: boolean
                    share_whiteboard: boolean
                    recording: boolean
                    pc_name: string
                    domain: string
                    mac_addr: string
                    harddisk_id: string
                    version: string
                    leave_reason: string
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}/participants/{participantId}/qos:
    get:
      tags:
        - metrics > webinars > {webinar Id} > participants
      summary: Get webinar participant QoS
      description: >
        Retrieve details on the quality of service that participants from live
        or past webinars recieved.<br>This data indicates the connection quality
        for sending/receiving video, audio, and shared content. If nothing is
        being sent or received at that time, no information will be shown in the
        fields.<br>

        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>
        **Prerequisites:** <br>

        * Business, Education or API Plan with Zoom Rooms set up.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
        - name: participantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Participant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                user_id: '1670000000'
                user_name: User
                device: Android
                ip_address: 192.0.2.0
                location: San Jose (US)
                join_time: '2021-06-24T20:00:00Z'
                leave_time: '2021-06-24T20:00:00Z'
                pc_name: User's Phone
                domain: user-android
                mac_addr: ''
                harddisk_id: ''
                version: 4.4.55383.0726
                user_qos:
                  - date_time: '2021-06-24T20:00:00Z'
                    audio_input:
                      bitrate: 23 kbps
                      latency: 126 ms
                      jitter: 6 ms
                      avg_loss: 0.3%
                      max_loss: 1.9%
                    audio_output:
                      bitrate: 63 kbps
                      latency: 134 ms
                      jitter: 6 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                    video_input:
                      bitrate: 1055 kbps
                      latency: 129 ms
                      jitter: 11 ms
                      avg_loss: 0.0%
                      max_loss: 4.9%
                      resolution: 1280*720
                      frame_rate: 12 fps
                    video_output:
                      bitrate: 673 kbps
                      latency: 135 ms
                      jitter: 11 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 640*360
                      frame_rate: 22 fps
                    as_input:
                      bitrate: 70 kbps
                      latency: 135 ms
                      jitter: 8 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 0*0
                      frame_rate: ''
                    as_output:
                      bitrate: 70 kbps
                      latency: 135 ms
                      jitter: 8 ms
                      avg_loss: 0.0%
                      max_loss: 0.0%
                      resolution: 0*0
                      frame_rate: ''
                    cpu_usage:
                      zoom_min_cpu_usage: 8%
                      zoom_avg_cpu_usage: 12%
                      zoom_max_cpu_usage: 18%
                      system_max_cpu_usage: 40%
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}/participants/qos:
    get:
      tags:
        - metrics > webinars > {webinar Id} > participants
      summary: List webinar participant QoS
      description: >+
        Retrieve a list of participants from live or past webinars and the
        quality of service they received.<br>This data indicates the connection
        quality for sending/receiving video, audio, and shared content. If
        nothing is being sent or received at that time, no information will be
        shown in the fields.<br>

        **Scopes:** `dashboard_webinars:read:admin`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**

        * Business, Education or API Plan with Webinar add-on.

      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of items returned per page.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer [int64]
                page_size: integer
                total_records: integer [int64]
                next_page_token: string
                participants:
                  - user_id: '1670000000'
                    user_name: User
                    device: Android
                    ip_address: 192.0.2.0
                    location: San Jose (US)
                    join_time: '2021-06-24T20:00:00Z'
                    leave_time: '2021-06-24T20:00:00Z'
                    pc_name: User's Phone
                    domain: user-android
                    mac_addr: ''
                    harddisk_id: ''
                    version: 4.4.55383.0726
                    user_qos:
                      - date_time: '2021-06-24T20:00:00Z'
                        audio_input:
                          bitrate: 23 kbps
                          latency: 126 ms
                          jitter: 6 ms
                          avg_loss: 0.3%
                          max_loss: 1.9%
                        audio_output:
                          bitrate: 63 kbps
                          latency: 134 ms
                          jitter: 6 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                        video_input:
                          bitrate: 1055 kbps
                          latency: 129 ms
                          jitter: 11 ms
                          avg_loss: 0.0%
                          max_loss: 4.9%
                          resolution: 1280*720
                          frame_rate: 12 fps
                        video_output:
                          bitrate: 673 kbps
                          latency: 135 ms
                          jitter: 11 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 640*360
                          frame_rate: 22 fps
                        as_input:
                          bitrate: 70 kbps
                          latency: 135 ms
                          jitter: 8 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 0*0
                          frame_rate: ''
                        as_output:
                          bitrate: 70 kbps
                          latency: 135 ms
                          jitter: 8 ms
                          avg_loss: 0.0%
                          max_loss: 0.0%
                          resolution: 0*0
                          frame_rate: ''
                        cpu_usage:
                          zoom_min_cpu_usage: 8%
                          zoom_avg_cpu_usage: 12%
                          zoom_max_cpu_usage: 18%
                          system_max_cpu_usage: 40%
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}/participants/sharing:
    get:
      tags:
        - metrics > webinars > {webinar Id} > participants
      summary: Get sharing/recording details
      description: >+
        Retrieve the sharing and recording details of participants from live or
        past webinars. <br><br>

        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>
        **Prerequisites:**<br>

        * Business, Education or API Plan with Webinar add-on.

      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceed the current page size. The expiration period for this
            token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: integer
                page_size: integer
                total_records: integer
                next_page_token: string
                participants:
                  - id: string
                    user_id: string
                    user_name: string
                    details:
                      - content: string
                        start_time: string
                        end_time: string
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}/participants/satisfaction:
    get:
      tags:
        - metrics > webinars > {webinar Id} > participants
      summary: Get post webinar feedback
      description: >-
        When a Webinar ends, each attendee will be prompted to share their
        Webinar experience by clicking either thumbs up or thumbs down. Use this
        API to retrieve the feedback submitted for a specific webinar. Note that
        this API only works for meetings scheduled after December 20, 2020.


        **Prerequisites:**

        * [Feedback to
        Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting
        must be enabled by the participant prior to the meeting.

        * The user making the API request must be enrolled in a Business or a
        higher plan.



        <br> **Scope:** `dashboard_webinars:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Specify a value to get the response for the corresponding meeting
            type. The value of this field can be one of the following:<br>
            <br>`past` - Meeting that already occurred in the specified date
            range.<br>`pastOne` - Past meetings that were attended by only one
            user. <br>`live` - Live meetings.<br><br>


            If you do not provide this field, the default value will be `live`
            and thus, the API will only query responses for live meetings.
          example: live
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 1
                next_page_token: ''
                participants:
                  - user_id: aegr46312rum
                    email: example@example.com
                    quality: GOOD
                    date_time: '2021-02-21T18:48:06.423Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars/{webinarId}:
    get:
      tags:
        - metrics > webinars > {webinar Id}
      summary: Get webinar details
      description: |+
        Retrieve details from live or past webinars.<br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.

      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                    "uuid": "CJaaaaaaaEV6A==",
                    "id": 00001,
                    "topic": "MyTestWebinar",
                    "host": "Henry Chao",
                    "email": "hc@sdfdfdsfdfsdf.com",
                    "user_type": "Pro|Webinar1000",
                    "start_time": "2019-07-16T17:14:39Z",
                    "end_time": "2019-07-16T17:26:20Z",
                    "duration": 12,
                    "participants": 1,
                    "has_pstn": false,
                    "has_voip": false,
                    "has_3rd_party_audio": false,
                    "has_video": false,
                    "has_screen_share": false,
                    "has_recording": false,
                    "has_sip": false
                    "has_archiving": false
                }
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/webinars:
    get:
      tags:
        - metrics > webinars
      summary: List webinars
      description: >+
        List all the live or past webinars from a specified period of time.
        <br><br>

        **Scopes:** `dashboard_webinars:read:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Resource-intensive`<br>

        **Prerequisites:**<br>

        * Business, Education or API Plan with Webinar add-on.


      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: The webinar type.
          example: live
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: string [date]
                to: string [date]
                page_count: integer
                page_size: integer
                total_records: integer
                next_page_token: string
                webinars:
                  - uuid: string [uuid]
                    id: integer
                    topic: string
                    host: string
                    email: string
                    user_type: string
                    start_time: string [date-time]
                    end_time: string [date-time]
                    duration: string
                    participants: integer
                    has_pstn: boolean
                    has_voip: boolean
                    has_3rd_party_audio: boolean
                    has_video: boolean
                    has_screen_share: boolean
                    has_recording: boolean
                    has_sip: boolean
                    has_archiving: boolean
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/zoomrooms:
    get:
      tags:
        - metrics > zoomrooms
      summary: List Zoom Rooms
      description: |+
        List information on all Zoom Rooms in an account.<br><br>
        **Scopes:** `dashboard_zr:read:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>
         **Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.


      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 1
                zoom_rooms:
                  - id: EbgjgjhghZY9wh0A
                    room_name: testZoomRoom
                    calendar_name: example.cal
                    email: example@example.com
                    account_type: Work Email
                    status: Offline
                    device_ip: 'Computer : 192.0.2.0'
                    camera: Integrated Webcam
                    microphone: Microphone Array (Realtek Audio)
                    speaker: Speakers / Headphones (Realtek Audio)
                    last_start_time: '2019-08-29T16:37:07Z'
                    issues:
                      - Zoom room is offline
                    health: critical
  /metrics/zoomrooms/{zoomroomId}:
    get:
      tags:
        - metrics > zoomrooms
      summary: Get Zoom Rooms details
      description: >
        The Zoom Rooms dashboard metrics lets you know the type of configuration
        a Zoom room has and details on the meetings held in that room. 


        Use this API to retrieve information on a specific room.<br><br>

        **Scopes:** `dashboard_zr:read:admin`<br> <br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`**Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: zoomroomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Zoom room ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                account_type: Work Email
                calendar_name: testZoomRoom
                camera: Integrated Webcam
                device_ip: 'Computer : 192.0.2.0; Controller : 192.0.2.1'
                email: example@example.com
                health: critical
                id: fdjdsfdYYYYY
                issues:
                  - Zoom room is offline
                last_start_time: '2020-01-30T17:47:47Z'
                live_meeting: {}
                microphone: Microphone Array (Realtek Audio)
                past_meetings:
                  from: '2020-03-01'
                  meetings: []
                  next_page_token: ''
                  page_count: 0
                  page_size: 30
                  to: '2020-03-02'
                  total_records: 0
                room_name: testZoomRoom
                speaker: Speakers / Headphones (Realtek Audio)
                status: Offline
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /metrics/zoomrooms/issues:
    get:
      tags:
        - metrics > zoomrooms
      summary: Get top 25 issues of Zoom Rooms
      description: |+
        Get top 25 issues of Zoom Rooms.<br>
        **Scopes:** `dashboard_zr:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
         **Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.

      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-15'
                to: '2019-09-15'
                total_records: 2
                room_issues:
                  - issue_name: Controller disconnected
                    zoom_rooms_count: 1
                  - issue_name: Controller is not charging
                    zoom_rooms_count: 1
  /metrics/client/feedback:
    get:
      tags:
        - metrics > client > feedback
      summary: List Zoom meetings client feedback
      description: >-
        Retrieve survey results from [Zoom meetings client
        feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf).
        <br> You can specify a monthly date range for the dashboard data using
        the `from` and `to` query parameters. The month should fall within the
        last six months.


        **Prerequisites:**

        * Business or higher account

        * [Feedback to
        Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.


        **Scope:** `account:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2013-03-16'
                to: '2013-04-16'
                total_records: 2
                client_feedbacks:
                  - feedback_id: '53532100000'
                    feedback_name: Poor audio quality.
                    participants_count: 1
                  - feedback_id: '53532100000'
                    feedback_name: They could not hear us.
                    participants_count: 2
  /metrics/client/feedback/{feedbackId}:
    get:
      tags:
        - metrics > client > feedback
      summary: Get zoom meetings client feedback
      description: >-
        Retrieve detailed information on a [Zoom meetings client
        feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf).
        <br> You can specify a monthly date range for the dashboard data using
        the `from` and `to` query parameters. The month should fall within the
        last six months.


        **Prerequisites:**

        * Business or higher account

        * [Feedback to
        Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.


        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`

        `
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          example: Excepteur aute deserunt occaecat ea
        - name: feedbackId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Feedback Detail Id
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2017-09-28'
                to: '2017-10-28'
                page_size: 30
                next_page_token: w7587w4eiyfsudgf
                client_feedback_details:
                  - participant_name: Meghan Styles
                    meeting_id: '3789500000000'
                    time: '2017-10-21T11:35:33.480Z'
                    email: example@example.com
  /metrics/client/satisfaction:
    get:
      tags:
        - metrics > client
      summary: List client meeting satisfaction
      description: >-
        If the [End of Meeting Feedback
        Survey](https://support.zoom.us/hc/en-us/articles/115005855266) option
        is enabled, attendees will be prompted with a survey window where they
        can tap either the **Thumbs Up** or **Thumbs Down** button that
        indicates their Zoom meeting experience. With this API, you can get
        information on the attendees' meeting satisfaction. Specify a monthly
        date range for the query using the from and to query parameters. The
        month should fall within the last six months.


        To get information on the survey results with negative experiences
        (indicated by **Thumbs Down**), use the [Get Zoom Meetings Client
        Feedback
        API](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardclientfeedbackdetail).<br>

        **Scopes:** `dashboard:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: 'The start date for the query in “yyyy-mm-dd” format. '
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: 'The end date for the query in “yyyy-mm-dd” format. '
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-05'
                to: '2019-09-05'
                total_records: 30
                client_satisfaction:
                  - date: '2019-08-05'
                    satisfaction_percent: 100
                    good_count: 5
                    none_count: 0
                    not_good_count: 1
                  - date: '2019-08-06'
                    satisfaction_percent: 100
                    good_count: 0
                    none_count: 0
                    not_good_count: 0
  /metrics/issues/zoomrooms:
    get:
      tags:
        - metrics > issues/zoomrooms
      summary: Get top 25 Zoom Rooms with issues
      description: >-
        Get information on top 25 Zoom Rooms with issues in a month. The month
        specified with the "from" and "to" range should fall within the last six
        months.<br>

        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Business or a higher plan.

        * Zoom Room must be enabled in the account.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '1980-10-13'
                to: '1947-09-06'
                total_records: -4867023
                zoom_rooms:
                  - id: ea minim
                    room_name: tempor labori
                    issues_count: -98613194
                  - id: ullamco iru
                    room_name: Lo
                    issues_count: -56347431
  /metrics/issues/zoomrooms/{zoomroomId}:
    get:
      tags:
        - metrics > issues/zoomrooms
      summary: Get issues of Zoom Rooms
      description: >-
        Get information about the issues that occured on the Top 25 **Zoom Rooms
        with issues** in an acount. <br> You can specify a monthly date range
        for the dashboard data using the `from` and `to` query parameters. The
        month should fall within the last six months.


        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>

        * Business or a higher plan.

        * Zoom Room must be enabled in the account.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: zoomroomId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Zoom room ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-02-28'
                to: '2019-03-28'
                page_count: 1
                page_size: 1
                total_records: 1
                issue_details:
                  - issue: Zoom room is offline
                    time: '2019-03-07T11:17:00.956Z'
  /metrics/crc:
    get:
      tags:
        - metrics
      summary: Get CRC port usage
      description: >-
        A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom
        meeting. 


        Use this API to get the hour by hour CRC Port usage for a specified
        period of time. <aside class='notice'>We will provide the report for a
        maximum of one month. For example, if "from" is set to "2017-08-05" and
        "to" is set to "2017-10-10", we will adjust "from" to
        "2017-09-10".</aside><br><br>

        **Prerequisites:**<br>

        * Business, Education or API Plan.

        * Room Connector must be enabled on the account.<br><br>

        **Scopes:** `dashboard_crc:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-04-03'
                to: '2019-04-04'
                crc_ports_usage:
                  - date_time: '2019-05-01T15:13:39.424Z'
                    crc_ports_hour_usage:
                      - hour: sed
                        max_usage: 8
                        total_usage: 14
  /metrics/im:
    get:
      tags:
        - metrics
      summary: Get IM metrics
      description: >-
        Get
        [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4)
        on how users are utilizing the Zoom Chat client.


        You can specify a monthly date range for the dashboard data using the
        `from` and `to` query parameters. The month should fall within the last
        six months.<p style="background-color:#e1f5fe; color:#000000;
        padding:8px"><b>Deprecated:</b> We will completely deprecate this
        endpoint in a future release. You can continue using this endpoint to
        query data for messages sent <b>before</b> July 1, 2021.</br></br>To get
        metrics on chat messages sent <b>on and after</b> July 1, 2021, use the
        <a
        href="https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardchat">Get
        chat metrics API</a>.</p>


        **Scopes:** `dashboard_im:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Resource-intensive`


        **Prerequisites:**


        * Business or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-04-09'
                to: '2019-05-09'
                page_count: 1
                page_size: 1
                total_records: 1
                users:
                  - user_id: sdfjk393lklrf
                    user_name: culpa ipsum
                    email: example@example.com
                    total_send: 20
                    total_receive: 30
                    group_send: 5
                    group_receive: 5
                    calls_send: 1
                    calls_receive: 5
                    files_send: 3
                    files_receive: 8
                    images_send: 5
                    images_receive: 2
                    voice_send: 0
                    voice_receive: 3
                    videos_send: 1
                    videos_receive: 2
                    emoji_send: 4
                    emoji_receive: 5
  /metrics/chat:
    get:
      tags:
        - metrics
      summary: Get chat metrics
      description: >-
        Get
        [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4)
        for how users are utilizing Zoom Chat to send messages.


        Use the `from` and `to` query parameters to specify a monthly date range
        for the dashboard data. The monthly date range must be within the last
        six months.


        > **Note:** To query chat metrics from July 1, 2021 and later, use this
        endpoint instead of the [Get IM metrics
        API](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardim).


        **Scope:** `dashboard_im:read:admin`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Resource-intensive`


        **Prerequisites:**


        * Business or a higher plan
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-04-09'
                to: '2019-05-09'
                page_size: 1
                next_page_token: ''
                users:
                  - user_id: sdfjk393lklrf
                    user_name: culpa ipsum
                    email: example@example.com
                    total_sent: 20
                    p2p_sent: 30
                    group_sent: 5
                    files_sent: 3
                    text_sent: 8
                    images_sent: 5
                    code_sippet_sent: 2
                    giphys_sent: 2
                    audio_sent: 4
                    video_sent: 5
  /metrics/quality:
    get:
      tags:
        - metrics
      summary: Get meeting quality score
      description: Get the quality scores of a meeting.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /report/users:
    get:
      tags:
        - report > users
      summary: Get active/inactive host reports
      description: >-
        A user is considered to be an active host during the month specified in
        the "from" and "to" range, if the user has hosted at least one meeting
        during this period. If the user didn't host any meetings during this
        period, the user is considered to be inactive.<br>The Active Hosts
        report displays a list of meetings, participants, and meeting minutes
        for a specific time range, up to one month. The month should fall within
        the last six months.<br>The Inactive Hosts report pulls a list of users
        who were not active during a specific period of time. 

        Use this API to retrieve an active or inactive host report for a
        specified period of time. The time range for the report is limited to a
        month and the month should fall under the past six months. <br>You can
        specify the type of report and date range using the query
        parameters.<br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive`
            - Inactive hosts.
          example: inactive
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-14'
                to: '2019-09-14'
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 3
                total_meetings: 2
                total_participants: 10
                total_meeting_minutes: 10
                users:
                  - id: BzBAAAAAAAfprg
                    email: example@example.com
                    user_name: cbcvbvcbvbc
                    type: 1
                    dept: ''
                    meetings: 1
                    participants: 5
                    meeting_minutes: 5
                    last_client_version: 4.4.1242.0623(win)
                    last_login_time: '2019-09-13T16:21:40Z'
                    create_time: '2019-09-13T16:20:30Z'
                  - id: 0CAAAAA6jxcA
                    email: example@example.com
                    user_name: xgdzgdfg
                    type: 1
                    dept: Business
                    meetings: 0
                    participants: 0
                    meeting_minutes: 0
                    last_client_version: 4.4.1242.0623(win)
                    last_login_time: '2019-07-23T00:28:00Z'
                    create_time: '2019-07-23T00:27:34Z'
  /report/users/{userId}/meetings:
    get:
      tags:
        - report > users
      summary: Get meeting reports
      description: >-
        Retrieve
        [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting)
        on past meetings and webinars for a specified time period. The time
        range for the report is limited to a month and the month must fall
        within the past six months.


        Meetings and webinars are returned only if they have two or more unique
        participants.  <br><br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or higher plan.
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past
            one user meetings.
          example: past
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass `me` as the value for userId.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                    "from": "2019-07-14",
                    "to": "2019-08-14",
                    "page_count": 1,
                    "page_size": 30,
                    "total_records": 9,
                    "next_page_token": "",
                    "meetings": [
                        {
                            "uuid": "/lqsAAAA5VBBBw==",
                            "id": 12345,
                            "host_id": "gdfg3434dsssfss",
                            "type": 2,
                            "topic": "MyTestMeetings",
                            "user_name": "Prashant Bhandari",
                            "user_email": "pb@hjdskfhds.fdskhfhds",
                            "start_time": "2019-07-15T23:24:52Z",
                            "end_time": "2019-07-15T23:30:19Z",
                            "duration": 6,
                            "total_minutes": 11,
                            "participants_count": 2
                        },
                        {
                            "uuid": "411bbbbbbcVyw==",
                            "id": 000000,
                            "host_id": "gdfg3434dsssfss",
                            "type": 2,
                            "topic": "My Meeting",
                            "user_name": "Raju Khanal",
                            "user_email": "srhkdjfh@jh.fsadghjm",
                            "start_time": "2019-07-16T17:14:39Z",
                            "end_time": "2019-07-16T17:26:20Z",
                            "duration": 12,
                            "total_minutes": 17,
                            "participants_count": 2
                        }
                    ]
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}:
    get:
      tags:
        - report > meetings/{meeting Id}
      summary: Get meeting detail reports
      description: |-
        Get a detailed report for a past meeting. <br>
        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan.<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: sfsdfsdfc6122222d
                id: 1000000
                type: 2
                topic: Awesome meeting
                user_name: officia
                user_email: example@example.com
                start_time: '2019-07-14T09:05:19.754Z'
                end_time: '2019-08-14T09:05:19.754Z'
                duration: 11
                total_minutes: 11
                participants_count: 4
                tracking_fields:
                  - field: Meeting Purpose
                    value: Sales
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/participants:
    get:
      tags:
        - report > meetings/{meeting Id}
      summary: Get meeting participant reports
      description: >-
        Use this API to return a report of a past meeting with two or more
        participants, including the host.


        To return a report for past meeting with only **one** participant, use
        the [List meeting
        participants](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardmeetingparticipants)
        API.


        **Scopes:** `report:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * Pro or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >+
            Provide `registrant_id` as the value for this field if you would
            like to see the registrant ID attribute in the response of this API
            call. A registrant ID is a unique identifier of a [meeting
            registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).<br>

          example: registrant_id
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_size: '30'
                total_records: '1'
                next_page_token: ''
                participants:
                  - id: dskfjladjskfl
                    user_id: sdfjkldsfdfgdfg
                    name: Riya
                    user_email: example@example.com
                    join_time: '2019-02-01T12:34:12.660Z'
                    leave_time: '2019-03-01T12:34:12.660Z'
                    duration: '20:00'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/polls:
    get:
      tags:
        - report > meetings/{meeting Id}
      summary: Get meeting poll reports
      description: >-
        Retrieve a report of
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        results for a past meeting. <br><br>

        **Scopes:** `report:read:admin`<br>
         
        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>

        **Prerequisites:**<br>

        * Pro or a higher plan.<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID or the meeting UUID.  If a meeting ID is
            provided in the request instead of a UUID, the response will be for
            the latest meeting instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123456
                uuid: gsdjfhsdfkhjdsf
                status: ended
                start_time: '2019-02-01T12:34:12.660Z'
                title: Learn something new
                questions:
                  - name: Sam S
                    email: example@example.com
                    question_details:
                      - question: How are you?
                        answer: I am wonderful.
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}:
    get:
      tags:
        - report > webinars/{webinar Id}
      summary: Get webinar detail reports
      description: >-
        Retrieve a
        [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting)
        containing past webinar details.  <br><br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or higher plan with Webinar add-on.
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: urn4fe6caeb98
                id: 51788617
                type: 5
                topic: My Health Webinar
                user_name: Utfdfdget
                user_email: example@example.com
                start_time: '2019-11-18T03:15:00.056Z'
                end_time: '2019-11-18T03:15:20.056Z'
                duration: 20
                total_minutes: 10
                participants_count: 13
                tracking_fields:
                  - field: Webinar Purpose
                    value: Health awareness
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/participants:
    get:
      tags:
        - report > webinars/{webinar Id}
      summary: Get webinar participant reports
      description: |-
        Get detailed report on each attendee of a webinar.<br><br>
        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with Webinar add-on enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >+
            Enter 'registrant_id' as the value for this field if you would like
            to see the registrant ID attribute included in the response of this
            API call. A registrant ID is a unique identifier of a [webinar
            registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>

          example: registrant_id
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_size: '30'
                total_records: '1'
                next_page_token: ''
                participants:
                  - id: dskfjladjskfl
                    user_id: sdfjkldsfdfgdfg
                    name: Riya
                    user_email: example@example.com
                    join_time: '2019-02-01T12:34:12.660Z'
                    leave_time: '2019-03-01T12:34:12.660Z'
                    duration: '20'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/polls:
    get:
      tags:
        - report > webinars/{webinar Id}
      summary: Get webinar poll reports
      description: >-
        Retrieve a report on past [webinar
        polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or a higher plan with Webinar add-on enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123456
                uuid: gsdjfhsdfkhjdsf
                status: ended
                start_time: '2019-02-01T12:34:12.660Z'
                title: Learn something new
                questions:
                  - name: Sam S
                    email: example@example.com
                    question_details:
                      - question: How are you?
                        answer: I am wonderful.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/qa:
    get:
      tags:
        - report > webinars/{webinar Id}
      summary: Get webinar Q&A report
      description: >-
        The Question & Answer (Q&A) feature for webinars allows attendees to ask
        questions during the webinar and for the panelists, co-hosts and host to
        answer their questions.


        Use this API to retrieve a report on question and answers from past
        webinars. <br><br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or a higher plan with Webinar add-on enabled.
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 14321
                uuid: urgvhge945
                start_time: '2019-02-01T12:34:12.660Z'
                questions:
                  - name: Harry S
                    email: example@example.com
                    question_details:
                      - question: How often will you hold this webinar?
                        answer: Once a month.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/billing:
    get:
      tags:
        - report > billing
      summary: Get billing reports
      description: >-
        Get department billing reports of a Zoom account.


        **Prerequisites:**<br>

        * Pro or a higher account with Department Billing option enabled.
        Contact Zoom Support team for details.


        **Scopes:** `report:read:admin`, `report:master`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                billing_reports:
                  - id: indfhgfhfho
                    start_date: '2020-01-01'
                    end_date: '2020-01-31'
                    total_amount: '1500'
                    tax_amount: '25'
                    type: 0
                  - id: dfhjkdgsds
                    start_date: '2019-12-24'
                    end_date: '2020-01-23'
                    total_amount: '2000'
                    tax_amount: '38'
                    type: 1
                currency: USD
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/billing/invoices:
    get:
      tags:
        - report > billing
      summary: Get billing invoice reports
      description: >-
        Get department billing invoices reports for a specific billing period.
        Provide the `billing_id` of the billing period for which you would like
        to retrieve the invoices for. This ID can be retrieved from **Get
        Billing Reports** API. 


        **Prerequisites:**<br>

        * Pro or a higher account with Department Billing option enabled.
        Contact the Zoom Support team to enable this feature.


        **Scopes:** `report:read:admin`, `report:master`

         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: billing_id
          in: query
          schema:
            type: string
          description: >+
            Unique Identifier of the Billing Report. Retrieve this ID from the
            response of **Get Billing Reports** API request. 

          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                invoices:
                  - invoice_number: '1234665'
                    invoice_charge_name: Audio Conferencing Options
                    quantity: 5
                    total_amount: '150000'
                    tax_amount: '1000'
                    start_date: '2019-12-12'
                    end_date: '2020-01-12'
                currency: USD
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/chat/sessions:
    get:
      tags:
        - report > chat/sessions
      summary: Get chat sessions reports
      description: >-
        Use this API to get Zoom Chat session reports for a specified period of
        time. The monthly date range **must** be within the last six months.


        **Scopes:** `report_chat:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`


        **Prerequisites:** 

        * A Pro or higher plan 

        * Report chat permissions.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-31'
                to: '2019-09-12'
                page_size: 30
                next_page_token: vsdfjesfdhs
                sessions:
                  - id: dkhfgjd
                    type: Group
                    name: API overview meeting
                    last_message_sent_time: '2016-12-16T05:04:08.470Z'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/chat/sessions/{sessionId}:
    get:
      tags:
        - report > chat/sessions
      summary: Get chat messages reports
      description: >-
        Use this API to get Zoom Chat message reports for a specified period of
        time. The monthly date range must be within the last six months.


        **Scopes:** `report_chat:read:admin`<br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`


        **Prerequisites:** 

        * A Pro or higher plan 

        * Report chat permissions
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            Return all edited and deleted messages. The API only returns this
            value if the `include_fields` query parameter contains the
            `edited_messages` and/or the `deleted_messages` values.


            To include **both** edited and deleted messages, comma-separate both
            values.
          example: edited_messages
        - name: sessionId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Chat session ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: string [date]
                to: string [date]
                page_size: integer
                next_page_token: string
                messages:
                  - id: 0fbd238a0519d3abb0e4ce
                    message: I am good.
                    sender: user@example.com
                    date_time: '2019-09-17T20:25:17Z'
                    reply_main_message_id: '{52400403-DA96-4D7B-9E05-C1C399FF0725}'
                    reply_main_message_timestamp: '1568751917976'
                edited_messages:
                  - id: 0fbd238a0519d3abb0e4ce
                    message: I am good.
                    sender: user@example.com
                    date_time: '2019-09-17T20:25:17Z'
                    reply_main_message_id: '{52400403-DA96-4D7B-9E05-C1C399FF0725}'
                    reply_main_message_timestamp: '1568751917976'
                deleted_messages:
                  - id: 0fbd238a0519d3abb0e4ce
                    message: I am good.
                    sender: user@example.com
                    date_time: '2019-09-17T20:25:17Z'
                    reply_main_message_id: '{52400403-DA96-4D7B-9E05-C1C399FF0725}'
                    reply_main_message_timestamp: '1568751917976'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/daily:
    get:
      tags:
        - report
      summary: Get daily usage report
      description: >-
        Retrieve daily report to access the account-wide usage of Zoom services
        for each day in a given month. It lists the number of new users,
        meetings, participants, and meeting minutes.<br>

        **Prerequisites**<br>

        * Pro or higher plan.<br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: year
          in: query
          schema:
            type: number
          description: Year for this report
          example: '-17728915'
        - name: month
          in: query
          schema:
            type: number
          description: Month for this report
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                year: 2019
                month: 6
                dates:
                  - date: '2019-06-01'
                    new_users: 3
                    meetings: 10
                    participants: 20
                    meeting_minutes: 100
                  - date: '2019-06-02'
                    new_users: 0
                    meetings: 20
                    participants: 80
                    meeting_minutes: 200
                  - date: '2019-06-03'
                    new_users: 10
                    meetings: 35
                    participants: 100
                    meeting_minutes: 380
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/telephone:
    get:
      tags:
        - report
      summary: Get telephone reports
      description: >-
        The [telephone
        report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports)
        allows you to view who dialed into meetings via phone (Audio
        Conferencing or SIP Connected Audio) and which number they dialed into
        and other details. Use this API to get telephone report for a specified
        period of time.


        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>**Prerequisites:**<br>
        * Pro or higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: type
          in: query
          schema:
            type: integer
          description: >-
            Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll
            <br>

            `3` - SIP Connected Audio
          example: '1'
        - name: query_date_type
          in: query
          schema:
            type: string
          description: >-
            Date types:<br>`start_time` - Query by call start
            time.<br>`end_time` - Query by call end time.
          example: start_time
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                  "from": "2019-06-20",
                  "to": "2019-07-20",
                  "page_count": 1,
                  "page_number": 1,
                  "page_size": 30,
                  "total_records": 1,
                  "telephony_usage": [
                    {
                      "meeting_id": 00000,
                      "phone_number": "000002001",
                      "host_name": "minim c",
                      "host_email": "example@example.com",
                      "dept": "Billing",
                      "start_time": "2019-07-15T23:24:52Z",
                      "end_time": "2019-07-15T23:30:19Z",
                      "duration": 6,
                      "total": 11,
                      "country_name": "nulla laboris cillum",
                      "meeting_type": "voluptate",
                      "call_in_number": "occaecat et reprehenderit"
                    }
                  ]
                }
  /report/cloud_recording:
    get:
      tags:
        - report
      summary: Get cloud recording usage report
      description: >-
        Retrieve cloud recording usage report for a specified period. You can
        only get cloud recording reports that is one day ealier than the current
        date and for the most recent period of 6 months. The date gap between
        from and to dates should be smaller or equal to 30 days. <br>

        **Prerequisites**<br>

        * Pro or higher plan.<br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-09-14'
                to: '2019-09-14'
                cloud_recording_storage:
                  - date: '2019-09-14'
                    usage: 29 MB
                    plan_usage: '0'
                    free_usage: 1 GB
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/operationlogs:
    get:
      tags:
        - report
      summary: Get operation logs report
      description: >-
        The [Operations
        Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs)
        report allows you to audit admin and user activity, such as adding a new
        user, changing account settings, and deleting recordings.<br>

        Use this API to retrieve operation logs report for a specified period of
        time.<br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>

        * Pro or higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the "from" and "to" parameters should only be one month as the
            report includes only one month worth of data at once.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: category_type
          in: query
          schema:
            type: string
          description: >-
            **Optional**<br>

            Filter your response by a category type to see reports for a
            specific category.

            The value for this field can be one of the following:<br>
            `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`
          example: billing
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2019-08-14'
                to: '2019-09-14'
                page_size: 30
                next_page_token: czxcxdvxvddc
                operation_logs:
                  - time: '2019-08-20T19:09:01Z'
                    operator: someuser@sfksfhksdfsf.com
                    category_type: User
                    action: Update
                    operation_detail: 'Activate User sjkfhdsf@jdfgkhgd.com '
                  - time: '2019-08-20T18:59:56Z'
                    operator: anotheruser@sfhidshfidshufds.com
                    category_type: User
                    action: Update
                    operation_detail: 'Deactivate User mynewemail@jdfkdshfhjdsf.ffasdm '
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/activities:
    get:
      tags:
        - report
      summary: Get sign In / sign out activity report
      description: >-
        Retrieve a list of sign in / sign out activity logs
        [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports)
        of users under a Zoom account.<br>

        **Prerequisites**<br>

        * Pro or higher plan.<br>

        **Scopes:** `report:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for which you would like to view the activity logs
            report. Using the `from` and `to` parameters, specify a monthly date
            range for the report as the API only provides one month worth of
            data in one request. The specified date range should fall within the
            last six months.
          example: '1965-05-02'
        - name: to
          in: query
          schema:
            type: string
          description: >-
            End date up to which you would like to view the activity logs
            report.
          example: '1965-05-02'
        - name: page_size
          in: query
          schema:
            type: number
          description: The number of records to be returned within a single API call
          example: '-17728915'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: Next page token is used to paginate through large result sets
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: |-
                {
                            "email": "sfkjsldfhjdsf@dskjflhdsf.com",
                            "time": "2019-09-15T20:56:09Z",
                            "type": "Sign in",
                            "ip_address": "38.99.100.6",
                            "client_type": "Browser",
                            "version": "-"
                        },
                        {
                            "email": "dfdsfdfdf@gidfdfdl.com",
                            "time": "2019-09-15T19:13:41Z",
                            "type": "Sign in",
                            "ip_address": "38.99.100.6",
                            "client_type": "Browser",
                            "version": "-"
                        },
                        {
                            "email": "fdfdfdf@gfdgfdgdsfg.com",
                            "time": "2019-09-15T18:50:15Z",
                            "type": "Sign out",
                            "ip_address": "38.99.100.6",
                            "client_type": "Browser",
                            "version": "-"
                        }
  /roles/{roleId}/members:
    get:
      tags:
        - roles > {role Id} > members
      summary: List members in a role
      description: >-
        User
        [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        can have a set of permissions that allows access only to the pages a
        user needs to view or edit. Use this API to list all the members that
        are assigned a specific role.


        **Scope:** `role:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>**Prerequisites:**<br>
        * A Pro or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: page_count
          in: query
          schema:
            type: string
          description: The number of pages returned for this request.
          example: Excepteur aute deserunt occaecat ea
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The role ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 1
                members:
                  - id: zadksadjBBBBBBB8uQ
                    email: example@example.com
                    first_name: Taylor
                    last_name: Gomez
                    type: 2
                    department: Chemistry
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - roles > {role Id} > members
      summary: Assign a role
      description: >-
        User
        [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        can have a set of permissions that allows access only to the pages a
        user needs to view or edit. Use this API to [assign a
        role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control#h_748b6fd8-5057-4cf4-bbfd-787909c09db0)
        to members.


        **Scopes:** `role:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**<br>

        * A Pro or a higher plan.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: string
                  description: >-
                    Array of userId/user email of users to whom you would like
                    to assign this role. Upto 30 users can be assigned a role at
                    once.
                  example: >-
                    [{"id":"reprehenderit dolore
                    ut","email":"VgmtL9ciL8pSPmB@iDcQsBYCYfyknoTpCoImBtlsE.txr"},{"id":"sed
                    id
                    reprehenderit","email":"tfZ1BA1ufzdCzB4@VDffKlcbfUoLazkIwlG.kx"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The role ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: vol
                add_at: '1975-10-10T18:04:47.668Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /roles/{roleId}/members/{memberId}:
    delete:
      tags:
        - roles > {role Id} > members
      summary: Unassign a role
      description: >-
        User
        [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        can have a set of permissions that allows access only to the pages a
        user needs to view or edit. Use this API to unassign a user's role.


        **Scope:** `role:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>

        * A Pro or a higher plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The role ID
          example: Excepteur aute deserunt occaecat ea
        - name: memberId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Member's ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /roles/{roleId}:
    get:
      tags:
        - roles > {role Id}
      summary: Get role information
      description: >-
        Each Zoom user automatically has a role which can either be owner,
        administrator, or a member. Account Owners and users with edit
        privileges for Role management can add customized roles with a list of
        privileges.


        Use this API to get information including specific privileges assigned
        to a
        [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control).<br>

        **Pre-requisite:**<br>

        * A Pro or higher plan.<br>

        * For role management and updates, you must be the Account Owner or user
        with role management permissions.


        **Scopes:** `role:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) Role Id. '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: eiusmod consectetur
                name: eu exercitation dolor pariatur
                description: ipsum fugiat
                total_members: -654442
                privileges:
                  - magna quis ex non incididunt
                  - minim dolor proident
                sub_account_privileges:
                  second_level: -74319314
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - roles > {role Id}
      summary: Update role information
      description: >-
        Each Zoom user automatically has a
        [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        which can either be owner, administrator, or a member. Account Owners
        and users with edit privileges for Role management can add customized
        roles with a list.


        Use this API to change the privileges, name and description of a
        specific role.<br>

        **Pre-requisite:**<br>

        * A Pro or higher plan.<br>

        * For role management and updates, you must be the Account Owner or user
        with role management permissions.<br>**Scopes:** `role:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Role Id.
                  example: cupidatat do aute
                name:
                  type: string
                  description: Name of the role.
                  example: eu Lorem
                description:
                  type: string
                  description: Description of the role.
                  example: eiusmod
                total_members:
                  type: integer
                  description: Total members assigned to that role.
                  example: '71570761'
                privileges:
                  type: string
                  description: >
                    Privileges assigned to the role. Can be one or a combination
                    of [these
                    permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
                  example: '["ut nost","proident ullamco"]'
                sub_account_privileges:
                  type: string
                  description: >-
                    This field will only be displayed to accounts that are
                    enrolled in the partner plan and follow master accounts and
                    sub accounts structure.
                  example: '{"second_level":-91524187}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Role Id
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - roles > {role Id}
      summary: Delete a role
      description: >-
        Each Zoom user automatically has a role which can either be owner,
        administrator, or a member. Account Owners and users with edit
        privileges for Role management can add customized roles with a list.


        Use this API to delete a role.<br>

        **Pre-requisite:**<br>

        * A Pro or higher plan.<br>

        * For role management and updates, you must be the Account Owner or user
        with role management permissions.


        **Scopes:** `role:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: roleId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Role Id.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /roles:
    get:
      tags:
        - roles
      summary: List roles
      description: >-
        List
        [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
        on your account


        **Scopes:** `role:read:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites** :

        *  Pro or higher plan. 

        *  For setting the initial role, you must be the Account Owner. 

        *  For subsequent role management, you must be the Account Owner or user
        with role management permissions.
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 3
                roles:
                  - id: '0'
                    name: Owner
                    description: >-
                      Account owner has full privileges to access and manage a
                      Zoom account.
                    total_members: 1
                  - id: '1'
                    name: Admin
                    description: >-
                      Admins have wide range privileges to access and manage a
                      Zoom account.
                    total_members: 0
                  - id: '2'
                    name: Member
                    description: >-
                      Members have access to basic Zoom video meeting functions
                      but no account management privileges.
                    total_members: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - roles
      summary: Create a role
      description: >-
        Each Zoom user automatically has a role which can either be owner,
        administrator, or a member. 


        **Pre-requisite:**<br>

        * Pro or higher plan.

        * For setting the initial role, you must be the Account Owner.<br>

        * For subsequent role management, you must be the Account Owner or user
        with role management permissions.<br>

        **Scopes:** `role:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the role.
                  example: Lorem ad ut
                description:
                  type: string
                  description: Description of the role.
                  example: elit amet
                privileges:
                  type: string
                  description: >-
                    Privileges assigned to the role. Can be one or a combination
                    of [these
                    permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
                  example: '["laboris ea irure","est officia veniam"]'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: amet dolore cupidatat
                name: Lorem culpa sed sit
                description: in sunt nisi
                total_members: 8779756
                privileges:
                  - exercitation Lorem
                  - Lorem
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tsp:
    get:
      tags:
        - tsp
      summary: Get account's TSP information
      description: >-
        Get information on Telephony Service Provider on an account
        level.<br><br>

        **Scopes:** `tsp:read:admin` <br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

        **Prerequisites:**<br>

        * A Pro or a higher plan.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tsp_provider: someprovidername
                enable: true
                dial_in_numbers:
                  - code: '111'
                    number: '000000000'
                    type: toll
                tsp_enabled: true
                master_account_setting_extended: false
                modify_credential_forbidden: true
                dial_in_number_unrestricted: false
                tsp_bridge: string
    patch:
      tags:
        - tsp
      summary: Update account's TSP information
      description: >
        Update information of the Telephony Service Provider set up on an
        account.<br>

        **Prerequisites**:<br>

        TSP account option should be enabled.<br>

        **Scopes:** `tsp:write:admin`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                tsp_provider:
                  type: string
                  description: 3rd party audio conferencing provider
                  example: deserunt labor
                enable:
                  type: boolean
                  description: Enable 3rd party audio conferencing for account users
                  example: 'true'
                tsp_enabled:
                  type: boolean
                  description: >-
                    Enable TSP feature for account. This has to be enabled to
                    use any other tsp settings/features.
                  example: 'false'
                master_account_setting_extended:
                  type: boolean
                  description: >-
                    For master account, extend its TSP setting to all sub
                    accounts. For sub account, extend TSP setting from master
                    account.
                  example: 'true'
                modify_credential_forbidden:
                  type: boolean
                  description: >-
                    Control restriction on account users being able to modify
                    their TSP credentials.
                  example: 'true'
                dial_in_number_unrestricted:
                  type: boolean
                  description: >-
                    Control restriction on account users adding a TSP number
                    outside of account's dial in numbers.
                  example: 'true'
                tsp_bridge:
                  type: string
                  description: >-
                    Telephony bridge (This can only be one of
                    US_TSP_TB,EU_TSP_TB)
                  example: US_TSP_TB
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/panelists:
    get:
      tags:
        - webinars/{webinar Id} > panelists
      summary: List panelists
      description: >-
        Panelists in a Webinar can view and send video, screen share, annotate,
        etc and do much more compared to attendees in a Webinar. 


        Use this API to list all the panelists of a Webinar.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**<br>

        * Pro or a higher plan with [Webinar
        Add-on](https://zoom.us/webinar).<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: '2'
                panelists:
                  - name: Mary
                    email: example@example.com
                  - name: Mike
                    email: example-2@example.com
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars/{webinar Id} > panelists
      summary: Add panelists
      description: >-
        Panelists in a Webinar can view and send video, screen share, annotate,
        etc and do much more compared to attendees in a webinar.<br>Use this API
        to [add
        panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70)
        to a scheduled webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>


        **Prerequisites:**

        * Pro or a higher plan with [Webinar
        Add-on](https://zoom.us/webinar).<br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                panelists:
                  type: string
                  description: List of panelist objects.
                  example: >-
                    [{"name":"consectetur magna Excepteur nostrud
                    veniam","email":"W-HF67I@fYfNMQ.knys"},{"name":"Excepteur
                    dolore","email":"MbY7XUmvlJr@hx.jn"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: doetwerggrlor
                updated_at: '2019-01-25T10:04:27.051Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars/{webinar Id} > panelists
      summary: Remove panelists
      description: >-
        Remove all the panelists from a Webinar.<br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>

        * Pro or a higher plan with [Webinar
        Add-on](https://zoom.us/webinar).<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/panelists/{panelistId}:
    delete:
      tags:
        - webinars/{webinar Id} > panelists
      summary: Remove a panelist
      description: >-
        [Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb)
        a single panelist from a webinar.<br> You can retrieve the `panelistId`
        by calling **List Panelists API**.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>


        **Prerequisites:**<br>

        * Pro or a higher plan with [Webinar
        Add-on](https://zoom.us/webinar).<br>
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
        - name: panelistId
          in: path
          schema:
            type: number
          required: true
          description: (Required) The panelist ID or panelist email.
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/questions:
    get:
      tags:
        - webinars/{webinar Id} > registrants > questions
      summary: List registration questions
      description: >+
        Scheduling a [Webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form with fields and
        questions before they can receive the link to join the Webinar.<br>Use
        this API to list registration questions and fields that are to be
        answered by users while registering for a Webinar.<br>

        **Prerequisites:**<br>  

        * Pro or higher plan with a Webinar Add-on.

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                questions:
                  - field_name: string
                    required: boolean
                custom_questions:
                  - title: string
                    type: string
                    required: boolean
                    answers:
                      - array of answer choices
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars/{webinar Id} > registrants > questions
      summary: Update registration questions
      description: >+
        Scheduling a [Webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form with fields and
        questions before they can receive the link to join the Webinar.<br>Use
        this API to update registration questions and fields of a scheduled
        Webinar that are to be answered by users while registering for a
        Webinar.<br><br>

        **Prerequisites:**<br>  

        * Pro or higher plan with a Webinar Add-on.

        * Registration option for Webinar should be set as required to use this
        API. 

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"field_name":"phone","required":true},{"field_name":"last_name","required":true}]
                custom_questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"title":"pariatur sunt id officia
                    consectetur","type":"multiple","required":true,"answers":["anim
                    voluptate","quis id sit"]},{"title":"sed sunt
                    ex","type":"single_dropdown","required":false,"answers":["cillum
                    incididu","reprehenderit officia nostrud amet"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/{registrantId}:
    get:
      tags:
        - webinars/{webinar Id} > registrants > {registrant Id}
      summary: Get a webinar registrant
      description: >-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing Webinars. Webinar allows a host to broadcast a
        Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the Webinar.<br>Use this API to get details on a specific
        user who has registered for the Webinar.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>

        * The account must have a Webinar plan.
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_number: '1'
                page_size: '30'
                total_records: '1'
                registrants:
                  - id: '24000002122'
                    email: example@example.com
                    first_name: Jill
                    last_name: Chill
                    address: 1800 Amphibious Blvd.
                    city: Mountain View
                    country: US
                    zip: '94045'
                    state: CA
                    phone: '5550100'
                    industry: Food
                    org: Cooking Org
                    job_title: Chef
                    purchasing_time_frame: 1-3 months
                    role_in_purchase_process: Influencer
                    no_of_employees: '10'
                    comments: Looking forward to the Webinar
                    custom_questions:
                      - title: What do you hope to learn from this Webinar?
                        value: >-
                          Look forward to learning how you come up with new
                          recipes and what other services you offer.
                    status: approved
                    create_time: '2019-02-26T23:01:16.899Z'
                    join_url: https://zoom.us/webinar/mywebinarissocooldighdghodghodg
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars/{webinar Id} > registrants > {registrant Id}
      summary: Delete a webinar registrant
      description: |-
        Delete a webinar registrant.<br><br>
        **Scopes**: `webinar:write:admin` `webinar:write`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The webinar occurence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: (Required) The webinar ID.
          example: '-17728915'
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants:
    get:
      tags:
        - webinars/{webinar Id} > registrants
      summary: List webinar registrants
      description: >+
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing Webinars. Webinar allows a host to broadcast a
        Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the Webinar.<br>

        Use this API to list all the users that have registered for a
        webinar.<br><br>

        **Prerequisites:**

        * Pro or higher plan with a Webinar Add-on.<br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The registrant status:<br>`pending` - Registrant's status is
            pending.<br>`approved` - Registrant's status is
            approved.<br>`denied` - Registrant's status is denied.
          example: approved
        - name: tracking_source_id
          in: query
          schema:
            type: string
          description: >-
            The tracking source ID for the registrants. Useful if you share the
            webinar registration page in multiple locations. See [Creating
            source tracking links for webinar
            registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration)
            for details.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-

            **Deprecated** - This field has been deprecated and we will stop
            supporting it completely in a future release. Please use
            "next_page_token" for pagination instead of this field.


            The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: '1'
                page_number: '1'
                page_size: '30'
                total_records: '1'
                registrants:
                  - id: '24000002122'
                    email: example@example.com
                    first_name: Jill
                    last_name: Chill
                    address: 1800 Amphibious Blvd.
                    city: Mountain View
                    country: US
                    zip: '94045'
                    state: CA
                    phone: '5550100'
                    industry: Food
                    org: Cooking Org
                    job_title: Chef
                    purchasing_time_frame: 1-3 months
                    role_in_purchase_process: Influencer
                    no_of_employees: '10'
                    comments: Looking forward to the Webinar
                    custom_questions:
                      - title: What do you hope to learn from this Webinar?
                        value: >-
                          Look forward to learning how you come up with new
                          recipes and what other services you offer.
                    status: approved
                    create_time: '2019-02-26T23:01:16.899Z'
                    join_url: https://zoom.us/webinar/mywebinarissocooldighdghodghodg
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars/{webinar Id} > registrants
      summary: Add a webinar registrant
      description: >-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing Webinars. Webinar allows a host to broadcast a
        Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the Webinar.<br>Use this API to create and submit the
        registration of a user for a webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**

        * Pro or higher plan with a Webinar Add-on.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: consequat esse i
                first_name:
                  type: string
                  example: labore
                last_name:
                  type: string
                  example: consequat exercitatio
                address:
                  type: string
                  example: ex eiusmod officia id et
                city:
                  type: string
                  example: dolor sit culpa
                country:
                  type: string
                  example: et consequat cillum reprehenderit
                zip:
                  type: string
                  example: Ut id proident eu
                state:
                  type: string
                  example: do nulla dolor voluptate
                phone:
                  type: string
                  example: Du
                industry:
                  type: string
                  example: elit sed
                org:
                  type: string
                  example: dolor in consectetur anim
                job_title:
                  type: string
                  example: anim enim occaecat
                purchasing_time_frame:
                  type: string
                  example: sit
                role_in_purchase_process:
                  type: string
                  example: laboris sed deserunt enim
                no_of_employees:
                  type: string
                  example: adipisicing Ut enim qui laboru
                comments:
                  type: string
                  example: anim ea quis velit
                custom_questions:
                  type: string
                  example: >-
                    [{"title":"cupidatat ipsum laborum consequat
                    pariatur","value":"adipisicing ipsum velit
                    magna"},{"title":"elit","value":"nulla reprehenderit eu id
                    dolore"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_ids
          in: query
          schema:
            type: string
          description: >-
            Occurrence ID. Get this value from the webinar get API. Multiple
            values separated by a comma.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrant_id: culpa deserunt ea est commodo
                id: velit dolore minim Ut
                topic: et laboris Lorem in Ut
                start_time: '1974-02-26T23:01:16.899Z'
                join_url: pariatur
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/status:
    put:
      tags:
        - webinars/{webinar Id} > registrants
      summary: Update registrant's status
      description: >+
        Update a webinar registrant's status. Using this API, you can specify
        whether you want to approve a registration, deny a registration or
        cancel a previously approved registration.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    (Required) Used to approve a registrant, deny a registrant,
                    or cancel a previously approved registrant.  (This can only
                    be one of approve,cancel,deny)
                  example: cancel
                registrants:
                  type: string
                  description: List of registrants.
                  example: >-
                    [{"id":"culpa voluptate eu et
                    sit","email":"adipisicing"},{"id":"in magna
                    exercitation","email":"in"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/polls/{pollId}:
    get:
      tags:
        - webinars/{webinar Id} > polls > {poll Id}
      summary: Get a webinar poll
      description: >+
        Get a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        details.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: cdjfhdsdfd
                status: ended
                title: Learn something new
                questions:
                  - name: How are you?
                    type: multiple
                    answers:
                      - Good
                      - Not so good
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - webinars/{webinar Id} > polls > {poll Id}
      summary: Update a webinar poll
      description: >+
        Update a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: undefined
                  example: labore voluptate dolore id
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"minim cupidatat nisi
                    voluptate","type":"single","answers":["esse in","minim
                    laboris dolor"]},{"name":"sint sit
                    ","type":"single","answers":["Ut sint","cillum"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars/{webinar Id} > polls > {poll Id}
      summary: Delete a webinar poll
      description: >+
        Delete a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: Excepteur aute deserunt occaecat ea
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/polls:
    get:
      tags:
        - webinars/{webinar Id} > polls
      summary: "List a webinar's polls "
      description: >+
        List all the
        [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        of a Webinar.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: cdjfhdsdfd
                status: ended
                title: Learn something new
                questions:
                  - name: How are you?
                    type: multiple
                    answers:
                      - Good
                      - Not so good
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars/{webinar Id} > polls
      summary: Create a webinar's poll
      description: >+
        Create a
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        for a webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: undefined
                  example: labore voluptate dolore id
                questions:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"minim cupidatat nisi
                    voluptate","type":"single","answers":["esse in","minim
                    laboris dolor"]},{"name":"sint sit
                    ","type":"single","answers":["Ut sint","cillum"]}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: cdjfhdsdfd
                status: ended
                title: Learn something new
                questions:
                  - name: How are you?
                    type: multiple
                    answers:
                      - Good
                      - Not so good
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/livestream:
    patch:
      tags:
        - webinars/{webinar Id} > livestream
      summary: Update a live stream
      description: >+
        Zoom allows users to [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Use this API to update a webinar's live stream
        information.<br><br>

        **Prerequisites:**<br>

        * Pro or higher plan with a Webinar Add-on.<br>

        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                stream_url:
                  type: string
                  description: (Required) The webinar live stream URL.
                  example: commodo
                stream_key:
                  type: string
                  description: (Required) The webinar live stream name and key.
                  example: dolore enim in irure
                page_url:
                  type: string
                  description: (Required) The webinar live stream page's URL.
                  example: http://IA.ljsTRADAMA
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - webinars/{webinar Id} > livestream
      summary: Get live stream details
      description: >+
        Zoom allows users to [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Use this API to get a webinar's live stream
        configuration details such as Stream URL, Stream Key and Page
        URL.<br><br>

        **Prerequisites:**<br>

        * Pro or higher plan with a Webinar Add-on.<br>

        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`



      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's unique ID.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                stream_url: https://somecompany.com/livestream
                stream_key: Contact It@somecompany.com
                page_url: https://somecompany.com/livestream/123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/livestream/status:
    patch:
      tags:
        - webinars/{webinar Id} > livestream
      summary: Update Live Stream Status
      description: >+
        Zoom allows users to [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Use this API to update the status of a webinar's
        live stream.<br><br>

        **Prerequisites:**<br>

        * Pro or higher plan with a Webinar Add-on.<br>

        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` 

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: >-
                    Update the status of a livestream. This value can be one of
                    the following:


                    * `start` — Start a webinar live stream.


                    * `stop` — Stop an ongoing webinar live stream. (This can
                    only be one of start,stop)
                  example: stop
                settings:
                  type: string
                  description: >-
                    Update the live stream session's settings. You can **only**
                    update settings for a stopped live stream.
                  example: '{"active_speaker_name":true,"display_name":"velit"}'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}:
    get:
      tags:
        - webinars/{webinar Id}
      summary: Get a webinar
      description: >-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing Webinars. Webinar allows a host to broadcast a
        Zoom meeting to up to 10,000 attendees.<br>Use this API to get details
        of a scheduled webinar.<br><br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br> 
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>**Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Unique Identifier that identifies an occurrence of a recurring
            webinar. [Recurring
            webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
            can have a maximum of 50 occurrences. When you create a recurring
            Webinar using [Create a Webinar
            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate),
            you can retrieve the Occurrence ID from the response of the API
            call.
          example: Excepteur aute deserunt occaecat ea
        - name: show_previous_occurrences
          in: query
          schema:
            type: boolean
          description: >-
            Set the value of this field to `true` if you would like to view
            Webinar details of all previous occurrences of a recurring Webinar.
          example: 'true'
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                created_at: '2019-09-13T15:35:00Z'
                duration: 60
                host_id: Labcjskdfsjgfg
                id: 12345678
                join_url: https://zoom.us/j/12345678
                settings:
                  allow_multiple_devices: true
                  alternative_hosts: ''
                  approval_type: 2
                  audio: both
                  auto_recording: local
                  close_registration: true
                  contact_email: example@example.com
                  contact_name: Amal
                  enforce_login: false
                  enforce_login_domains: ''
                  global_dial_in_countries:
                    - US
                  global_dial_in_numbers:
                    - city: New York
                      country: US
                      country_name: US
                      number: +1 00000
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 111111111
                      type: toll
                    - city: San Jose
                      country: US
                      country_name: US
                      number: +1 11111110
                      type: toll
                  hd_video: false
                  hd_video_for_attendees: false
                  send_1080p_video_to_attendees: false
                  host_video: false
                  on_demand: false
                  panelists_video: false
                  practice_session: false
                  question_answer: true
                  registrants_confirmation_email: true
                  registrants_restrict_number: 0
                  show_share_button: true
                  registrants_email_notification: true
                  email_language: en-US
                  panelists_invitation_email_notification: true
                  attendees_and_panelists_reminder_email_notification:
                    enable: true
                    type: 1
                  follow_up_attendees_email_notification:
                    enable: true
                    type: 1
                  follow_up_absentees_email_notification:
                    enable: true
                    type: 1
                start_time: '2019-08-30T22:00:00Z'
                start_url: >-
                  https://zoom.us/s/00000011110?zhghTlUT1Rjd2FXRgh0amxoejNQZ1EiLCJjaWQiOiIifQ.NJ0CXWQ-yhI8Xv01JvxityBtzp3Bt7odMOEG2L8DLmY
                timezone: America/New_York
                topic: Test Webinar
                type: 5
                uuid: nWMHAAAAAAAAAAAAAUDP1A==
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars/{webinar Id}
      summary: Update a webinar
      description: >-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to
        creating and managing Webinars. Webinar allows a host to broadcast a
        Zoom meeting to up to 10,000 attendees.<br>

        Use this API to make updates to a scheduled Webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>

        * Pro or higher plan with a Webinar Add-on.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: sed aute velit
                type:
                  type: integer
                  example: '5'
                start_time:
                  type: string
                  example: '1952-06-04T01:23:47.050Z'
                duration:
                  type: integer
                  example: '66994114'
                timezone:
                  type: string
                  example: Ut eu ut consequat
                password:
                  type: string
                  example: 'qui '
                agenda:
                  type: string
                  example: nostrud Lorem in cupidatat
                tracking_fields:
                  type: string
                  example: >-
                    [{"field":"incididunt qui officia e","value":"in sit
                    ut"},{"field":"culpa eu ullamco et","value":"in"}]
                recurrence:
                  type: string
                  example: >-
                    {"type":1,"repeat_interval":-42944298,"weekly_days":"1","monthly_day":1,"monthly_week":2,"monthly_week_day":6,"end_times":1,"end_date_time":"1992-10-20T15:39:18.192Z"}
                settings:
                  type: string
                  example: >-
                    {"host_video":true,"panelists_video":false,"practice_session":false,"hd_video":false,"hd_video_for_attendees":false,"send_1080p_video_to_attendees":false,"approval_type":2,"registration_type":1,"audio":"both","auto_recording":"none","enforce_login":false,"enforce_login_domains":"ex","alternative_hosts":"sunt
                    ex nostrud dolore
                    dolor","close_registration":false,"show_share_button":false,"allow_multiple_devices":true,"on_demand":false,"global_dial_in_countries":["ut
                    sit dolor ex","laboris
                    incididunt"],"contact_name":"occaecat","contact_email":"nulla
                    laborum
                    voluptate","registrants_confirmation_email":true,"registrants_restrict_number":0,"notify_registrants":false,"post_webinar_survey":false,"survey_url":"sint
                    tempor elit
                    ","registrants_email_notification":false,"meeting_authentication":false,"authentication_option":"in
                    culpa tempor
                    Ut","authentication_domains":"nostrud","authentication_name":"mollit
                    ipsum elit
                    ullamco","question_and_answer":{"enable":true,"allow_anonymous_questions":false,"answer_questions":"all","attendees_can_upvote":true,"attendees_can_comment":true},"email_language":"dolor","panelists_invitation_email_notification":true,"attendees_and_panelists_reminder_email_notification":{"enable":false,"type":0},"follow_up_attendees_email_notification":{"enable":false,"type":7},"follow_up_absentees_email_notification":{"enable":true,"type":7}}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Webinar occurrence id. Support change of agenda, start_time,
            duration, settings: {host_video, panelist_video, hd_video,
            watermark, auto_recording}
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars/{webinar Id}
      summary: Delete a webinar
      description: |-
        Delete a Webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * Pro or higher plan with a Webinar Add-on.
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: cancel_webinar_reminder
          in: query
          schema:
            type: string
          description: >-
            `true`: Notify panelists and registrants about the webinar
            cancellation via email. 


            `false`: Do not send any email notification to webinar registrants
            and panelists. 


            The default value of this field is `false`.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/status:
    put:
      tags:
        - webinars/{webinar Id}
      summary: Update webinar status
      description: >-
        Update a webinar's status. Use this API to end an ongoing
        webinar.<br><br>

        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>

        * The account must hold a valid [Webinar plan](https://zoom.us/webinar).
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ' (This can only be one of end)'
                  example: end
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/batch_registrants:
    post:
      tags:
        - webinars/{webinar Id}
      summary: Perform batch registration
      description: >+
        Use this API to register up to 30 registrants at once for a scheduled
        webinar that requires
        [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).
        <br>


        **Prerequisites:**<br>

        * The webinar host must be a Licensed user.

        * The webinar should be of type `5`, i.e., it should be a scheduled
        webinar. Other types of webinars are not supported by this API.<br><br>

        **Scope:** `webinar:write`, `webinar:write:admin`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`<br>







      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                auto_approve:
                  type: boolean
                  description: >-
                    If a meeting was scheduled with approval_type `1` (manual
                    approval), but you would like to automatically approve the
                    registrants that are added via this API, you can set the
                    value of this field to `true`. 


                    You **cannot** use this field to change approval setting for
                    a meeting  that was originally scheduled with approval_type
                    `0` (automatic approval).
                  example: 'true'
                registrants:
                  type: string
                  example: >-
                    [{"first_name":"fugiat minim
                    irur","email":"7Dj42SOtVGjy@dcvtPuj.duo","last_name":"in"},{"first_name":"velit
                    et","email":"UpcEZ0mWLbpBiNm@VidBoWCpLnguTedyubJXryJlOBqMU.temo","last_name":"non
                    enim"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the webinar.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrants:
                  - registrant_id: conseret14re
                    email: example@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                  - registrant_id: fdgsfh2ey82fuh
                    email: example-2@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                  - registrant_id: hdsfhjf3iwh
                    email: example-3@example.com
                    join_url: ' https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/tracking_sources:
    get:
      tags:
        - webinars/{webinar Id}
      summary: Get webinar tracking sources
      description: >
        [Webinar Registration Tracking
        Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking)
        allow you to see where your registrants are coming from if you share the
        webinar registration page in multiple platforms. You can then use the
        source tracking to see the number of registrants generated from each
        platform.<br> Use this API to list information on all the tracking
        sources of a Webinar.<br>

        **Scopes:** `webinar:read:admin`, `webinar:read`<br>
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites**:<br>

        * [Webinar license](https://zoom.us/webinar).

        * Registration must be required for the Webinar.
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                tracking_sources:
                  - id: '1100011100'
                    source_name: general
                    visitor_count: 2
                    registrationr_count: 1
                    tracking_url: >-
                      https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q
  /webinars/{webinarId}/invite_links:
    post:
      tags:
        - webinars/{webinar Id}
      summary: Create webinar's invite links
      description: >-
        Use this API to create a batch of invitation links for a webinar.


        **Scopes**: `webinar:write:admin`, `webinar:write`</br>**[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`


        **Prerequisites:**


        * Business, Education or API Plan with Webinar add-on.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ttl:
                  type: integer
                  description: undefined
                  example: '7200'
                attendees:
                  type: string
                  description: undefined
                  example: >-
                    [{"name":"cillum fugiat"},{"name":"magna exercitation
                    tempor"}]
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '201':
          description: Created
          headers:
            Content-Location:
              schema:
                type: string
                example: Excepteur aute deserunt occaecat ea
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attendees:
                  - name: Mike Brown
                    join_url: >-
                      https://zoom.us/j/935364234?wp=9a84R6-YFwCCP04ss8PwwImO-3Rm9HSM0RwPn3Ll05WGBEJJDI21846QS-nJuNs7JKcwHTG2VoILGWJkljPTKw.tRxEV0sF4mEBkAaE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/participants:
    get:
      tags:
        - past webinars > {webinar Id}
      summary: List webinar participants
      description: >+
        Use this API to list all the participants who attended a webinar hosted
        in the past. <br>


        **Prerequisites:**

        * Pro or higher plan with a Webinar Add-on.<br>

        **Scopes:** `webinar:read:admin` `webinar:read`<br> 

        <br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`<br>



      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the webinar. You can retrieve the
            value of this field by calling the [list
            webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars)
            API.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_size: 1
                total_records: 1
                next_page_token: mdnf23qbsf4wr
                participants:
                  - id: sdjhf3ui
                    name: Matt
                    user_email: example@example.com
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/instances:
    get:
      tags:
        - past webinars > {webinar Id}
      summary: List past webinar instances
      description: |+
        List past webinar instances.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: number
          required: true
          description: >-
            (Required) The webinar ID in "**long**" format(represented as int64
            data type in JSON).
          example: '-17728915'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                webinars:
                  - uuid: ut44544gisi
                    start_time: '2019-06-07T03:42:34.548Z'
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/polls:
    get:
      tags:
        - past webinars > {webinar Id}
      summary: List past webinar poll results
      description: >+
        The polling feature for webinar allows you to create single choice or
        multiple choice polling questions for your webinars. Use this API to
        retrieve the results for Webinar Polls of a specific Webinar.


        **Prerequisites:**<br>

        * [Webinar license](https://zoom.us/webinar)<br>

        **Scopes**: `webinar:read:admin`, `webinar:read`<br>

        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123456
                uuid: gsdjfhsdfkhjdsf
                start_time: '2019-02-01T12:34:12.660Z'
                title: Learn something new
                questions:
                  - name: Sam S
                    email: example@example.com
                    question_details:
                      - question: How are you?
                        answer: I am wonderful.
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/qa:
    get:
      tags:
        - past webinars > {webinar Id}
      summary: List Q&A of past webinar
      description: >-
        The [Question & Answer
        (Q&A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
        feature for Webinars allows attendees to ask questions during the
        Webinar and for the panelists, co-hosts and host to answer their
        questions.<br>

        Use this API to list Q&A of a specific Webinar.


        **Prerequisites:**<br>

        * [Webinar license](https://zoom.us/webinar)<br>

        **Scopes**: `webinar:read:admin`, `webinar:read`<br>
         <br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar ID or the webinar UUID.  If a webinar ID is
            provided in the request instead of a UUID, the response will be for
            the latest webinar instance.


            If a UUID starts with "/" or contains "//" (example:
            "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID
            before making an API request.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123456
                uuid: gsdjfhsdfkhjdsf
                start_time: '2019-02-01T12:34:12.660Z'
                title: Learn something new
                questions:
                  - name: Sam S
                    email: example@example.com
                    question_details:
                      - question: How are you?
                        answer: I am wonderful.
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/files:
    get:
      tags:
        - past webinars > {webinar Id}
      summary: List past webinar files
      description: >+
        **Note: This API has been deprecated and is no longer supported due to
        GCM encryption updates for security purposes.**


        List files sent via in-meeting chat during a meeting. The in-meeting
        files are deleted after 24 hours of the meeting completion time. 

        <br><br>

        **Scope:** `webinar:read`, `webinar:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                in_meeting_files:
                  - file_name: somefile.txt
                    download_url: somefile.txt/randomurl
                    file_size: 300
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{WebinarUUID}/absentees:
    get:
      tags:
        - past webinars
      summary: Get webinar absentees
      description: |-
        List absentees of a webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: WebinarUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The Webinar UUID. Each Webinar instance will generate its
            own Webinar UUID (i.e., after a Webinar ends, a new UUID will be
            generated for the next instance of the Webinar). Please double
            encode your UUID when using it for API calls if the UUID begins with
            a '/' or contains '//' in it.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_count: 1
                page_number: 1
                page_size: 30
                total_records: 1
                registrants:
                  - id: '24000002122'
                    email: example@example.com
                    first_name: Jill
                    last_name: Chill
                    address: 1800 Amphibious Blvd.
                    city: Mountain View
                    country: US
                    zip: '94045'
                    state: CA
                    phone: '5550100'
                    industry: Food
                    org: Cooking Org
                    job_title: Chef
                    purchasing_time_frame: 1-3 months
                    role_in_purchase_process: Influencer
                    no_of_employees: '10'
                    comments: Looking forward to the Webinar
                    custom_questions:
                      - title: What do you hope to learn from this Webinar?
                        value: >-
                          Look forward to learning how you come up with new
                          recipes and what other services you offer.
                    status: approved
                    create_time: '2019-02-26T23:01:16.899Z'
                    join_url: https://zoom.us/webinar/mywebinarissocooldighdghodghodg
        '300':
          description: Multiple Choices
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /contacts:
    get:
      tags:
        - default
      summary: Search company contacts
      description: >-
        A user under an organization's Zoom account has internal users listed
        under Company Contacts in the Zoom Client. Use this API to search users
        that are in the company contacts of a Zoom account. Using the
        `search_key` query parameter, provide either first name, last name or
        the email address of the user that you would like to search for.
        Optionally, set `query_presence_status` to `true` in order to include
        the presence status of a contact. <br><br>


        **Scopes:** `contact:read:admin`, `contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - name: search_key
          in: query
          schema:
            type: string
          description: >-
            (Required) Provide the keyword - either first name, last name or
            email of the contact whom you have to search for.
          example: Excepteur aute deserunt occaecat ea
        - name: query_presence_status
          in: query
          schema:
            type: string
          description: >-
            Set `query_presence_status` to `true` in order to include the
            presence status of a contact in the response.
          example: Excepteur aute deserunt occaecat ea
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records to be returned with a single API call.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 1
                next_page_token: ' '
                contacts:
                  - id: isds324bdfsf
                    email: example@example.com
                    first_name: John
                    last_name: Doe
                    presence_status: Offline
                    phone_number: '15550100'
                    sip_phone_number: '11111111'
                    direct_numbers:
                      - 111111
                      - 222222
                    extension_number: '010'
                    im_group_id: fhksdhfew34hjds
                    im_group_name: Engineering
  /sip_trunk/numbers:
    get:
      tags:
        - default
      summary: List SIP trunk numbers
      description: >-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network
        connection specifically designed to make and deliver phone calls) over a
        direct and private connection between the customer’s network and the
        Zoom cloud. Meeting participants that dial into a meeting or have the
        meeting call them, and are On-Net from the perspective of the customers'
        IP telephony network, will be connected over this trunk rather than over
        the PSTN. <br><br>Use this API to list all the numbers that are
        configured for SIP Connected Audio in a Zoom Account.


        **Prerequisites:**<br>

        * Pro or a higher account with SIP Connected Audio plan enabled.

        * The account must be a master account<br>

        **Scopes:** `sip_trunk:master`
         
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      security:
        - oauth2Auth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: 1
                phone_numbers:
                  - number: '45345545'
                    country: US
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /live_meetings/{meetingId}/events:
    patch:
      tags:
        - default
      summary: Use in-Meeting recording controls
      description: >-
        Use this API to control the
        [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls)
        **recording features** such as starting a recording, stopping a
        recording, pausing a recording, and resuming a recording. This API only
        works for Cloud Recordings and not for local recordings.



        **Prerequisite:**

        * The meeting must be a live meeting.

        * Cloud Recording must be enabled.

        * The user using this API must either be the host or alternative host of
        the meeting.


        **Scopes:** `meeting:write`, `meeting:write:admin`, `meeting:master`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: >+
                    The method that you would like to control. The value of this
                    field can be one of the following:

                    * `recording.start`: Provide this value if you would like to
                    start the recording.<br><br>

                    * `recording.stop`: Provide this value if you would like to
                    stop the recording.<br><br>

                    * `recording.pause`: Provide this value if you would like to
                    pause the recording.<br><br>

                    * `recording.resume`: Provide this value if you would like
                    to resume the recording that was previously paused.



                  example: labore
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the live meeting.
          example: Excepteur aute deserunt occaecat ea
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /api/download/billing/invoices/{invoiceId}:
    get:
      tags:
        - default
      summary: Download an invoice file
      description: >-
        Use this API to download a Zoom account’s
        [billed](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing)
        invoice file, in PDF format. To get an account’s invoice ID, use the
        **[List billing
        invoices](https://marketplace.zoom.us/docs/api-reference/zoom-api/billing/accountbillinginvoices)**
        API.


        **Scopes:** `billing:master`<br>**Rate Limits:**

        * You can make **one** request to this API every **30 minutes** until
        the daily limit is reached.

        * This API has a daily limit of **100 requests per account**.
      parameters:
        - name: invoiceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: Excepteur aute deserunt occaecat ea
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /archive_files:
    get:
      tags:
        - default
      summary: List archived files
      description: >-
        Use this API to retrieve archived meeting or webinar files of an
        account. 

         Zoom’s [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) allows account administrators to set up an automated mechanism to record, collect, and archive meeting data to a 3rd-party platform of their choice to satisfy FINRA and/or other compliance requirements. 

        **Scopes:** `recording:read:admin` <br> **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium` 


        **Prerequisites:** 

        * Follow the [enablement
        process](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data#h_01ENPBD3WR68D7FAKTBY92SG45)
        to access the archiving feature.
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: Excepteur aute deserunt occaecat ea
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for the query in "yyyy-MM-dd'T'HH:mm:ss'Z'" format. The
            duration for the query defined using the "from" and "to" parameters
            should not exceed 7 days as this API only provides a week's data at
            once.
          example: Excepteur aute deserunt occaecat ea
        - name: to
          in: query
          schema:
            type: string
          description: 'End date for the query in "yyyy-MM-dd''T''HH:mm:ss''Z''" format. '
          example: Excepteur aute deserunt occaecat ea
        - name: query_date_type
          in: query
          schema:
            type: string
          description: The query date type for the `from` and `to` parameters.
          example: meeting_start_time
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: '2021-03-11T05:41:36Z'
                to: '2021-03-18T05:41:36Z'
                page_size: 30
                next_page_token: ''
                meetings:
                  - uuid: yO3dfhh3t467UkQ==
                    id: 553068284
                    host_id: Dhjdfgdkg8w
                    topic: Zoom Meeting
                    type: 1
                    start_time: '2021-03-12T01:57:27Z'
                    timezone: ''
                    duration: 3
                    total_size: 364463
                    recording_count: 2
                    archive_files:
                      - id: 55hfgsd-sd8e2bd7255
                        file_type: M4A
                        file_extension: M4A
                        file_size: 165743
                        download_url: >-
                          https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh
                        status: completed
                        recording_type: audio_only
                      - id: 9c5daa5b-34a1-40e8-8947-a11be5e373a7
                        file_type: MP4
                        file_extension: MP4
                        file_size: 198720
                        download_url: >-
                          https://zoom.us/rec/archive/download/eXy782Ua9dghjhPvao.bUFwLAgQrFOjfOjr
                        status: completed
                        recording_type: shared_screen_with_speaker_view
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
